"use strict";
(self.webpackChunkvalentine_silvia =
  self.webpackChunkvalentine_silvia || []).push([
  [179],
  {
    572: () => {
      function we(t) {
        return "function" == typeof t;
      }
      function ta(t) {
        const e = t((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const Ul = ta(
        (t) =>
          function (e) {
            t(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((i, r) => `${r + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = e);
          }
      );
      function Fs(t, n) {
        if (t) {
          const e = t.indexOf(n);
          0 <= e && t.splice(e, 1);
        }
      }
      class Ve {
        constructor(n) {
          (this.initialTeardown = n),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let n;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const s of e) s.remove(this);
              else e.remove(this);
            const { initialTeardown: i } = this;
            if (we(i))
              try {
                i();
              } catch (s) {
                n = s instanceof Ul ? s.errors : [s];
              }
            const { _finalizers: r } = this;
            if (r) {
              this._finalizers = null;
              for (const s of r)
                try {
                  Lv(s);
                } catch (o) {
                  (n = n ?? []),
                    o instanceof Ul ? (n = [...n, ...o.errors]) : n.push(o);
                }
            }
            if (n) throw new Ul(n);
          }
        }
        add(n) {
          var e;
          if (n && n !== this)
            if (this.closed) Lv(n);
            else {
              if (n instanceof Ve) {
                if (n.closed || n._hasParent(this)) return;
                n._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                n
              );
            }
        }
        _hasParent(n) {
          const { _parentage: e } = this;
          return e === n || (Array.isArray(e) && e.includes(n));
        }
        _addParent(n) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(n), e) : e ? [e, n] : n;
        }
        _removeParent(n) {
          const { _parentage: e } = this;
          e === n ? (this._parentage = null) : Array.isArray(e) && Fs(e, n);
        }
        remove(n) {
          const { _finalizers: e } = this;
          e && Fs(e, n), n instanceof Ve && n._removeParent(this);
        }
      }
      Ve.EMPTY = (() => {
        const t = new Ve();
        return (t.closed = !0), t;
      })();
      const Fv = Ve.EMPTY;
      function Pv(t) {
        return (
          t instanceof Ve ||
          (t && "closed" in t && we(t.remove) && we(t.add) && we(t.unsubscribe))
        );
      }
      function Lv(t) {
        we(t) ? t() : t.unsubscribe();
      }
      const $r = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        zl = {
          setTimeout(t, n, ...e) {
            const { delegate: i } = zl;
            return i?.setTimeout
              ? i.setTimeout(t, n, ...e)
              : setTimeout(t, n, ...e);
          },
          clearTimeout(t) {
            const { delegate: n } = zl;
            return (n?.clearTimeout || clearTimeout)(t);
          },
          delegate: void 0,
        };
      function Nv(t) {
        zl.setTimeout(() => {
          const { onUnhandledError: n } = $r;
          if (!n) throw t;
          n(t);
        });
      }
      function na() {}
      const YI = Eh("C", void 0, void 0);
      function Eh(t, n, e) {
        return { kind: t, value: n, error: e };
      }
      let Wr = null;
      function $l(t) {
        if ($r.useDeprecatedSynchronousErrorHandling) {
          const n = !Wr;
          if ((n && (Wr = { errorThrown: !1, error: null }), t(), n)) {
            const { errorThrown: e, error: i } = Wr;
            if (((Wr = null), e)) throw i;
          }
        } else t();
      }
      class Ah extends Ve {
        constructor(n) {
          super(),
            (this.isStopped = !1),
            n
              ? ((this.destination = n), Pv(n) && n.add(this))
              : (this.destination = tR);
        }
        static create(n, e, i) {
          return new ia(n, e, i);
        }
        next(n) {
          this.isStopped
            ? Th(
                (function KI(t) {
                  return Eh("N", t, void 0);
                })(n),
                this
              )
            : this._next(n);
        }
        error(n) {
          this.isStopped
            ? Th(
                (function QI(t) {
                  return Eh("E", void 0, t);
                })(n),
                this
              )
            : ((this.isStopped = !0), this._error(n));
        }
        complete() {
          this.isStopped
            ? Th(YI, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(n) {
          this.destination.next(n);
        }
        _error(n) {
          try {
            this.destination.error(n);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const XI = Function.prototype.bind;
      function kh(t, n) {
        return XI.call(t, n);
      }
      class JI {
        constructor(n) {
          this.partialObserver = n;
        }
        next(n) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(n);
            } catch (i) {
              Wl(i);
            }
        }
        error(n) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(n);
            } catch (i) {
              Wl(i);
            }
          else Wl(n);
        }
        complete() {
          const { partialObserver: n } = this;
          if (n.complete)
            try {
              n.complete();
            } catch (e) {
              Wl(e);
            }
        }
      }
      class ia extends Ah {
        constructor(n, e, i) {
          let r;
          if ((super(), we(n) || !n))
            r = {
              next: n ?? void 0,
              error: e ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let s;
            this && $r.useDeprecatedNextContext
              ? ((s = Object.create(n)),
                (s.unsubscribe = () => this.unsubscribe()),
                (r = {
                  next: n.next && kh(n.next, s),
                  error: n.error && kh(n.error, s),
                  complete: n.complete && kh(n.complete, s),
                }))
              : (r = n);
          }
          this.destination = new JI(r);
        }
      }
      function Wl(t) {
        $r.useDeprecatedSynchronousErrorHandling
          ? (function ZI(t) {
              $r.useDeprecatedSynchronousErrorHandling &&
                Wr &&
                ((Wr.errorThrown = !0), (Wr.error = t));
            })(t)
          : Nv(t);
      }
      function Th(t, n) {
        const { onStoppedNotification: e } = $r;
        e && zl.setTimeout(() => e(t, n));
      }
      const tR = {
          closed: !0,
          next: na,
          error: function eR(t) {
            throw t;
          },
          complete: na,
        },
        Ih =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function gr(t) {
        return t;
      }
      function Bv(t) {
        return 0 === t.length
          ? gr
          : 1 === t.length
          ? t[0]
          : function (e) {
              return t.reduce((i, r) => r(i), e);
            };
      }
      let Pe = (() => {
        class t {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const i = new t();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, r) {
            const s = (function rR(t) {
              return (
                (t && t instanceof Ah) ||
                ((function iR(t) {
                  return t && we(t.next) && we(t.error) && we(t.complete);
                })(t) &&
                  Pv(t))
              );
            })(e)
              ? e
              : new ia(e, i, r);
            return (
              $l(() => {
                const { operator: o, source: a } = this;
                s.add(
                  o
                    ? o.call(s, a)
                    : a
                    ? this._subscribe(s)
                    : this._trySubscribe(s)
                );
              }),
              s
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              e.error(i);
            }
          }
          forEach(e, i) {
            return new (i = Vv(i))((r, s) => {
              const o = new ia({
                next: (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    s(l), o.unsubscribe();
                  }
                },
                error: s,
                complete: r,
              });
              this.subscribe(o);
            });
          }
          _subscribe(e) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(e);
          }
          [Ih]() {
            return this;
          }
          pipe(...e) {
            return Bv(e)(this);
          }
          toPromise(e) {
            return new (e = Vv(e))((i, r) => {
              let s;
              this.subscribe(
                (o) => (s = o),
                (o) => r(o),
                () => i(s)
              );
            });
          }
        }
        return (t.create = (n) => new t(n)), t;
      })();
      function Vv(t) {
        var n;
        return null !== (n = t ?? $r.Promise) && void 0 !== n ? n : Promise;
      }
      const sR = ta(
        (t) =>
          function () {
            t(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let B = (() => {
        class t extends Pe {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const i = new Hv(this, this);
            return (i.operator = e), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new sR();
          }
          next(e) {
            $l(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(e);
              }
            });
          }
          error(e) {
            $l(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(e);
              }
            });
          }
          complete() {
            $l(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: i, isStopped: r, observers: s } = this;
            return i || r
              ? Fv
              : ((this.currentObservers = null),
                s.push(e),
                new Ve(() => {
                  (this.currentObservers = null), Fs(s, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: i, thrownError: r, isStopped: s } = this;
            i ? e.error(r) : s && e.complete();
          }
          asObservable() {
            const e = new Pe();
            return (e.source = this), e;
          }
        }
        return (t.create = (n, e) => new Hv(n, e)), t;
      })();
      class Hv extends B {
        constructor(n, e) {
          super(), (this.destination = n), (this.source = e);
        }
        next(n) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === i ||
            i.call(e, n);
        }
        error(n) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === i ||
            i.call(e, n);
        }
        complete() {
          var n, e;
          null ===
            (e =
              null === (n = this.destination) || void 0 === n
                ? void 0
                : n.complete) ||
            void 0 === e ||
            e.call(n);
        }
        _subscribe(n) {
          var e, i;
          return null !==
            (i =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(n)) && void 0 !== i
            ? i
            : Fv;
        }
      }
      function jv(t) {
        return we(t?.lift);
      }
      function Ze(t) {
        return (n) => {
          if (jv(n))
            return n.lift(function (e) {
              try {
                return t(e, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function Ye(t, n, e, i, r) {
        return new oR(t, n, e, i, r);
      }
      class oR extends Ah {
        constructor(n, e, i, r, s, o) {
          super(n),
            (this.onFinalize = s),
            (this.shouldUnsubscribe = o),
            (this._next = e
              ? function (a) {
                  try {
                    e(a);
                  } catch (l) {
                    n.error(l);
                  }
                }
              : super._next),
            (this._error = r
              ? function (a) {
                  try {
                    r(a);
                  } catch (l) {
                    n.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (a) {
                    n.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var n;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (n = this.onFinalize) ||
                  void 0 === n ||
                  n.call(this));
          }
        }
      }
      function q(t, n) {
        return Ze((e, i) => {
          let r = 0;
          e.subscribe(
            Ye(i, (s) => {
              i.next(t.call(n, s, r++));
            })
          );
        });
      }
      function _r(t) {
        return this instanceof _r ? ((this.v = t), this) : new _r(t);
      }
      function $v(t, n, e) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var r,
          i = e.apply(t, n || []),
          s = [];
        return (
          (r = {}),
          o("next"),
          o("throw"),
          o("return"),
          (r[Symbol.asyncIterator] = function () {
            return this;
          }),
          r
        );
        function o(f) {
          i[f] &&
            (r[f] = function (p) {
              return new Promise(function (m, g) {
                s.push([f, p, m, g]) > 1 || a(f, p);
              });
            });
        }
        function a(f, p) {
          try {
            !(function l(f) {
              f.value instanceof _r
                ? Promise.resolve(f.value.v).then(c, d)
                : u(s[0][2], f);
            })(i[f](p));
          } catch (m) {
            u(s[0][3], m);
          }
        }
        function c(f) {
          a("next", f);
        }
        function d(f) {
          a("throw", f);
        }
        function u(f, p) {
          f(p), s.shift(), s.length && a(s[0][0], s[0][1]);
        }
      }
      function Wv(t) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var e,
          n = t[Symbol.asyncIterator];
        return n
          ? n.call(t)
          : ((t = (function Ph(t) {
              var n = "function" == typeof Symbol && Symbol.iterator,
                e = n && t[n],
                i = 0;
              if (e) return e.call(t);
              if (t && "number" == typeof t.length)
                return {
                  next: function () {
                    return (
                      t && i >= t.length && (t = void 0),
                      { value: t && t[i++], done: !t }
                    );
                  },
                };
              throw new TypeError(
                n
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(t)),
            (e = {}),
            i("next"),
            i("throw"),
            i("return"),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function i(s) {
          e[s] =
            t[s] &&
            function (o) {
              return new Promise(function (a, l) {
                !(function r(s, o, a, l) {
                  Promise.resolve(l).then(function (c) {
                    s({ value: c, done: a });
                  }, o);
                })(a, l, (o = t[s](o)).done, o.value);
              });
            };
        }
      }
      "function" == typeof SuppressedError && SuppressedError;
      const Lh = (t) =>
        t && "number" == typeof t.length && "function" != typeof t;
      function qv(t) {
        return we(t?.then);
      }
      function Yv(t) {
        return we(t[Ih]);
      }
      function Qv(t) {
        return Symbol.asyncIterator && we(t?.[Symbol.asyncIterator]);
      }
      function Kv(t) {
        return new TypeError(
          `You provided ${
            null !== t && "object" == typeof t ? "an invalid object" : `'${t}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const Zv = (function ER() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function Xv(t) {
        return we(t?.[Zv]);
      }
      function Jv(t) {
        return $v(this, arguments, function* () {
          const e = t.getReader();
          try {
            for (;;) {
              const { value: i, done: r } = yield _r(e.read());
              if (r) return yield _r(void 0);
              yield yield _r(i);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function ey(t) {
        return we(t?.getReader);
      }
      function Nt(t) {
        if (t instanceof Pe) return t;
        if (null != t) {
          if (Yv(t))
            return (function AR(t) {
              return new Pe((n) => {
                const e = t[Ih]();
                if (we(e.subscribe)) return e.subscribe(n);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(t);
          if (Lh(t))
            return (function kR(t) {
              return new Pe((n) => {
                for (let e = 0; e < t.length && !n.closed; e++) n.next(t[e]);
                n.complete();
              });
            })(t);
          if (qv(t))
            return (function TR(t) {
              return new Pe((n) => {
                t.then(
                  (e) => {
                    n.closed || (n.next(e), n.complete());
                  },
                  (e) => n.error(e)
                ).then(null, Nv);
              });
            })(t);
          if (Qv(t)) return ty(t);
          if (Xv(t))
            return (function IR(t) {
              return new Pe((n) => {
                for (const e of t) if ((n.next(e), n.closed)) return;
                n.complete();
              });
            })(t);
          if (ey(t))
            return (function RR(t) {
              return ty(Jv(t));
            })(t);
        }
        throw Kv(t);
      }
      function ty(t) {
        return new Pe((n) => {
          (function OR(t, n) {
            var e, i, r, s;
            return (function Uv(t, n, e, i) {
              return new (e || (e = Promise))(function (s, o) {
                function a(d) {
                  try {
                    c(i.next(d));
                  } catch (u) {
                    o(u);
                  }
                }
                function l(d) {
                  try {
                    c(i.throw(d));
                  } catch (u) {
                    o(u);
                  }
                }
                function c(d) {
                  d.done
                    ? s(d.value)
                    : (function r(s) {
                        return s instanceof e
                          ? s
                          : new e(function (o) {
                              o(s);
                            });
                      })(d.value).then(a, l);
                }
                c((i = i.apply(t, n || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (e = Wv(t); !(i = yield e.next()).done; )
                  if ((n.next(i.value), n.closed)) return;
              } catch (o) {
                r = { error: o };
              } finally {
                try {
                  i && !i.done && (s = e.return) && (yield s.call(e));
                } finally {
                  if (r) throw r.error;
                }
              }
              n.complete();
            });
          })(t, n).catch((e) => n.error(e));
        });
      }
      function Li(t, n, e, i = 0, r = !1) {
        const s = n.schedule(function () {
          e(), r ? t.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((t.add(s), !r)) return s;
      }
      function mt(t, n, e = 1 / 0) {
        return we(n)
          ? mt((i, r) => q((s, o) => n(i, s, r, o))(Nt(t(i, r))), e)
          : ("number" == typeof n && (e = n),
            Ze((i, r) =>
              (function FR(t, n, e, i, r, s, o, a) {
                const l = [];
                let c = 0,
                  d = 0,
                  u = !1;
                const f = () => {
                    u && !l.length && !c && n.complete();
                  },
                  p = (g) => (c < i ? m(g) : l.push(g)),
                  m = (g) => {
                    s && n.next(g), c++;
                    let v = !1;
                    Nt(e(g, d++)).subscribe(
                      Ye(
                        n,
                        (b) => {
                          r?.(b), s ? p(b) : n.next(b);
                        },
                        () => {
                          v = !0;
                        },
                        void 0,
                        () => {
                          if (v)
                            try {
                              for (c--; l.length && c < i; ) {
                                const b = l.shift();
                                o ? Li(n, o, () => m(b)) : m(b);
                              }
                              f();
                            } catch (b) {
                              n.error(b);
                            }
                        }
                      )
                    );
                  };
                return (
                  t.subscribe(
                    Ye(n, p, () => {
                      (u = !0), f();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(i, r, t, e)
            ));
      }
      function Ps(t = 1 / 0) {
        return mt(gr, t);
      }
      const ui = new Pe((t) => t.complete());
      function ny(t) {
        return t && we(t.schedule);
      }
      function Nh(t) {
        return t[t.length - 1];
      }
      function iy(t) {
        return we(Nh(t)) ? t.pop() : void 0;
      }
      function ra(t) {
        return ny(Nh(t)) ? t.pop() : void 0;
      }
      function ry(t, n = 0) {
        return Ze((e, i) => {
          e.subscribe(
            Ye(
              i,
              (r) => Li(i, t, () => i.next(r), n),
              () => Li(i, t, () => i.complete(), n),
              (r) => Li(i, t, () => i.error(r), n)
            )
          );
        });
      }
      function sy(t, n = 0) {
        return Ze((e, i) => {
          i.add(t.schedule(() => e.subscribe(i), n));
        });
      }
      function oy(t, n) {
        if (!t) throw new Error("Iterable cannot be null");
        return new Pe((e) => {
          Li(e, n, () => {
            const i = t[Symbol.asyncIterator]();
            Li(
              e,
              n,
              () => {
                i.next().then((r) => {
                  r.done ? e.complete() : e.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function at(t, n) {
        return n
          ? (function GR(t, n) {
              if (null != t) {
                if (Yv(t))
                  return (function NR(t, n) {
                    return Nt(t).pipe(sy(n), ry(n));
                  })(t, n);
                if (Lh(t))
                  return (function VR(t, n) {
                    return new Pe((e) => {
                      let i = 0;
                      return n.schedule(function () {
                        i === t.length
                          ? e.complete()
                          : (e.next(t[i++]), e.closed || this.schedule());
                      });
                    });
                  })(t, n);
                if (qv(t))
                  return (function BR(t, n) {
                    return Nt(t).pipe(sy(n), ry(n));
                  })(t, n);
                if (Qv(t)) return oy(t, n);
                if (Xv(t))
                  return (function HR(t, n) {
                    return new Pe((e) => {
                      let i;
                      return (
                        Li(e, n, () => {
                          (i = t[Zv]()),
                            Li(
                              e,
                              n,
                              () => {
                                let r, s;
                                try {
                                  ({ value: r, done: s } = i.next());
                                } catch (o) {
                                  return void e.error(o);
                                }
                                s ? e.complete() : e.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => we(i?.return) && i.return()
                      );
                    });
                  })(t, n);
                if (ey(t))
                  return (function jR(t, n) {
                    return oy(Jv(t), n);
                  })(t, n);
              }
              throw Kv(t);
            })(t, n)
          : Nt(t);
      }
      function yt(...t) {
        const n = ra(t),
          e = (function LR(t, n) {
            return "number" == typeof Nh(t) ? t.pop() : n;
          })(t, 1 / 0),
          i = t;
        return i.length ? (1 === i.length ? Nt(i[0]) : Ps(e)(at(i, n))) : ui;
      }
      function Bh(t = {}) {
        const {
          connector: n = () => new B(),
          resetOnError: e = !0,
          resetOnComplete: i = !0,
          resetOnRefCountZero: r = !0,
        } = t;
        return (s) => {
          let o,
            a,
            l,
            c = 0,
            d = !1,
            u = !1;
          const f = () => {
              a?.unsubscribe(), (a = void 0);
            },
            p = () => {
              f(), (o = l = void 0), (d = u = !1);
            },
            m = () => {
              const g = o;
              p(), g?.unsubscribe();
            };
          return Ze((g, v) => {
            c++, !u && !d && f();
            const b = (l = l ?? n());
            v.add(() => {
              c--, 0 === c && !u && !d && (a = Vh(m, r));
            }),
              b.subscribe(v),
              !o &&
                c > 0 &&
                ((o = new ia({
                  next: (k) => b.next(k),
                  error: (k) => {
                    (u = !0), f(), (a = Vh(p, e, k)), b.error(k);
                  },
                  complete: () => {
                    (d = !0), f(), (a = Vh(p, i)), b.complete();
                  },
                })),
                Nt(g).subscribe(o));
          })(s);
        };
      }
      function Vh(t, n, ...e) {
        if (!0 === n) return void t();
        if (!1 === n) return;
        const i = new ia({
          next: () => {
            i.unsubscribe(), t();
          },
        });
        return Nt(n(...e)).subscribe(i);
      }
      function ze(t) {
        for (let n in t) if (t[n] === ze) return n;
        throw Error("Could not find renamed property on target object.");
      }
      function Hh(t, n) {
        for (const e in n)
          n.hasOwnProperty(e) && !t.hasOwnProperty(e) && (t[e] = n[e]);
      }
      function $e(t) {
        if ("string" == typeof t) return t;
        if (Array.isArray(t)) return "[" + t.map($e).join(", ") + "]";
        if (null == t) return "" + t;
        if (t.overriddenName) return `${t.overriddenName}`;
        if (t.name) return `${t.name}`;
        const n = t.toString();
        if (null == n) return "" + n;
        const e = n.indexOf("\n");
        return -1 === e ? n : n.substring(0, e);
      }
      function jh(t, n) {
        return null == t || "" === t
          ? null === n
            ? ""
            : n
          : null == n || "" === n
          ? t
          : t + " " + n;
      }
      const UR = ze({ __forward_ref__: ze });
      function me(t) {
        return (
          (t.__forward_ref__ = me),
          (t.toString = function () {
            return $e(this());
          }),
          t
        );
      }
      function re(t) {
        return Gh(t) ? t() : t;
      }
      function Gh(t) {
        return (
          "function" == typeof t &&
          t.hasOwnProperty(UR) &&
          t.__forward_ref__ === me
        );
      }
      class M extends Error {
        constructor(n, e) {
          super(
            (function ql(t, n) {
              return `NG0${Math.abs(t)}${n ? ": " + n.trim() : ""}`;
            })(n, e)
          ),
            (this.code = n);
        }
      }
      function le(t) {
        return "string" == typeof t ? t : null == t ? "" : String(t);
      }
      function Yl(t, n) {
        throw new M(-201, !1);
      }
      function fn(t, n) {
        null == t &&
          (function Be(t, n, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${t}` +
                (null == i ? "" : ` [Expected=> ${e} ${i} ${n} <=Actual]`)
            );
          })(n, t, null, "!=");
      }
      function D(t) {
        return {
          token: t.token,
          providedIn: t.providedIn || null,
          factory: t.factory,
          value: void 0,
        };
      }
      function O(t) {
        return { providers: t.providers || [], imports: t.imports || [] };
      }
      function Uh(t) {
        return ay(t, Ql) || ay(t, cy);
      }
      function ay(t, n) {
        return t.hasOwnProperty(n) ? t[n] : null;
      }
      function ly(t) {
        return t && (t.hasOwnProperty(zh) || t.hasOwnProperty(ZR))
          ? t[zh]
          : null;
      }
      const Ql = ze({ ɵprov: ze }),
        zh = ze({ ɵinj: ze }),
        cy = ze({ ngInjectableDef: ze }),
        ZR = ze({ ngInjectorDef: ze });
      var J = (() => (
        ((J = J || {})[(J.Default = 0)] = "Default"),
        (J[(J.Host = 1)] = "Host"),
        (J[(J.Self = 2)] = "Self"),
        (J[(J.SkipSelf = 4)] = "SkipSelf"),
        (J[(J.Optional = 8)] = "Optional"),
        J
      ))();
      let $h;
      function On(t) {
        const n = $h;
        return ($h = t), n;
      }
      function dy(t, n, e) {
        const i = Uh(t);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & J.Optional
          ? null
          : void 0 !== n
          ? n
          : void Yl($e(t));
      }
      function vr(t) {
        return { toString: t }.toString();
      }
      var Qn = (() => (
          ((Qn = Qn || {})[(Qn.OnPush = 0)] = "OnPush"),
          (Qn[(Qn.Default = 1)] = "Default"),
          Qn
        ))(),
        Kn = (() => {
          return (
            ((t = Kn || (Kn = {}))[(t.Emulated = 0)] = "Emulated"),
            (t[(t.None = 2)] = "None"),
            (t[(t.ShadowDom = 3)] = "ShadowDom"),
            Kn
          );
          var t;
        })();
      const He = (() =>
          (typeof globalThis < "u" && globalThis) ||
          (typeof global < "u" && global) ||
          (typeof window < "u" && window) ||
          (typeof self < "u" &&
            typeof WorkerGlobalScope < "u" &&
            self instanceof WorkerGlobalScope &&
            self))(),
        Ls = {},
        Ne = [],
        Kl = ze({ ɵcmp: ze }),
        Wh = ze({ ɵdir: ze }),
        Zl = ze({ ɵpipe: ze }),
        uy = ze({ ɵmod: ze }),
        Bi = ze({ ɵfac: ze }),
        sa = ze({ __NG_ELEMENT_ID__: ze });
      let JR = 0;
      function te(t) {
        return vr(() => {
          const e = !0 === t.standalone,
            i = {},
            r = {
              type: t.type,
              providersResolver: null,
              decls: t.decls,
              vars: t.vars,
              factory: null,
              template: t.template || null,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              hostBindings: t.hostBindings || null,
              hostVars: t.hostVars || 0,
              hostAttrs: t.hostAttrs || null,
              contentQueries: t.contentQueries || null,
              declaredInputs: i,
              inputs: null,
              outputs: null,
              exportAs: t.exportAs || null,
              onPush: t.changeDetection === Qn.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              standalone: e,
              dependencies: (e && t.dependencies) || null,
              getStandaloneInjector: null,
              selectors: t.selectors || Ne,
              viewQuery: t.viewQuery || null,
              features: t.features || null,
              data: t.data || {},
              encapsulation: t.encapsulation || Kn.Emulated,
              id: "c" + JR++,
              styles: t.styles || Ne,
              _: null,
              setInput: null,
              schemas: t.schemas || null,
              tView: null,
            },
            s = t.dependencies,
            o = t.features;
          return (
            (r.inputs = py(t.inputs, i)),
            (r.outputs = py(t.outputs)),
            o && o.forEach((a) => a(r)),
            (r.directiveDefs = s
              ? () => ("function" == typeof s ? s() : s).map(hy).filter(fy)
              : null),
            (r.pipeDefs = s
              ? () => ("function" == typeof s ? s() : s).map(Yt).filter(fy)
              : null),
            r
          );
        });
      }
      function hy(t) {
        return je(t) || qt(t);
      }
      function fy(t) {
        return null !== t;
      }
      function P(t) {
        return vr(() => ({
          type: t.type,
          bootstrap: t.bootstrap || Ne,
          declarations: t.declarations || Ne,
          imports: t.imports || Ne,
          exports: t.exports || Ne,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        }));
      }
      function py(t, n) {
        if (null == t) return Ls;
        const e = {};
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            let r = t[i],
              s = r;
            Array.isArray(r) && ((s = r[1]), (r = r[0])),
              (e[r] = i),
              n && (n[r] = s);
          }
        return e;
      }
      const y = te;
      function je(t) {
        return t[Kl] || null;
      }
      function qt(t) {
        return t[Wh] || null;
      }
      function Yt(t) {
        return t[Zl] || null;
      }
      function pn(t, n) {
        const e = t[uy] || null;
        if (!e && !0 === n)
          throw new Error(`Type ${$e(t)} does not have '\u0275mod' property.`);
        return e;
      }
      function sn(t) {
        return Array.isArray(t) && "object" == typeof t[1];
      }
      function Xn(t) {
        return Array.isArray(t) && !0 === t[1];
      }
      function Qh(t) {
        return 0 != (8 & t.flags);
      }
      function tc(t) {
        return 2 == (2 & t.flags);
      }
      function nc(t) {
        return 1 == (1 & t.flags);
      }
      function Jn(t) {
        return null !== t.template;
      }
      function sO(t) {
        return 0 != (256 & t[2]);
      }
      function Zr(t, n) {
        return t.hasOwnProperty(Bi) ? t[Bi] : null;
      }
      class lO {
        constructor(n, e, i) {
          (this.previousValue = n),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function ct() {
        return _y;
      }
      function _y(t) {
        return t.type.prototype.ngOnChanges && (t.setInput = dO), cO;
      }
      function cO() {
        const t = yy(this),
          n = t?.current;
        if (n) {
          const e = t.previous;
          if (e === Ls) t.previous = n;
          else for (let i in n) e[i] = n[i];
          (t.current = null), this.ngOnChanges(n);
        }
      }
      function dO(t, n, e, i) {
        const r =
            yy(t) ||
            (function uO(t, n) {
              return (t[vy] = n);
            })(t, { previous: Ls, current: null }),
          s = r.current || (r.current = {}),
          o = r.previous,
          a = this.declaredInputs[e],
          l = o[a];
        (s[a] = new lO(l && l.currentValue, n, o === Ls)), (t[i] = n);
      }
      ct.ngInherit = !0;
      const vy = "__ngSimpleChanges__";
      function yy(t) {
        return t[vy] || null;
      }
      function bt(t) {
        for (; Array.isArray(t); ) t = t[0];
        return t;
      }
      function ic(t, n) {
        return bt(n[t]);
      }
      function Ln(t, n) {
        return bt(n[t.index]);
      }
      function ef(t, n) {
        return t.data[n];
      }
      function gn(t, n) {
        const e = n[t];
        return sn(e) ? e : e[0];
      }
      function by(t) {
        return 4 == (4 & t[2]);
      }
      function rc(t) {
        return 64 == (64 & t[2]);
      }
      function yr(t, n) {
        return null == n ? null : t[n];
      }
      function Cy(t) {
        t[18] = 0;
      }
      function tf(t, n) {
        t[5] += n;
        let e = t,
          i = t[3];
        for (
          ;
          null !== i && ((1 === n && 1 === e[5]) || (-1 === n && 0 === e[5]));

        )
          (i[5] += n), (e = i), (i = i[3]);
      }
      const ae = { lFrame: Ty(null), bindingsEnabled: !0 };
      function wy() {
        return ae.bindingsEnabled;
      }
      function S() {
        return ae.lFrame.lView;
      }
      function Te() {
        return ae.lFrame.tView;
      }
      function hi(t) {
        return (ae.lFrame.contextLView = t), t[8];
      }
      function fi(t) {
        return (ae.lFrame.contextLView = null), t;
      }
      function Et() {
        let t = Dy();
        for (; null !== t && 64 === t.type; ) t = t.parent;
        return t;
      }
      function Dy() {
        return ae.lFrame.currentTNode;
      }
      function pi(t, n) {
        const e = ae.lFrame;
        (e.currentTNode = t), (e.isParent = n);
      }
      function nf() {
        return ae.lFrame.isParent;
      }
      function rf() {
        ae.lFrame.isParent = !1;
      }
      function Gs() {
        return ae.lFrame.bindingIndex++;
      }
      function MO(t, n) {
        const e = ae.lFrame;
        (e.bindingIndex = e.bindingRootIndex = t), sf(n);
      }
      function sf(t) {
        ae.lFrame.currentDirectiveIndex = t;
      }
      function af(t) {
        const n = ae.lFrame.currentDirectiveIndex;
        return -1 === n ? null : t[n];
      }
      function Ey() {
        return ae.lFrame.currentQueryIndex;
      }
      function lf(t) {
        ae.lFrame.currentQueryIndex = t;
      }
      function EO(t) {
        const n = t[1];
        return 2 === n.type ? n.declTNode : 1 === n.type ? t[6] : null;
      }
      function Ay(t, n, e) {
        if (e & J.SkipSelf) {
          let r = n,
            s = t;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              e & J.Host ||
              ((r = EO(s)), null === r || ((s = s[15]), 10 & r.type)));

          );
          if (null === r) return !1;
          (n = r), (t = s);
        }
        const i = (ae.lFrame = ky());
        return (i.currentTNode = n), (i.lView = t), !0;
      }
      function cf(t) {
        const n = ky(),
          e = t[1];
        (ae.lFrame = n),
          (n.currentTNode = e.firstChild),
          (n.lView = t),
          (n.tView = e),
          (n.contextLView = t),
          (n.bindingIndex = e.bindingStartIndex),
          (n.inI18n = !1);
      }
      function ky() {
        const t = ae.lFrame,
          n = null === t ? null : t.child;
        return null === n ? Ty(t) : n;
      }
      function Ty(t) {
        const n = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
          inI18n: !1,
        };
        return null !== t && (t.child = n), n;
      }
      function Iy() {
        const t = ae.lFrame;
        return (
          (ae.lFrame = t.parent), (t.currentTNode = null), (t.lView = null), t
        );
      }
      const Ry = Iy;
      function df() {
        const t = Iy();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = -1),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function Kt() {
        return ae.lFrame.selectedIndex;
      }
      function br(t) {
        ae.lFrame.selectedIndex = t;
      }
      function dt() {
        const t = ae.lFrame;
        return ef(t.tView, t.selectedIndex);
      }
      function Us() {
        ae.lFrame.currentNamespace = "svg";
      }
      function oc(t, n) {
        for (let e = n.directiveStart, i = n.directiveEnd; e < i; e++) {
          const s = t.data[e].type.prototype,
            {
              ngAfterContentInit: o,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: d,
            } = s;
          o && (t.contentHooks || (t.contentHooks = [])).push(-e, o),
            a &&
              ((t.contentHooks || (t.contentHooks = [])).push(e, a),
              (t.contentCheckHooks || (t.contentCheckHooks = [])).push(e, a)),
            l && (t.viewHooks || (t.viewHooks = [])).push(-e, l),
            c &&
              ((t.viewHooks || (t.viewHooks = [])).push(e, c),
              (t.viewCheckHooks || (t.viewCheckHooks = [])).push(e, c)),
            null != d && (t.destroyHooks || (t.destroyHooks = [])).push(e, d);
        }
      }
      function ac(t, n, e) {
        Fy(t, n, 3, e);
      }
      function lc(t, n, e, i) {
        (3 & t[2]) === e && Fy(t, n, e, i);
      }
      function uf(t, n) {
        let e = t[2];
        (3 & e) === n && ((e &= 2047), (e += 1), (t[2] = e));
      }
      function Fy(t, n, e, i) {
        const s = i ?? -1,
          o = n.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & t[18] : 0; l < o; l++)
          if ("number" == typeof n[l + 1]) {
            if (((a = n[l]), null != i && a >= i)) break;
          } else
            n[l] < 0 && (t[18] += 65536),
              (a < s || -1 == s) &&
                (FO(t, e, n, l), (t[18] = (4294901760 & t[18]) + l + 2)),
              l++;
      }
      function FO(t, n, e, i) {
        const r = e[i] < 0,
          s = e[i + 1],
          a = t[r ? -e[i] : e[i]];
        if (r) {
          if (t[2] >> 11 < t[18] >> 16 && (3 & t[2]) === n) {
            t[2] += 2048;
            try {
              s.call(a);
            } finally {
            }
          }
        } else
          try {
            s.call(a);
          } finally {
          }
      }
      class da {
        constructor(n, e, i) {
          (this.factory = n),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function cc(t, n, e) {
        let i = 0;
        for (; i < e.length; ) {
          const r = e[i];
          if ("number" == typeof r) {
            if (0 !== r) break;
            i++;
            const s = e[i++],
              o = e[i++],
              a = e[i++];
            t.setAttribute(n, o, a, s);
          } else {
            const s = r,
              o = e[++i];
            Ly(s) ? t.setProperty(n, s, o) : t.setAttribute(n, s, o), i++;
          }
        }
        return i;
      }
      function Py(t) {
        return 3 === t || 4 === t || 6 === t;
      }
      function Ly(t) {
        return 64 === t.charCodeAt(0);
      }
      function dc(t, n) {
        if (null !== n && 0 !== n.length)
          if (null === t || 0 === t.length) t = n.slice();
          else {
            let e = -1;
            for (let i = 0; i < n.length; i++) {
              const r = n[i];
              "number" == typeof r
                ? (e = r)
                : 0 === e ||
                  Ny(t, e, r, null, -1 === e || 2 === e ? n[++i] : null);
            }
          }
        return t;
      }
      function Ny(t, n, e, i, r) {
        let s = 0,
          o = t.length;
        if (-1 === n) o = -1;
        else
          for (; s < t.length; ) {
            const a = t[s++];
            if ("number" == typeof a) {
              if (a === n) {
                o = -1;
                break;
              }
              if (a > n) {
                o = s - 1;
                break;
              }
            }
          }
        for (; s < t.length; ) {
          const a = t[s];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === i) return void (null !== r && (t[s + 1] = r));
            if (i === t[s + 1]) return void (t[s + 2] = r);
          }
          s++, null !== i && s++, null !== r && s++;
        }
        -1 !== o && (t.splice(o, 0, n), (s = o + 1)),
          t.splice(s++, 0, e),
          null !== i && t.splice(s++, 0, i),
          null !== r && t.splice(s++, 0, r);
      }
      function By(t) {
        return -1 !== t;
      }
      function zs(t) {
        return 32767 & t;
      }
      function $s(t, n) {
        let e = (function VO(t) {
            return t >> 16;
          })(t),
          i = n;
        for (; e > 0; ) (i = i[15]), e--;
        return i;
      }
      let ff = !0;
      function uc(t) {
        const n = ff;
        return (ff = t), n;
      }
      let HO = 0;
      const mi = {};
      function ha(t, n) {
        const e = mf(t, n);
        if (-1 !== e) return e;
        const i = n[1];
        i.firstCreatePass &&
          ((t.injectorIndex = n.length),
          pf(i.data, t),
          pf(n, null),
          pf(i.blueprint, null));
        const r = hc(t, n),
          s = t.injectorIndex;
        if (By(r)) {
          const o = zs(r),
            a = $s(r, n),
            l = a[1].data;
          for (let c = 0; c < 8; c++) n[s + c] = a[o + c] | l[o + c];
        }
        return (n[s + 8] = r), s;
      }
      function pf(t, n) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, n);
      }
      function mf(t, n) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null === n[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function hc(t, n) {
        if (t.parent && -1 !== t.parent.injectorIndex)
          return t.parent.injectorIndex;
        let e = 0,
          i = null,
          r = n;
        for (; null !== r; ) {
          if (((i = qy(r)), null === i)) return -1;
          if ((e++, (r = r[15]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return -1;
      }
      function fc(t, n, e) {
        !(function jO(t, n, e) {
          let i;
          "string" == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(sa) && (i = e[sa]),
            null == i && (i = e[sa] = HO++);
          const r = 255 & i;
          n.data[t + (r >> 5)] |= 1 << r;
        })(t, n, e);
      }
      function jy(t, n, e) {
        if (e & J.Optional) return t;
        Yl();
      }
      function Gy(t, n, e, i) {
        if (
          (e & J.Optional && void 0 === i && (i = null),
          0 == (e & (J.Self | J.Host)))
        ) {
          const r = t[9],
            s = On(void 0);
          try {
            return r ? r.get(n, i, e & J.Optional) : dy(n, i, e & J.Optional);
          } finally {
            On(s);
          }
        }
        return jy(i, 0, e);
      }
      function Uy(t, n, e, i = J.Default, r) {
        if (null !== t) {
          if (1024 & n[2]) {
            const o = (function WO(t, n, e, i, r) {
              let s = t,
                o = n;
              for (
                ;
                null !== s && null !== o && 1024 & o[2] && !(256 & o[2]);

              ) {
                const a = zy(s, o, e, i | J.Self, mi);
                if (a !== mi) return a;
                let l = s.parent;
                if (!l) {
                  const c = o[21];
                  if (c) {
                    const d = c.get(e, mi, i);
                    if (d !== mi) return d;
                  }
                  (l = qy(o)), (o = o[15]);
                }
                s = l;
              }
              return r;
            })(t, n, e, i, mi);
            if (o !== mi) return o;
          }
          const s = zy(t, n, e, i, mi);
          if (s !== mi) return s;
        }
        return Gy(n, e, i, r);
      }
      function zy(t, n, e, i, r) {
        const s = (function zO(t) {
          if ("string" == typeof t) return t.charCodeAt(0) || 0;
          const n = t.hasOwnProperty(sa) ? t[sa] : void 0;
          return "number" == typeof n ? (n >= 0 ? 255 & n : $O) : n;
        })(e);
        if ("function" == typeof s) {
          if (!Ay(n, t, i)) return i & J.Host ? jy(r, 0, i) : Gy(n, e, i, r);
          try {
            const o = s(i);
            if (null != o || i & J.Optional) return o;
            Yl();
          } finally {
            Ry();
          }
        } else if ("number" == typeof s) {
          let o = null,
            a = mf(t, n),
            l = -1,
            c = i & J.Host ? n[16][6] : null;
          for (
            (-1 === a || i & J.SkipSelf) &&
            ((l = -1 === a ? hc(t, n) : n[a + 8]),
            -1 !== l && Wy(i, !1)
              ? ((o = n[1]), (a = zs(l)), (n = $s(l, n)))
              : (a = -1));
            -1 !== a;

          ) {
            const d = n[1];
            if ($y(s, a, d.data)) {
              const u = UO(a, n, e, o, i, c);
              if (u !== mi) return u;
            }
            (l = n[a + 8]),
              -1 !== l && Wy(i, n[1].data[a + 8] === c) && $y(s, a, n)
                ? ((o = d), (a = zs(l)), (n = $s(l, n)))
                : (a = -1);
          }
        }
        return r;
      }
      function UO(t, n, e, i, r, s) {
        const o = n[1],
          a = o.data[t + 8],
          d = pc(
            a,
            o,
            e,
            null == i ? tc(a) && ff : i != o && 0 != (3 & a.type),
            r & J.Host && s === a
          );
        return null !== d ? fa(n, o, d, a) : mi;
      }
      function pc(t, n, e, i, r) {
        const s = t.providerIndexes,
          o = n.data,
          a = 1048575 & s,
          l = t.directiveStart,
          d = s >> 20,
          f = r ? a + d : t.directiveEnd;
        for (let p = i ? a : a + d; p < f; p++) {
          const m = o[p];
          if ((p < l && e === m) || (p >= l && m.type === e)) return p;
        }
        if (r) {
          const p = o[l];
          if (p && Jn(p) && p.type === e) return l;
        }
        return null;
      }
      function fa(t, n, e, i) {
        let r = t[e];
        const s = n.data;
        if (
          (function PO(t) {
            return t instanceof da;
          })(r)
        ) {
          const o = r;
          o.resolving &&
            (function zR(t, n) {
              const e = n ? `. Dependency path: ${n.join(" > ")} > ${t}` : "";
              throw new M(
                -200,
                `Circular dependency in DI detected for ${t}${e}`
              );
            })(
              (function Le(t) {
                return "function" == typeof t
                  ? t.name || t.toString()
                  : "object" == typeof t &&
                    null != t &&
                    "function" == typeof t.type
                  ? t.type.name || t.type.toString()
                  : le(t);
              })(s[e])
            );
          const a = uc(o.canSeeViewProviders);
          o.resolving = !0;
          const l = o.injectImpl ? On(o.injectImpl) : null;
          Ay(t, i, J.Default);
          try {
            (r = t[e] = o.factory(void 0, s, t, i)),
              n.firstCreatePass &&
                e >= i.directiveStart &&
                (function OO(t, n, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: s,
                  } = n.type.prototype;
                  if (i) {
                    const o = _y(n);
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(t, o),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(t, o);
                  }
                  r &&
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - t, r),
                    s &&
                      ((e.preOrderHooks || (e.preOrderHooks = [])).push(t, s),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(t, s));
                })(e, s[e], n);
          } finally {
            null !== l && On(l), uc(a), (o.resolving = !1), Ry();
          }
        }
        return r;
      }
      function $y(t, n, e) {
        return !!(e[n + (t >> 5)] & (1 << t));
      }
      function Wy(t, n) {
        return !(t & J.Self || (t & J.Host && n));
      }
      class Ws {
        constructor(n, e) {
          (this._tNode = n), (this._lView = e);
        }
        get(n, e, i) {
          return Uy(this._tNode, this._lView, n, i, e);
        }
      }
      function $O() {
        return new Ws(Et(), S());
      }
      function I(t) {
        return vr(() => {
          const n = t.prototype.constructor,
            e = n[Bi] || gf(n),
            i = Object.prototype;
          let r = Object.getPrototypeOf(t.prototype).constructor;
          for (; r && r !== i; ) {
            const s = r[Bi] || gf(r);
            if (s && s !== e) return s;
            r = Object.getPrototypeOf(r);
          }
          return (s) => new s();
        });
      }
      function gf(t) {
        return Gh(t)
          ? () => {
              const n = gf(re(t));
              return n && n();
            }
          : Zr(t);
      }
      function qy(t) {
        const n = t[1],
          e = n.type;
        return 2 === e ? n.declTNode : 1 === e ? t[6] : null;
      }
      function Zt(t) {
        return (function GO(t, n) {
          if ("class" === n) return t.classes;
          if ("style" === n) return t.styles;
          const e = t.attrs;
          if (e) {
            const i = e.length;
            let r = 0;
            for (; r < i; ) {
              const s = e[r];
              if (Py(s)) break;
              if (0 === s) r += 2;
              else if ("number" == typeof s)
                for (r++; r < i && "string" == typeof e[r]; ) r++;
              else {
                if (s === n) return e[r + 1];
                r += 2;
              }
            }
          }
          return null;
        })(Et(), t);
      }
      const Ys = "__parameters__";
      function Ks(t, n, e) {
        return vr(() => {
          const i = (function _f(t) {
            return function (...e) {
              if (t) {
                const i = t(...e);
                for (const r in i) this[r] = i[r];
              }
            };
          })(n);
          function r(...s) {
            if (this instanceof r) return i.apply(this, s), this;
            const o = new r(...s);
            return (a.annotation = o), a;
            function a(l, c, d) {
              const u = l.hasOwnProperty(Ys)
                ? l[Ys]
                : Object.defineProperty(l, Ys, { value: [] })[Ys];
              for (; u.length <= d; ) u.push(null);
              return (u[d] = u[d] || []).push(o), l;
            }
          }
          return (
            e && (r.prototype = Object.create(e.prototype)),
            (r.prototype.ngMetadataName = t),
            (r.annotationCls = r),
            r
          );
        });
      }
      class C {
        constructor(n, e) {
          (this._desc = n),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = D({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function _n(t, n) {
        void 0 === n && (n = t);
        for (let e = 0; e < t.length; e++) {
          let i = t[e];
          Array.isArray(i)
            ? (n === t && (n = t.slice(0, e)), _n(i, n))
            : n !== t && n.push(i);
        }
        return n;
      }
      function ji(t, n) {
        t.forEach((e) => (Array.isArray(e) ? ji(e, n) : n(e)));
      }
      function Qy(t, n, e) {
        n >= t.length ? t.push(e) : t.splice(n, 0, e);
      }
      function mc(t, n) {
        return n >= t.length - 1 ? t.pop() : t.splice(n, 1)[0];
      }
      function ga(t, n) {
        const e = [];
        for (let i = 0; i < t; i++) e.push(n);
        return e;
      }
      function vn(t, n, e) {
        let i = Zs(t, n);
        return (
          i >= 0
            ? (t[1 | i] = e)
            : ((i = ~i),
              (function KO(t, n, e, i) {
                let r = t.length;
                if (r == n) t.push(e, i);
                else if (1 === r) t.push(i, t[0]), (t[0] = e);
                else {
                  for (r--, t.push(t[r - 1], t[r]); r > n; )
                    (t[r] = t[r - 2]), r--;
                  (t[n] = e), (t[n + 1] = i);
                }
              })(t, i, n, e)),
          i
        );
      }
      function yf(t, n) {
        const e = Zs(t, n);
        if (e >= 0) return t[1 | e];
      }
      function Zs(t, n) {
        return (function Xy(t, n, e) {
          let i = 0,
            r = t.length >> e;
          for (; r !== i; ) {
            const s = i + ((r - i) >> 1),
              o = t[s << e];
            if (n === o) return s << e;
            o > n ? (r = s) : (i = s + 1);
          }
          return ~(r << e);
        })(t, n, 1);
      }
      const _a = {},
        Cf = "__NG_DI_FLAG__",
        _c = "ngTempTokenPath",
        rF = /\n/gm,
        Jy = "__source";
      let va;
      function Xs(t) {
        const n = va;
        return (va = t), n;
      }
      function oF(t, n = J.Default) {
        if (void 0 === va) throw new M(-203, !1);
        return null === va
          ? dy(t, void 0, n)
          : va.get(t, n & J.Optional ? null : void 0, n);
      }
      function _(t, n = J.Default) {
        return (
          (function XR() {
            return $h;
          })() || oF
        )(re(t), n);
      }
      function Ge(t, n = J.Default) {
        return (
          "number" != typeof n &&
            (n =
              0 |
              (n.optional && 8) |
              (n.host && 1) |
              (n.self && 2) |
              (n.skipSelf && 4)),
          _(t, n)
        );
      }
      function xf(t) {
        const n = [];
        for (let e = 0; e < t.length; e++) {
          const i = re(t[e]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new M(900, !1);
            let r,
              s = J.Default;
            for (let o = 0; o < i.length; o++) {
              const a = i[o],
                l = aF(a);
              "number" == typeof l
                ? -1 === l
                  ? (r = a.token)
                  : (s |= l)
                : (r = a);
            }
            n.push(_(r, s));
          } else n.push(_(i));
        }
        return n;
      }
      function ya(t, n) {
        return (t[Cf] = n), (t.prototype[Cf] = n), t;
      }
      function aF(t) {
        return t[Cf];
      }
      const on = ya(Ks("Optional"), 8),
        Nn = ya(Ks("SkipSelf"), 4);
      let Df, bc;
      function eo(t) {
        return (
          (function Mf() {
            if (void 0 === bc && ((bc = null), He.trustedTypes))
              try {
                bc = He.trustedTypes.createPolicy("angular", {
                  createHTML: (t) => t,
                  createScript: (t) => t,
                  createScriptURL: (t) => t,
                });
              } catch {}
            return bc;
          })()?.createHTML(t) || t
        );
      }
      class Xr {
        constructor(n) {
          this.changingThisBreaksApplicationSecurity = n;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      class xF extends Xr {
        getTypeName() {
          return "HTML";
        }
      }
      class wF extends Xr {
        getTypeName() {
          return "Style";
        }
      }
      class DF extends Xr {
        getTypeName() {
          return "Script";
        }
      }
      class MF extends Xr {
        getTypeName() {
          return "URL";
        }
      }
      class SF extends Xr {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function yn(t) {
        return t instanceof Xr ? t.changingThisBreaksApplicationSecurity : t;
      }
      function gi(t, n) {
        const e = (function EF(t) {
          return (t instanceof Xr && t.getTypeName()) || null;
        })(t);
        if (null != e && e !== n) {
          if ("ResourceURL" === e && "URL" === n) return !0;
          throw new Error(
            `Required a safe ${n}, got a ${e} (see https://g.co/ng/security#xss)`
          );
        }
        return e === n;
      }
      class OF {
        constructor(n) {
          this.inertDocumentHelper = n;
        }
        getInertBodyElement(n) {
          n = "<body><remove></remove>" + n;
          try {
            const e = new window.DOMParser().parseFromString(
              eo(n),
              "text/html"
            ).body;
            return null === e
              ? this.inertDocumentHelper.getInertBodyElement(n)
              : (e.removeChild(e.firstChild), e);
          } catch {
            return null;
          }
        }
      }
      class FF {
        constructor(n) {
          if (
            ((this.defaultDoc = n),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              )),
            null == this.inertDocument.body)
          ) {
            const e = this.inertDocument.createElement("html");
            this.inertDocument.appendChild(e);
            const i = this.inertDocument.createElement("body");
            e.appendChild(i);
          }
        }
        getInertBodyElement(n) {
          const e = this.inertDocument.createElement("template");
          if ("content" in e) return (e.innerHTML = eo(n)), e;
          const i = this.inertDocument.createElement("body");
          return (
            (i.innerHTML = eo(n)),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(i),
            i
          );
        }
        stripCustomNsAttrs(n) {
          const e = n.attributes;
          for (let r = e.length - 1; 0 < r; r--) {
            const o = e.item(r).name;
            ("xmlns:ns1" === o || 0 === o.indexOf("ns1:")) &&
              n.removeAttribute(o);
          }
          let i = n.firstChild;
          for (; i; )
            i.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(i),
              (i = i.nextSibling);
        }
      }
      const LF =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        NF =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function xa(t) {
        return (t = String(t)).match(LF) || t.match(NF) ? t : "unsafe:" + t;
      }
      function _i(t) {
        const n = {};
        for (const e of t.split(",")) n[e] = !0;
        return n;
      }
      function wa(...t) {
        const n = {};
        for (const e of t)
          for (const i in e) e.hasOwnProperty(i) && (n[i] = !0);
        return n;
      }
      const pb = _i("area,br,col,hr,img,wbr"),
        mb = _i("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        gb = _i("rp,rt"),
        Ef = wa(
          pb,
          wa(
            mb,
            _i(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          wa(
            gb,
            _i(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          wa(gb, mb)
        ),
        Af = _i("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        kf = _i("srcset"),
        _b = wa(
          Af,
          kf,
          _i(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          _i(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        BF = _i("script,style,template");
      class VF {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(n) {
          let e = n.firstChild,
            i = !0;
          for (; e; )
            if (
              (e.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(e))
                : e.nodeType === Node.TEXT_NODE
                ? this.chars(e.nodeValue)
                : (this.sanitizedSomething = !0),
              i && e.firstChild)
            )
              e = e.firstChild;
            else
              for (; e; ) {
                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                let r = this.checkClobberedElement(e, e.nextSibling);
                if (r) {
                  e = r;
                  break;
                }
                e = this.checkClobberedElement(e, e.parentNode);
              }
          return this.buf.join("");
        }
        startElement(n) {
          const e = n.nodeName.toLowerCase();
          if (!Ef.hasOwnProperty(e))
            return (this.sanitizedSomething = !0), !BF.hasOwnProperty(e);
          this.buf.push("<"), this.buf.push(e);
          const i = n.attributes;
          for (let r = 0; r < i.length; r++) {
            const s = i.item(r),
              o = s.name,
              a = o.toLowerCase();
            if (!_b.hasOwnProperty(a)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let l = s.value;
            Af[a] && (l = xa(l)),
              kf[a] &&
                ((t = l),
                (l = (t = String(t))
                  .split(",")
                  .map((n) => xa(n.trim()))
                  .join(", "))),
              this.buf.push(" ", o, '="', vb(l), '"');
          }
          var t;
          return this.buf.push(">"), !0;
        }
        endElement(n) {
          const e = n.nodeName.toLowerCase();
          Ef.hasOwnProperty(e) &&
            !pb.hasOwnProperty(e) &&
            (this.buf.push("</"), this.buf.push(e), this.buf.push(">"));
        }
        chars(n) {
          this.buf.push(vb(n));
        }
        checkClobberedElement(n, e) {
          if (
            e &&
            (n.compareDocumentPosition(e) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${n.outerHTML}`
            );
          return e;
        }
      }
      const HF = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        jF = /([^\#-~ |!])/g;
      function vb(t) {
        return t
          .replace(/&/g, "&amp;")
          .replace(HF, function (n) {
            return (
              "&#" +
              (1024 * (n.charCodeAt(0) - 55296) +
                (n.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(jF, function (n) {
            return "&#" + n.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let xc;
      function yb(t, n) {
        let e = null;
        try {
          xc =
            xc ||
            (function hb(t) {
              const n = new FF(t);
              return (function PF() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    eo(""),
                    "text/html"
                  );
                } catch {
                  return !1;
                }
              })()
                ? new OF(n)
                : n;
            })(t);
          let i = n ? String(n) : "";
          e = xc.getInertBodyElement(i);
          let r = 5,
            s = i;
          do {
            if (0 === r)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            r--, (i = s), (s = e.innerHTML), (e = xc.getInertBodyElement(i));
          } while (i !== s);
          return eo(new VF().sanitizeChildren(Tf(e) || e));
        } finally {
          if (e) {
            const i = Tf(e) || e;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function Tf(t) {
        return "content" in t &&
          (function GF(t) {
            return (
              t.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === t.nodeName
            );
          })(t)
          ? t.content
          : null;
      }
      var Fe = (() => (
        ((Fe = Fe || {})[(Fe.NONE = 0)] = "NONE"),
        (Fe[(Fe.HTML = 1)] = "HTML"),
        (Fe[(Fe.STYLE = 2)] = "STYLE"),
        (Fe[(Fe.SCRIPT = 3)] = "SCRIPT"),
        (Fe[(Fe.URL = 4)] = "URL"),
        (Fe[(Fe.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        Fe
      ))();
      function If(t) {
        const n = (function Da() {
          const t = S();
          return t && t[12];
        })();
        return n
          ? n.sanitize(Fe.URL, t) || ""
          : gi(t, "URL")
          ? yn(t)
          : xa(le(t));
      }
      const Rf = new C("ENVIRONMENT_INITIALIZER"),
        Cb = new C("INJECTOR", -1),
        xb = new C("INJECTOR_DEF_TYPES");
      class wb {
        get(n, e = _a) {
          if (e === _a) {
            const i = new Error(`NullInjectorError: No provider for ${$e(n)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return e;
        }
      }
      function KF(...t) {
        return { ɵproviders: Db(0, t) };
      }
      function Db(t, ...n) {
        const e = [],
          i = new Set();
        let r;
        return (
          ji(n, (s) => {
            const o = s;
            Of(o, e, [], i) && (r || (r = []), r.push(o));
          }),
          void 0 !== r && Mb(r, e),
          e
        );
      }
      function Mb(t, n) {
        for (let e = 0; e < t.length; e++) {
          const { providers: r } = t[e];
          ji(r, (s) => {
            n.push(s);
          });
        }
      }
      function Of(t, n, e, i) {
        if (!(t = re(t))) return !1;
        let r = null,
          s = ly(t);
        const o = !s && je(t);
        if (s || o) {
          if (o && !o.standalone) return !1;
          r = t;
        } else {
          const l = t.ngModule;
          if (((s = ly(l)), !s)) return !1;
          r = l;
        }
        const a = i.has(r);
        if (o) {
          if (a) return !1;
          if ((i.add(r), o.dependencies)) {
            const l =
              "function" == typeof o.dependencies
                ? o.dependencies()
                : o.dependencies;
            for (const c of l) Of(c, n, e, i);
          }
        } else {
          if (!s) return !1;
          {
            if (null != s.imports && !a) {
              let c;
              i.add(r);
              try {
                ji(s.imports, (d) => {
                  Of(d, n, e, i) && (c || (c = []), c.push(d));
                });
              } finally {
              }
              void 0 !== c && Mb(c, n);
            }
            if (!a) {
              const c = Zr(r) || (() => new r());
              n.push(
                { provide: r, useFactory: c, deps: Ne },
                { provide: xb, useValue: r, multi: !0 },
                { provide: Rf, useValue: () => _(r), multi: !0 }
              );
            }
            const l = s.providers;
            null == l ||
              a ||
              ji(l, (d) => {
                n.push(d);
              });
          }
        }
        return r !== t && void 0 !== t.providers;
      }
      const ZF = ze({ provide: String, useValue: ze });
      function Ff(t) {
        return null !== t && "object" == typeof t && ZF in t;
      }
      function Jr(t) {
        return "function" == typeof t;
      }
      const Pf = new C("Set Injector scope."),
        wc = {},
        JF = {};
      let Lf;
      function Dc() {
        return void 0 === Lf && (Lf = new wb()), Lf;
      }
      class xr {}
      class Ab extends xr {
        constructor(n, e, i, r) {
          super(),
            (this.parent = e),
            (this.source = i),
            (this.scopes = r),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Bf(n, (o) => this.processProvider(o)),
            this.records.set(Cb, to(void 0, this)),
            r.has("environment") && this.records.set(xr, to(void 0, this));
          const s = this.records.get(Pf);
          null != s && "string" == typeof s.value && this.scopes.add(s.value),
            (this.injectorDefTypes = new Set(this.get(xb.multi, Ne, J.Self)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const n of this._ngOnDestroyHooks) n.ngOnDestroy();
            for (const n of this._onDestroyHooks) n();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(n) {
          this._onDestroyHooks.push(n);
        }
        runInContext(n) {
          this.assertNotDestroyed();
          const e = Xs(this),
            i = On(void 0);
          try {
            return n();
          } finally {
            Xs(e), On(i);
          }
        }
        get(n, e = _a, i = J.Default) {
          this.assertNotDestroyed();
          const r = Xs(this),
            s = On(void 0);
          try {
            if (!(i & J.SkipSelf)) {
              let a = this.records.get(n);
              if (void 0 === a) {
                const l =
                  (function s1(t) {
                    return (
                      "function" == typeof t ||
                      ("object" == typeof t && t instanceof C)
                    );
                  })(n) && Uh(n);
                (a = l && this.injectableDefInScope(l) ? to(Nf(n), wc) : null),
                  this.records.set(n, a);
              }
              if (null != a) return this.hydrate(n, a);
            }
            return (i & J.Self ? Dc() : this.parent).get(
              n,
              (e = i & J.Optional && e === _a ? null : e)
            );
          } catch (o) {
            if ("NullInjectorError" === o.name) {
              if (((o[_c] = o[_c] || []).unshift($e(n)), r)) throw o;
              return (function lF(t, n, e, i) {
                const r = t[_c];
                throw (
                  (n[Jy] && r.unshift(n[Jy]),
                  (t.message = (function cF(t, n, e, i = null) {
                    t =
                      t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1)
                        ? t.slice(2)
                        : t;
                    let r = $e(n);
                    if (Array.isArray(n)) r = n.map($e).join(" -> ");
                    else if ("object" == typeof n) {
                      let s = [];
                      for (let o in n)
                        if (n.hasOwnProperty(o)) {
                          let a = n[o];
                          s.push(
                            o +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : $e(a))
                          );
                        }
                      r = `{${s.join(", ")}}`;
                    }
                    return `${e}${i ? "(" + i + ")" : ""}[${r}]: ${t.replace(
                      rF,
                      "\n  "
                    )}`;
                  })("\n" + t.message, r, e, i)),
                  (t.ngTokenPath = r),
                  (t[_c] = null),
                  t)
                );
              })(o, n, "R3InjectorError", this.source);
            }
            throw o;
          } finally {
            On(s), Xs(r);
          }
        }
        resolveInjectorInitializers() {
          const n = Xs(this),
            e = On(void 0);
          try {
            const i = this.get(Rf.multi, Ne, J.Self);
            for (const r of i) r();
          } finally {
            Xs(n), On(e);
          }
        }
        toString() {
          const n = [],
            e = this.records;
          for (const i of e.keys()) n.push($e(i));
          return `R3Injector[${n.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new M(205, !1);
        }
        processProvider(n) {
          let e = Jr((n = re(n))) ? n : re(n && n.provide);
          const i = (function t1(t) {
            return Ff(t) ? to(void 0, t.useValue) : to(kb(t), wc);
          })(n);
          if (Jr(n) || !0 !== n.multi) this.records.get(e);
          else {
            let r = this.records.get(e);
            r ||
              ((r = to(void 0, wc, !0)),
              (r.factory = () => xf(r.multi)),
              this.records.set(e, r)),
              (e = n),
              r.multi.push(n);
          }
          this.records.set(e, i);
        }
        hydrate(n, e) {
          return (
            e.value === wc && ((e.value = JF), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function r1(t) {
                return (
                  null !== t &&
                  "object" == typeof t &&
                  "function" == typeof t.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(n) {
          if (!n.providedIn) return !1;
          const e = re(n.providedIn);
          return "string" == typeof e
            ? "any" === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
      }
      function Nf(t) {
        const n = Uh(t),
          e = null !== n ? n.factory : Zr(t);
        if (null !== e) return e;
        if (t instanceof C) throw new M(204, !1);
        if (t instanceof Function)
          return (function e1(t) {
            const n = t.length;
            if (n > 0) throw (ga(n, "?"), new M(204, !1));
            const e = (function QR(t) {
              const n = t && (t[Ql] || t[cy]);
              if (n) {
                const e = (function KR(t) {
                  if (t.hasOwnProperty("name")) return t.name;
                  const n = ("" + t).match(/^function\s*([^\s(]+)/);
                  return null === n ? "" : n[1];
                })(t);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`
                  ),
                  n
                );
              }
              return null;
            })(t);
            return null !== e ? () => e.factory(t) : () => new t();
          })(t);
        throw new M(204, !1);
      }
      function kb(t, n, e) {
        let i;
        if (Jr(t)) {
          const r = re(t);
          return Zr(r) || Nf(r);
        }
        if (Ff(t)) i = () => re(t.useValue);
        else if (
          (function Eb(t) {
            return !(!t || !t.useFactory);
          })(t)
        )
          i = () => t.useFactory(...xf(t.deps || []));
        else if (
          (function Sb(t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          i = () => _(re(t.useExisting));
        else {
          const r = re(t && (t.useClass || t.provide));
          if (
            !(function n1(t) {
              return !!t.deps;
            })(t)
          )
            return Zr(r) || Nf(r);
          i = () => new r(...xf(t.deps));
        }
        return i;
      }
      function to(t, n, e = !1) {
        return { factory: t, value: n, multi: e ? [] : void 0 };
      }
      function o1(t) {
        return !!t.ɵproviders;
      }
      function Bf(t, n) {
        for (const e of t)
          Array.isArray(e) ? Bf(e, n) : o1(e) ? Bf(e.ɵproviders, n) : n(e);
      }
      class Tb {}
      class c1 {
        resolveComponentFactory(n) {
          throw (function l1(t) {
            const n = Error(
              `No component factory found for ${$e(
                t
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (n.ngComponent = t), n;
          })(n);
        }
      }
      let es = (() => {
        class t {}
        return (t.NULL = new c1()), t;
      })();
      function d1() {
        return no(Et(), S());
      }
      function no(t, n) {
        return new T(Ln(t, n));
      }
      let T = (() => {
        class t {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (t.__NG_ELEMENT_ID__ = d1), t;
      })();
      function u1(t) {
        return t instanceof T ? t.nativeElement : t;
      }
      class Ma {}
      let ei = (() => {
          class t {}
          return (
            (t.__NG_ELEMENT_ID__ = () =>
              (function h1() {
                const t = S(),
                  e = gn(Et().index, t);
                return (sn(e) ? e : t)[11];
              })()),
            t
          );
        })(),
        f1 = (() => {
          class t {}
          return (
            (t.ɵprov = D({
              token: t,
              providedIn: "root",
              factory: () => null,
            })),
            t
          );
        })();
      class wr {
        constructor(n) {
          (this.full = n),
            (this.major = n.split(".")[0]),
            (this.minor = n.split(".")[1]),
            (this.patch = n.split(".").slice(2).join("."));
        }
      }
      const p1 = new wr("14.1.3"),
        Vf = {};
      function zf(t) {
        return t.ngOriginalError;
      }
      class Gi {
        constructor() {
          this._console = console;
        }
        handleError(n) {
          const e = this._findOriginalError(n);
          this._console.error("ERROR", n),
            e && this._console.error("ORIGINAL ERROR", e);
        }
        _findOriginalError(n) {
          let e = n && zf(n);
          for (; e && zf(e); ) e = zf(e);
          return e || null;
        }
      }
      const $f = new Map();
      let S1 = 0;
      const qf = "__ngContext__";
      function Ut(t, n) {
        sn(n)
          ? ((t[qf] = n[20]),
            (function A1(t) {
              $f.set(t[20], t);
            })(n))
          : (t[qf] = n);
      }
      function Sa(t) {
        const n = t[qf];
        return "number" == typeof n
          ? (function Nb(t) {
              return $f.get(t) || null;
            })(n)
          : n || null;
      }
      function Yf(t) {
        const n = Sa(t);
        return n ? (sn(n) ? n : n.lView) : null;
      }
      const N1 = (() =>
        (
          (typeof requestAnimationFrame < "u" && requestAnimationFrame) ||
          setTimeout
        ).bind(He))();
      function Ui(t) {
        return t instanceof Function ? t() : t;
      }
      var an = (() => (
        ((an = an || {})[(an.Important = 1)] = "Important"),
        (an[(an.DashCase = 2)] = "DashCase"),
        an
      ))();
      function Kf(t, n) {
        return undefined(t, n);
      }
      function Ea(t) {
        const n = t[3];
        return Xn(n) ? n[3] : n;
      }
      function Zf(t) {
        return $b(t[13]);
      }
      function Xf(t) {
        return $b(t[4]);
      }
      function $b(t) {
        for (; null !== t && !Xn(t); ) t = t[4];
        return t;
      }
      function ro(t, n, e, i, r) {
        if (null != i) {
          let s,
            o = !1;
          Xn(i) ? (s = i) : sn(i) && ((o = !0), (i = i[0]));
          const a = bt(i);
          0 === t && null !== e
            ? null == r
              ? Zb(n, e, a)
              : ts(n, e, a, r || null, !0)
            : 1 === t && null !== e
            ? ts(n, e, a, r || null, !0)
            : 2 === t
            ? (function rC(t, n, e) {
                const i = Mc(t, n);
                i &&
                  (function tP(t, n, e, i) {
                    t.removeChild(n, e, i);
                  })(t, i, n, e);
              })(n, a, o)
            : 3 === t && n.destroyNode(a),
            null != s &&
              (function rP(t, n, e, i, r) {
                const s = e[7];
                s !== bt(e) && ro(n, t, i, s, r);
                for (let a = 10; a < e.length; a++) {
                  const l = e[a];
                  Aa(l[1], l, t, n, i, s);
                }
              })(n, t, s, e, r);
        }
      }
      function ep(t, n, e) {
        return t.createElement(n, e);
      }
      function qb(t, n) {
        const e = t[9],
          i = e.indexOf(n),
          r = n[3];
        512 & n[2] && ((n[2] &= -513), tf(r, -1)), e.splice(i, 1);
      }
      function tp(t, n) {
        if (t.length <= 10) return;
        const e = 10 + n,
          i = t[e];
        if (i) {
          const r = i[17];
          null !== r && r !== t && qb(r, i), n > 0 && (t[e - 1][4] = i[4]);
          const s = mc(t, 10 + n);
          !(function q1(t, n) {
            Aa(t, n, n[11], 2, null, null), (n[0] = null), (n[6] = null);
          })(i[1], i);
          const o = s[19];
          null !== o && o.detachView(s[1]),
            (i[3] = null),
            (i[4] = null),
            (i[2] &= -65);
        }
        return i;
      }
      function Yb(t, n) {
        if (!(128 & n[2])) {
          const e = n[11];
          e.destroyNode && Aa(t, n, e, 3, null, null),
            (function K1(t) {
              let n = t[13];
              if (!n) return np(t[1], t);
              for (; n; ) {
                let e = null;
                if (sn(n)) e = n[13];
                else {
                  const i = n[10];
                  i && (e = i);
                }
                if (!e) {
                  for (; n && !n[4] && n !== t; )
                    sn(n) && np(n[1], n), (n = n[3]);
                  null === n && (n = t), sn(n) && np(n[1], n), (e = n && n[4]);
                }
                n = e;
              }
            })(n);
        }
      }
      function np(t, n) {
        if (!(128 & n[2])) {
          (n[2] &= -65),
            (n[2] |= 128),
            (function eP(t, n) {
              let e;
              if (null != t && null != (e = t.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const r = n[e[i]];
                  if (!(r instanceof da)) {
                    const s = e[i + 1];
                    if (Array.isArray(s))
                      for (let o = 0; o < s.length; o += 2) {
                        const a = r[s[o]],
                          l = s[o + 1];
                        try {
                          l.call(a);
                        } finally {
                        }
                      }
                    else
                      try {
                        s.call(r);
                      } finally {
                      }
                  }
                }
            })(t, n),
            (function J1(t, n) {
              const e = t.cleanup,
                i = n[7];
              let r = -1;
              if (null !== e)
                for (let s = 0; s < e.length - 1; s += 2)
                  if ("string" == typeof e[s]) {
                    const o = e[s + 1],
                      a = "function" == typeof o ? o(n) : bt(n[o]),
                      l = i[(r = e[s + 2])],
                      c = e[s + 3];
                    "boolean" == typeof c
                      ? a.removeEventListener(e[s], l, c)
                      : c >= 0
                      ? i[(r = c)]()
                      : i[(r = -c)].unsubscribe(),
                      (s += 2);
                  } else {
                    const o = i[(r = e[s + 1])];
                    e[s].call(o);
                  }
              if (null !== i) {
                for (let s = r + 1; s < i.length; s++) (0, i[s])();
                n[7] = null;
              }
            })(t, n),
            1 === n[1].type && n[11].destroy();
          const e = n[17];
          if (null !== e && Xn(n[3])) {
            e !== n[3] && qb(e, n);
            const i = n[19];
            null !== i && i.detachView(t);
          }
          !(function k1(t) {
            $f.delete(t[20]);
          })(n);
        }
      }
      function Qb(t, n, e) {
        return (function Kb(t, n, e) {
          let i = n;
          for (; null !== i && 40 & i.type; ) i = (n = i).parent;
          if (null === i) return e[0];
          if (2 & i.flags) {
            const r = t.data[i.directiveStart].encapsulation;
            if (r === Kn.None || r === Kn.Emulated) return null;
          }
          return Ln(i, e);
        })(t, n.parent, e);
      }
      function ts(t, n, e, i, r) {
        t.insertBefore(n, e, i, r);
      }
      function Zb(t, n, e) {
        t.appendChild(n, e);
      }
      function Xb(t, n, e, i, r) {
        null !== i ? ts(t, n, e, i, r) : Zb(t, n, e);
      }
      function Mc(t, n) {
        return t.parentNode(n);
      }
      function Jb(t, n, e) {
        return tC(t, n, e);
      }
      let tC = function eC(t, n, e) {
        return 40 & t.type ? Ln(t, e) : null;
      };
      function Sc(t, n, e, i) {
        const r = Qb(t, i, n),
          s = n[11],
          a = Jb(i.parent || n[6], i, n);
        if (null != r)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) Xb(s, r, e[l], a, !1);
          else Xb(s, r, e, a, !1);
      }
      function Ec(t, n) {
        if (null !== n) {
          const e = n.type;
          if (3 & e) return Ln(n, t);
          if (4 & e) return rp(-1, t[n.index]);
          if (8 & e) {
            const i = n.child;
            if (null !== i) return Ec(t, i);
            {
              const r = t[n.index];
              return Xn(r) ? rp(-1, r) : bt(r);
            }
          }
          if (32 & e) return Kf(n, t)() || bt(t[n.index]);
          {
            const i = iC(t, n);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Ec(Ea(t[16]), i)
              : Ec(t, n.next);
          }
        }
        return null;
      }
      function iC(t, n) {
        return null !== n ? t[16][6].projection[n.projection] : null;
      }
      function rp(t, n) {
        const e = 10 + t + 1;
        if (e < n.length) {
          const i = n[e],
            r = i[1].firstChild;
          if (null !== r) return Ec(i, r);
        }
        return n[7];
      }
      function sp(t, n, e, i, r, s, o) {
        for (; null != e; ) {
          const a = i[e.index],
            l = e.type;
          if (
            (o && 0 === n && (a && Ut(bt(a), i), (e.flags |= 4)),
            64 != (64 & e.flags))
          )
            if (8 & l) sp(t, n, e.child, i, r, s, !1), ro(n, t, r, a, s);
            else if (32 & l) {
              const c = Kf(e, i);
              let d;
              for (; (d = c()); ) ro(n, t, r, d, s);
              ro(n, t, r, a, s);
            } else 16 & l ? sC(t, n, i, e, r, s) : ro(n, t, r, a, s);
          e = o ? e.projectionNext : e.next;
        }
      }
      function Aa(t, n, e, i, r, s) {
        sp(e, i, t.firstChild, n, r, s, !1);
      }
      function sC(t, n, e, i, r, s) {
        const o = e[16],
          l = o[6].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) ro(n, t, r, l[c], s);
        else sp(t, n, l, o[3], r, s, !0);
      }
      function oC(t, n, e) {
        t.setAttribute(n, "style", e);
      }
      function op(t, n, e) {
        "" === e
          ? t.removeAttribute(n, "class")
          : t.setAttribute(n, "class", e);
      }
      function aC(t, n, e) {
        let i = t.length;
        for (;;) {
          const r = t.indexOf(n, e);
          if (-1 === r) return r;
          if (0 === r || t.charCodeAt(r - 1) <= 32) {
            const s = n.length;
            if (r + s === i || t.charCodeAt(r + s) <= 32) return r;
          }
          e = r + 1;
        }
      }
      const lC = "ng-template";
      function oP(t, n, e) {
        let i = 0;
        for (; i < t.length; ) {
          let r = t[i++];
          if (e && "class" === r) {
            if (((r = t[i]), -1 !== aC(r.toLowerCase(), n, 0))) return !0;
          } else if (1 === r) {
            for (; i < t.length && "string" == typeof (r = t[i++]); )
              if (r.toLowerCase() === n) return !0;
            return !1;
          }
        }
        return !1;
      }
      function cC(t) {
        return 4 === t.type && t.value !== lC;
      }
      function aP(t, n, e) {
        return n === (4 !== t.type || e ? t.value : lC);
      }
      function lP(t, n, e) {
        let i = 4;
        const r = t.attrs || [],
          s = (function uP(t) {
            for (let n = 0; n < t.length; n++) if (Py(t[n])) return n;
            return t.length;
          })(r);
        let o = !1;
        for (let a = 0; a < n.length; a++) {
          const l = n[a];
          if ("number" != typeof l) {
            if (!o)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !aP(t, l, e)) || ("" === l && 1 === n.length))
                ) {
                  if (ti(i)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & i ? l : n[++a];
                if (8 & i && null !== t.attrs) {
                  if (!oP(t.attrs, c, e)) {
                    if (ti(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const u = cP(8 & i ? "class" : l, r, cC(t), e);
                if (-1 === u) {
                  if (ti(i)) return !1;
                  o = !0;
                  continue;
                }
                if ("" !== c) {
                  let f;
                  f = u > s ? "" : r[u + 1].toLowerCase();
                  const p = 8 & i ? f : null;
                  if ((p && -1 !== aC(p, c, 0)) || (2 & i && c !== f)) {
                    if (ti(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !ti(i) && !ti(l)) return !1;
            if (o && ti(l)) continue;
            (o = !1), (i = l | (1 & i));
          }
        }
        return ti(i) || o;
      }
      function ti(t) {
        return 0 == (1 & t);
      }
      function cP(t, n, e, i) {
        if (null === n) return -1;
        let r = 0;
        if (i || !e) {
          let s = !1;
          for (; r < n.length; ) {
            const o = n[r];
            if (o === t) return r;
            if (3 === o || 6 === o) s = !0;
            else {
              if (1 === o || 2 === o) {
                let a = n[++r];
                for (; "string" == typeof a; ) a = n[++r];
                continue;
              }
              if (4 === o) break;
              if (0 === o) {
                r += 4;
                continue;
              }
            }
            r += s ? 1 : 2;
          }
          return -1;
        }
        return (function hP(t, n) {
          let e = t.indexOf(4);
          if (e > -1)
            for (e++; e < t.length; ) {
              const i = t[e];
              if ("number" == typeof i) return -1;
              if (i === n) return e;
              e++;
            }
          return -1;
        })(n, t);
      }
      function dC(t, n, e = !1) {
        for (let i = 0; i < n.length; i++) if (lP(t, n[i], e)) return !0;
        return !1;
      }
      function fP(t, n) {
        e: for (let e = 0; e < n.length; e++) {
          const i = n[e];
          if (t.length === i.length) {
            for (let r = 0; r < t.length; r++) if (t[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function uC(t, n) {
        return t ? ":not(" + n.trim() + ")" : n;
      }
      function pP(t) {
        let n = t[0],
          e = 1,
          i = 2,
          r = "",
          s = !1;
        for (; e < t.length; ) {
          let o = t[e];
          if ("string" == typeof o)
            if (2 & i) {
              const a = t[++e];
              r += "[" + o + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (r += "." + o) : 4 & i && (r += " " + o);
          else
            "" !== r && !ti(o) && ((n += uC(s, r)), (r = "")),
              (i = o),
              (s = s || !ti(i));
          e++;
        }
        return "" !== r && (n += uC(s, r)), n;
      }
      const ce = {};
      function de(t) {
        hC(Te(), S(), Kt() + t, !1);
      }
      function hC(t, n, e, i) {
        if (!i)
          if (3 == (3 & n[2])) {
            const s = t.preOrderCheckHooks;
            null !== s && ac(n, s, e);
          } else {
            const s = t.preOrderHooks;
            null !== s && lc(n, s, 0, e);
          }
        br(e);
      }
      function gC(t, n = null, e = null, i) {
        const r = _C(t, n, e, i);
        return r.resolveInjectorInitializers(), r;
      }
      function _C(t, n = null, e = null, i, r = new Set()) {
        const s = [e || Ne, KF(t)];
        return (
          (i = i || ("object" == typeof t ? void 0 : $e(t))),
          new Ab(s, n || Dc(), i || null, r)
        );
      }
      let gt = (() => {
        class t {
          static create(e, i) {
            if (Array.isArray(e)) return gC({ name: "" }, i, e, "");
            {
              const r = e.name ?? "";
              return gC({ name: r }, e.parent, e.providers, r);
            }
          }
        }
        return (
          (t.THROW_IF_NOT_FOUND = _a),
          (t.NULL = new wb()),
          (t.ɵprov = D({ token: t, providedIn: "any", factory: () => _(Cb) })),
          (t.__NG_ELEMENT_ID__ = -1),
          t
        );
      })();
      function h(t, n = J.Default) {
        const e = S();
        return null === e ? _(t, n) : Uy(Et(), e, re(t), n);
      }
      function Dr() {
        throw new Error("invalid");
      }
      function kc(t, n) {
        return (t << 17) | (n << 2);
      }
      function ni(t) {
        return (t >> 17) & 32767;
      }
      function up(t) {
        return 2 | t;
      }
      function zi(t) {
        return (131068 & t) >> 2;
      }
      function hp(t, n) {
        return (-131069 & t) | (n << 2);
      }
      function fp(t) {
        return 1 | t;
      }
      function FC(t, n) {
        const e = t.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const r = e[i],
              s = e[i + 1];
            if (-1 !== s) {
              const o = t.data[s];
              lf(r), o.contentQueries(2, n[s], s);
            }
          }
      }
      function Rc(t, n, e, i, r, s, o, a, l, c, d) {
        const u = n.blueprint.slice();
        return (
          (u[0] = r),
          (u[2] = 76 | i),
          (null !== d || (t && 1024 & t[2])) && (u[2] |= 1024),
          Cy(u),
          (u[3] = u[15] = t),
          (u[8] = e),
          (u[10] = o || (t && t[10])),
          (u[11] = a || (t && t[11])),
          (u[12] = l || (t && t[12]) || null),
          (u[9] = c || (t && t[9]) || null),
          (u[6] = s),
          (u[20] = (function E1() {
            return S1++;
          })()),
          (u[21] = d),
          (u[16] = 2 == n.type ? t[16] : u),
          u
        );
      }
      function oo(t, n, e, i, r) {
        let s = t.data[n];
        if (null === s)
          (s = (function xp(t, n, e, i, r) {
            const s = Dy(),
              o = nf(),
              l = (t.data[n] = (function ZP(t, n, e, i, r, s) {
                return {
                  type: e,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: n ? n.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: s,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: n,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, o ? s : s && s.parent, e, n, i, r));
            return (
              null === t.firstChild && (t.firstChild = l),
              null !== s &&
                (o
                  ? null == s.child && null !== l.parent && (s.child = l)
                  : null === s.next && (s.next = l)),
              l
            );
          })(t, n, e, i, r)),
            (function DO() {
              return ae.lFrame.inI18n;
            })() && (s.flags |= 64);
        else if (64 & s.type) {
          (s.type = e), (s.value = i), (s.attrs = r);
          const o = (function ca() {
            const t = ae.lFrame,
              n = t.currentTNode;
            return t.isParent ? n : n.parent;
          })();
          s.injectorIndex = null === o ? -1 : o.injectorIndex;
        }
        return pi(s, !0), s;
      }
      function ao(t, n, e, i) {
        if (0 === e) return -1;
        const r = n.length;
        for (let s = 0; s < e; s++)
          n.push(i), t.blueprint.push(i), t.data.push(null);
        return r;
      }
      function Oc(t, n, e) {
        cf(n);
        try {
          const i = t.viewQuery;
          null !== i && Ip(1, i, e);
          const r = t.template;
          null !== r && PC(t, n, r, 1, e),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && FC(t, n),
            t.staticViewQueries && Ip(2, t.viewQuery, e);
          const s = t.components;
          null !== s &&
            (function qP(t, n) {
              for (let e = 0; e < n.length; e++) fL(t, n[e]);
            })(n, s);
        } catch (i) {
          throw (
            (t.firstCreatePass &&
              ((t.incompleteFirstPass = !0), (t.firstCreatePass = !1)),
            i)
          );
        } finally {
          (n[2] &= -5), df();
        }
      }
      function ka(t, n, e, i) {
        const r = n[2];
        if (128 != (128 & r)) {
          cf(n);
          try {
            Cy(n),
              (function My(t) {
                return (ae.lFrame.bindingIndex = t);
              })(t.bindingStartIndex),
              null !== e && PC(t, n, e, 2, i);
            const o = 3 == (3 & r);
            if (o) {
              const c = t.preOrderCheckHooks;
              null !== c && ac(n, c, null);
            } else {
              const c = t.preOrderHooks;
              null !== c && lc(n, c, 0, null), uf(n, 0);
            }
            if (
              ((function uL(t) {
                for (let n = Zf(t); null !== n; n = Xf(n)) {
                  if (!n[2]) continue;
                  const e = n[9];
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i],
                      s = r[3];
                    0 == (512 & r[2]) && tf(s, 1), (r[2] |= 512);
                  }
                }
              })(n),
              (function dL(t) {
                for (let n = Zf(t); null !== n; n = Xf(n))
                  for (let e = 10; e < n.length; e++) {
                    const i = n[e],
                      r = i[1];
                    rc(i) && ka(r, i, r.template, i[8]);
                  }
              })(n),
              null !== t.contentQueries && FC(t, n),
              o)
            ) {
              const c = t.contentCheckHooks;
              null !== c && ac(n, c);
            } else {
              const c = t.contentHooks;
              null !== c && lc(n, c, 1), uf(n, 1);
            }
            !(function $P(t, n) {
              const e = t.hostBindingOpCodes;
              if (null !== e)
                try {
                  for (let i = 0; i < e.length; i++) {
                    const r = e[i];
                    if (r < 0) br(~r);
                    else {
                      const s = r,
                        o = e[++i],
                        a = e[++i];
                      MO(o, s), a(2, n[s]);
                    }
                  }
                } finally {
                  br(-1);
                }
            })(t, n);
            const a = t.components;
            null !== a &&
              (function WP(t, n) {
                for (let e = 0; e < n.length; e++) hL(t, n[e]);
              })(n, a);
            const l = t.viewQuery;
            if ((null !== l && Ip(2, l, i), o)) {
              const c = t.viewCheckHooks;
              null !== c && ac(n, c);
            } else {
              const c = t.viewHooks;
              null !== c && lc(n, c, 2), uf(n, 2);
            }
            !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
              (n[2] &= -41),
              512 & n[2] && ((n[2] &= -513), tf(n[3], -1));
          } finally {
            df();
          }
        }
      }
      function YP(t, n, e, i) {
        const r = n[10],
          o = by(n);
        try {
          !o && r.begin && r.begin(), o && Oc(t, n, i), ka(t, n, e, i);
        } finally {
          !o && r.end && r.end();
        }
      }
      function PC(t, n, e, i, r) {
        const s = Kt(),
          o = 2 & i;
        try {
          br(-1), o && n.length > 22 && hC(t, n, 22, !1), e(i, r);
        } finally {
          br(s);
        }
      }
      function wp(t, n, e) {
        !wy() ||
          ((function nL(t, n, e, i) {
            const r = e.directiveStart,
              s = e.directiveEnd;
            t.firstCreatePass || ha(e, n), Ut(i, n);
            const o = e.initialInputs;
            for (let a = r; a < s; a++) {
              const l = t.data[a],
                c = Jn(l);
              c && aL(n, e, l);
              const d = fa(n, t, a, e);
              Ut(d, n),
                null !== o && lL(0, a - r, d, l, 0, o),
                c && (gn(e.index, n)[8] = d);
            }
          })(t, n, e, Ln(e, n)),
          128 == (128 & e.flags) &&
            (function iL(t, n, e) {
              const i = e.directiveStart,
                r = e.directiveEnd,
                s = e.index,
                o = (function SO() {
                  return ae.lFrame.currentDirectiveIndex;
                })();
              try {
                br(s);
                for (let a = i; a < r; a++) {
                  const l = t.data[a],
                    c = n[a];
                  sf(a),
                    (null !== l.hostBindings ||
                      0 !== l.hostVars ||
                      null !== l.hostAttrs) &&
                      UC(l, c);
                }
              } finally {
                br(-1), sf(o);
              }
            })(t, n, e));
      }
      function Dp(t, n, e = Ln) {
        const i = n.localNames;
        if (null !== i) {
          let r = n.index + 1;
          for (let s = 0; s < i.length; s += 2) {
            const o = i[s + 1],
              a = -1 === o ? e(n, t) : t[o];
            t[r++] = a;
          }
        }
      }
      function NC(t) {
        const n = t.tView;
        return null === n || n.incompleteFirstPass
          ? (t.tView = Mp(
              1,
              null,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts
            ))
          : n;
      }
      function Mp(t, n, e, i, r, s, o, a, l, c) {
        const d = 22 + i,
          u = d + r,
          f = (function QP(t, n) {
            const e = [];
            for (let i = 0; i < n; i++) e.push(i < t ? null : ce);
            return e;
          })(d, u),
          p = "function" == typeof c ? c() : c;
        return (f[1] = {
          type: t,
          blueprint: f,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: n,
          data: f.slice().fill(null, d),
          bindingStartIndex: d,
          expandoStartIndex: u,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof s ? s() : s,
          pipeRegistry: "function" == typeof o ? o() : o,
          firstChild: null,
          schemas: l,
          consts: p,
          incompleteFirstPass: !1,
        });
      }
      function BC(t, n, e, i) {
        const r = KC(n);
        null === e
          ? r.push(i)
          : (r.push(e), t.firstCreatePass && ZC(t).push(i, r.length - 1));
      }
      function VC(t, n, e) {
        for (let i in t)
          if (t.hasOwnProperty(i)) {
            const r = t[i];
            (e = null === e ? {} : e).hasOwnProperty(i)
              ? e[i].push(n, r)
              : (e[i] = [n, r]);
          }
        return e;
      }
      function HC(t, n) {
        const i = n.directiveEnd,
          r = t.data,
          s = n.attrs,
          o = [];
        let a = null,
          l = null;
        for (let c = n.directiveStart; c < i; c++) {
          const d = r[c],
            u = d.inputs,
            f = null === s || cC(n) ? null : cL(u, s);
          o.push(f), (a = VC(u, c, a)), (l = VC(d.outputs, c, l));
        }
        null !== a &&
          (a.hasOwnProperty("class") && (n.flags |= 16),
          a.hasOwnProperty("style") && (n.flags |= 32)),
          (n.initialInputs = o),
          (n.inputs = a),
          (n.outputs = l);
      }
      function bn(t, n, e, i, r, s, o, a) {
        const l = Ln(n, e);
        let d,
          c = n.inputs;
        !a && null != c && (d = c[i])
          ? (Rp(t, e, d, i, r), tc(n) && jC(e, n.index))
          : 3 & n.type &&
            ((i = (function XP(t) {
              return "class" === t
                ? "className"
                : "for" === t
                ? "htmlFor"
                : "formaction" === t
                ? "formAction"
                : "innerHtml" === t
                ? "innerHTML"
                : "readonly" === t
                ? "readOnly"
                : "tabindex" === t
                ? "tabIndex"
                : t;
            })(i)),
            (r = null != o ? o(r, n.value || "", i) : r),
            s.setProperty(l, i, r));
      }
      function jC(t, n) {
        const e = gn(n, t);
        16 & e[2] || (e[2] |= 32);
      }
      function Sp(t, n, e, i) {
        let r = !1;
        if (wy()) {
          const s = (function rL(t, n, e) {
              const i = t.directiveRegistry;
              let r = null;
              if (i)
                for (let s = 0; s < i.length; s++) {
                  const o = i[s];
                  dC(e, o.selectors, !1) &&
                    (r || (r = []),
                    fc(ha(e, n), t, o.type),
                    Jn(o) ? (zC(t, e), r.unshift(o)) : r.push(o));
                }
              return r;
            })(t, n, e),
            o = null === i ? null : { "": -1 };
          if (null !== s) {
            (r = !0), $C(e, t.data.length, s.length);
            for (let d = 0; d < s.length; d++) {
              const u = s[d];
              u.providersResolver && u.providersResolver(u);
            }
            let a = !1,
              l = !1,
              c = ao(t, n, s.length, null);
            for (let d = 0; d < s.length; d++) {
              const u = s[d];
              (e.mergedAttrs = dc(e.mergedAttrs, u.hostAttrs)),
                WC(t, e, n, c, u),
                oL(c, u, o),
                null !== u.contentQueries && (e.flags |= 8),
                (null !== u.hostBindings ||
                  null !== u.hostAttrs ||
                  0 !== u.hostVars) &&
                  (e.flags |= 128);
              const f = u.type.prototype;
              !a &&
                (f.ngOnChanges || f.ngOnInit || f.ngDoCheck) &&
                ((t.preOrderHooks || (t.preOrderHooks = [])).push(e.index),
                (a = !0)),
                !l &&
                  (f.ngOnChanges || f.ngDoCheck) &&
                  ((t.preOrderCheckHooks || (t.preOrderCheckHooks = [])).push(
                    e.index
                  ),
                  (l = !0)),
                c++;
            }
            HC(t, e);
          }
          o &&
            (function sL(t, n, e) {
              if (n) {
                const i = (t.localNames = []);
                for (let r = 0; r < n.length; r += 2) {
                  const s = e[n[r + 1]];
                  if (null == s) throw new M(-301, !1);
                  i.push(n[r], s);
                }
              }
            })(e, i, o);
        }
        return (e.mergedAttrs = dc(e.mergedAttrs, e.attrs)), r;
      }
      function GC(t, n, e, i, r, s) {
        const o = s.hostBindings;
        if (o) {
          let a = t.hostBindingOpCodes;
          null === a && (a = t.hostBindingOpCodes = []);
          const l = ~n.index;
          (function tL(t) {
            let n = t.length;
            for (; n > 0; ) {
              const e = t[--n];
              if ("number" == typeof e && e < 0) return e;
            }
            return 0;
          })(a) != l && a.push(l),
            a.push(i, r, o);
        }
      }
      function UC(t, n) {
        null !== t.hostBindings && t.hostBindings(1, n);
      }
      function zC(t, n) {
        (n.flags |= 2), (t.components || (t.components = [])).push(n.index);
      }
      function oL(t, n, e) {
        if (e) {
          if (n.exportAs)
            for (let i = 0; i < n.exportAs.length; i++) e[n.exportAs[i]] = t;
          Jn(n) && (e[""] = t);
        }
      }
      function $C(t, n, e) {
        (t.flags |= 1),
          (t.directiveStart = n),
          (t.directiveEnd = n + e),
          (t.providerIndexes = n);
      }
      function WC(t, n, e, i, r) {
        t.data[i] = r;
        const s = r.factory || (r.factory = Zr(r.type)),
          o = new da(s, Jn(r), h);
        (t.blueprint[i] = o),
          (e[i] = o),
          GC(t, n, 0, i, ao(t, e, r.hostVars, ce), r);
      }
      function aL(t, n, e) {
        const i = Ln(n, t),
          r = NC(e),
          s = t[10],
          o = Fc(
            t,
            Rc(
              t,
              r,
              null,
              e.onPush ? 32 : 16,
              i,
              n,
              s,
              s.createRenderer(i, e),
              null,
              null,
              null
            )
          );
        t[n.index] = o;
      }
      function vi(t, n, e, i, r, s) {
        const o = Ln(t, n);
        !(function Ep(t, n, e, i, r, s, o) {
          if (null == s) t.removeAttribute(n, r, e);
          else {
            const a = null == o ? le(s) : o(s, i || "", r);
            t.setAttribute(n, r, a, e);
          }
        })(n[11], o, s, t.value, e, i, r);
      }
      function lL(t, n, e, i, r, s) {
        const o = s[n];
        if (null !== o) {
          const a = i.setInput;
          for (let l = 0; l < o.length; ) {
            const c = o[l++],
              d = o[l++],
              u = o[l++];
            null !== a ? i.setInput(e, u, c, d) : (e[d] = u);
          }
        }
      }
      function cL(t, n) {
        let e = null,
          i = 0;
        for (; i < n.length; ) {
          const r = n[i];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              t.hasOwnProperty(r) &&
                (null === e && (e = []), e.push(r, t[r], n[i + 1])),
                (i += 2);
            } else i += 2;
          else i += 4;
        }
        return e;
      }
      function qC(t, n, e, i) {
        return new Array(t, !0, !1, n, null, 0, i, e, null, null);
      }
      function hL(t, n) {
        const e = gn(n, t);
        if (rc(e)) {
          const i = e[1];
          48 & e[2] ? ka(i, e, i.template, e[8]) : e[5] > 0 && Ap(e);
        }
      }
      function Ap(t) {
        for (let i = Zf(t); null !== i; i = Xf(i))
          for (let r = 10; r < i.length; r++) {
            const s = i[r];
            if (rc(s))
              if (512 & s[2]) {
                const o = s[1];
                ka(o, s, o.template, s[8]);
              } else s[5] > 0 && Ap(s);
          }
        const e = t[1].components;
        if (null !== e)
          for (let i = 0; i < e.length; i++) {
            const r = gn(e[i], t);
            rc(r) && r[5] > 0 && Ap(r);
          }
      }
      function fL(t, n) {
        const e = gn(n, t),
          i = e[1];
        (function pL(t, n) {
          for (let e = n.length; e < t.blueprint.length; e++)
            n.push(t.blueprint[e]);
        })(i, e),
          Oc(i, e, e[8]);
      }
      function Fc(t, n) {
        return t[13] ? (t[14][4] = n) : (t[13] = n), (t[14] = n), n;
      }
      function kp(t) {
        for (; t; ) {
          t[2] |= 32;
          const n = Ea(t);
          if (sO(t) && !n) return t;
          t = n;
        }
        return null;
      }
      function QC(t) {
        !(function YC(t) {
          for (let n = 0; n < t.components.length; n++) {
            const e = t.components[n],
              i = Yf(e);
            if (null !== i) {
              const r = i[1];
              YP(r, i, r.template, e);
            }
          }
        })(t[8]);
      }
      function Ip(t, n, e) {
        lf(0), n(t, e);
      }
      const gL = (() => Promise.resolve(null))();
      function KC(t) {
        return t[7] || (t[7] = []);
      }
      function ZC(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function XC(t, n, e) {
        return (
          (null === t || Jn(t)) &&
            (e = (function mO(t) {
              for (; Array.isArray(t); ) {
                if ("object" == typeof t[1]) return t;
                t = t[0];
              }
              return null;
            })(e[n.index])),
          e[11]
        );
      }
      function JC(t, n) {
        const e = t[9],
          i = e ? e.get(Gi, null) : null;
        i && i.handleError(n);
      }
      function Rp(t, n, e, i, r) {
        for (let s = 0; s < e.length; ) {
          const o = e[s++],
            a = e[s++],
            l = n[o],
            c = t.data[o];
          null !== c.setInput ? c.setInput(l, r, i, a) : (l[a] = r);
        }
      }
      function Pc(t, n, e) {
        let i = e ? t.styles : null,
          r = e ? t.classes : null,
          s = 0;
        if (null !== n)
          for (let o = 0; o < n.length; o++) {
            const a = n[o];
            "number" == typeof a
              ? (s = a)
              : 1 == s
              ? (r = jh(r, a))
              : 2 == s && (i = jh(i, a + ": " + n[++o] + ";"));
          }
        e ? (t.styles = i) : (t.stylesWithoutHost = i),
          e ? (t.classes = r) : (t.classesWithoutHost = r);
      }
      function Lc(t, n, e, i, r = !1) {
        for (; null !== e; ) {
          const s = n[e.index];
          if ((null !== s && i.push(bt(s)), Xn(s)))
            for (let a = 10; a < s.length; a++) {
              const l = s[a],
                c = l[1].firstChild;
              null !== c && Lc(l[1], l, c, i);
            }
          const o = e.type;
          if (8 & o) Lc(t, n, e.child, i);
          else if (32 & o) {
            const a = Kf(e, n);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & o) {
            const a = iC(n, e);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = Ea(n[16]);
              Lc(l[1], l, a, i, !0);
            }
          }
          e = r ? e.projectionNext : e.next;
        }
        return i;
      }
      class Ta {
        constructor(n, e) {
          (this._lView = n),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const n = this._lView,
            e = n[1];
          return Lc(e, n, e.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(n) {
          this._lView[8] = n;
        }
        get destroyed() {
          return 128 == (128 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const n = this._lView[3];
            if (Xn(n)) {
              const e = n[8],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (tp(n, i), mc(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          Yb(this._lView[1], this._lView);
        }
        onDestroy(n) {
          BC(this._lView[1], this._lView, null, n);
        }
        markForCheck() {
          kp(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -65;
        }
        reattach() {
          this._lView[2] |= 64;
        }
        detectChanges() {
          !(function Tp(t, n, e) {
            const i = n[10];
            i.begin && i.begin();
            try {
              ka(t, n, t.template, e);
            } catch (r) {
              throw (JC(n, r), r);
            } finally {
              i.end && i.end();
            }
          })(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new M(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function Q1(t, n) {
              Aa(t, n, n[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(n) {
          if (this._attachedToViewContainer) throw new M(902, !1);
          this._appRef = n;
        }
      }
      class _L extends Ta {
        constructor(n) {
          super(n), (this._view = n);
        }
        detectChanges() {
          QC(this._view);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class Op extends es {
        constructor(n) {
          super(), (this.ngModule = n);
        }
        resolveComponentFactory(n) {
          const e = je(n);
          return new Ia(e, this.ngModule);
        }
      }
      function e0(t) {
        const n = [];
        for (let e in t)
          t.hasOwnProperty(e) && n.push({ propName: t[e], templateName: e });
        return n;
      }
      class yL {
        constructor(n, e) {
          (this.injector = n), (this.parentInjector = e);
        }
        get(n, e, i) {
          const r = this.injector.get(n, Vf, i);
          return r !== Vf || e === Vf ? r : this.parentInjector.get(n, e, i);
        }
      }
      class Ia extends Tb {
        constructor(n, e) {
          super(),
            (this.componentDef = n),
            (this.ngModule = e),
            (this.componentType = n.type),
            (this.selector = (function mP(t) {
              return t.map(pP).join(",");
            })(n.selectors)),
            (this.ngContentSelectors = n.ngContentSelectors
              ? n.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return e0(this.componentDef.inputs);
        }
        get outputs() {
          return e0(this.componentDef.outputs);
        }
        create(n, e, i, r) {
          let s = (r = r || this.ngModule) instanceof xr ? r : r?.injector;
          s &&
            null !== this.componentDef.getStandaloneInjector &&
            (s = this.componentDef.getStandaloneInjector(s) || s);
          const o = s ? new yL(n, s) : n,
            a = o.get(Ma, null);
          if (null === a) throw new M(407, !1);
          const l = o.get(f1, null),
            c = a.createRenderer(null, this.componentDef),
            d = this.componentDef.selectors[0][0] || "div",
            u = i
              ? (function KP(t, n, e) {
                  return t.selectRootElement(n, e === Kn.ShadowDom);
                })(c, i, this.componentDef.encapsulation)
              : ep(
                  a.createRenderer(null, this.componentDef),
                  d,
                  (function vL(t) {
                    const n = t.toLowerCase();
                    return "svg" === n ? "svg" : "math" === n ? "math" : null;
                  })(d)
                ),
            f = this.componentDef.onPush ? 288 : 272,
            p = (function DL(t, n) {
              return {
                components: [],
                scheduler: t || N1,
                clean: gL,
                playerHandler: n || null,
                flags: 0,
              };
            })(),
            m = Mp(0, null, null, 1, 0, null, null, null, null, null),
            g = Rc(null, m, p, f, null, null, a, c, l, o, null);
          let v, b;
          cf(g);
          try {
            const k = (function xL(t, n, e, i, r, s) {
              const o = e[1];
              e[22] = t;
              const l = oo(o, 22, 2, "#host", null),
                c = (l.mergedAttrs = n.hostAttrs);
              null !== c &&
                (Pc(l, c, !0),
                null !== t &&
                  (cc(r, t, c),
                  null !== l.classes && op(r, t, l.classes),
                  null !== l.styles && oC(r, t, l.styles)));
              const d = i.createRenderer(t, n),
                u = Rc(
                  e,
                  NC(n),
                  null,
                  n.onPush ? 32 : 16,
                  e[22],
                  l,
                  i,
                  d,
                  s || null,
                  null,
                  null
                );
              return (
                o.firstCreatePass &&
                  (fc(ha(l, e), o, n.type), zC(o, l), $C(l, e.length, 1)),
                Fc(e, u),
                (e[22] = u)
              );
            })(u, this.componentDef, g, a, c);
            if (u)
              if (i) cc(c, u, ["ng-version", p1.full]);
              else {
                const { attrs: w, classes: L } = (function gP(t) {
                  const n = [],
                    e = [];
                  let i = 1,
                    r = 2;
                  for (; i < t.length; ) {
                    let s = t[i];
                    if ("string" == typeof s)
                      2 === r
                        ? "" !== s && n.push(s, t[++i])
                        : 8 === r && e.push(s);
                    else {
                      if (!ti(r)) break;
                      r = s;
                    }
                    i++;
                  }
                  return { attrs: n, classes: e };
                })(this.componentDef.selectors[0]);
                w && cc(c, u, w), L && L.length > 0 && op(c, u, L.join(" "));
              }
            if (((b = ef(m, 22)), void 0 !== e)) {
              const w = (b.projection = []);
              for (let L = 0; L < this.ngContentSelectors.length; L++) {
                const oe = e[L];
                w.push(null != oe ? Array.from(oe) : null);
              }
            }
            (v = (function wL(t, n, e, i, r) {
              const s = e[1],
                o = (function eL(t, n, e) {
                  const i = Et();
                  t.firstCreatePass &&
                    (e.providersResolver && e.providersResolver(e),
                    WC(t, i, n, ao(t, n, 1, null), e),
                    HC(t, i));
                  const r = fa(n, t, i.directiveStart, i);
                  Ut(r, n);
                  const s = Ln(i, n);
                  return s && Ut(s, n), r;
                })(s, e, n);
              if ((i.components.push(o), (t[8] = o), null !== r))
                for (const l of r) l(o, n);
              if (n.contentQueries) {
                const l = Et();
                n.contentQueries(1, o, l.directiveStart);
              }
              const a = Et();
              return (
                !s.firstCreatePass ||
                  (null === n.hostBindings && null === n.hostAttrs) ||
                  (br(a.index),
                  GC(e[1], a, 0, a.directiveStart, a.directiveEnd, n),
                  UC(n, o)),
                o
              );
            })(k, this.componentDef, g, p, [ML])),
              Oc(m, g, null);
          } finally {
            df();
          }
          return new CL(this.componentType, v, no(b, g), g, b);
        }
      }
      class CL extends class a1 {} {
        constructor(n, e, i, r, s) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = s),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new _L(r)),
            (this.componentType = n);
        }
        setInput(n, e) {
          const i = this._tNode.inputs;
          let r;
          if (null !== i && (r = i[n])) {
            const s = this._rootLView;
            Rp(s[1], s, r, n, e), jC(s, this._tNode.index);
          }
        }
        get injector() {
          return new Ws(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(n) {
          this.hostView.onDestroy(n);
        }
      }
      function ML() {
        const t = Et();
        oc(S()[1], t);
      }
      function x(t) {
        let n = (function t0(t) {
            return Object.getPrototypeOf(t.prototype).constructor;
          })(t.type),
          e = !0;
        const i = [t];
        for (; n; ) {
          let r;
          if (Jn(t)) r = n.ɵcmp || n.ɵdir;
          else {
            if (n.ɵcmp) throw new M(903, !1);
            r = n.ɵdir;
          }
          if (r) {
            if (e) {
              i.push(r);
              const o = t;
              (o.inputs = Fp(t.inputs)),
                (o.declaredInputs = Fp(t.declaredInputs)),
                (o.outputs = Fp(t.outputs));
              const a = r.hostBindings;
              a && kL(t, a);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && EL(t, l),
                c && AL(t, c),
                Hh(t.inputs, r.inputs),
                Hh(t.declaredInputs, r.declaredInputs),
                Hh(t.outputs, r.outputs),
                Jn(r) && r.data.animation)
              ) {
                const d = t.data;
                d.animation = (d.animation || []).concat(r.data.animation);
              }
            }
            const s = r.features;
            if (s)
              for (let o = 0; o < s.length; o++) {
                const a = s[o];
                a && a.ngInherit && a(t), a === x && (e = !1);
              }
          }
          n = Object.getPrototypeOf(n);
        }
        !(function SL(t) {
          let n = 0,
            e = null;
          for (let i = t.length - 1; i >= 0; i--) {
            const r = t[i];
            (r.hostVars = n += r.hostVars),
              (r.hostAttrs = dc(r.hostAttrs, (e = dc(e, r.hostAttrs))));
          }
        })(i);
      }
      function Fp(t) {
        return t === Ls ? {} : t === Ne ? [] : t;
      }
      function EL(t, n) {
        const e = t.viewQuery;
        t.viewQuery = e
          ? (i, r) => {
              n(i, r), e(i, r);
            }
          : n;
      }
      function AL(t, n) {
        const e = t.contentQueries;
        t.contentQueries = e
          ? (i, r, s) => {
              n(i, r, s), e(i, r, s);
            }
          : n;
      }
      function kL(t, n) {
        const e = t.hostBindings;
        t.hostBindings = e
          ? (i, r) => {
              n(i, r), e(i, r);
            }
          : n;
      }
      let Nc = null;
      function ns() {
        if (!Nc) {
          const t = He.Symbol;
          if (t && t.iterator) Nc = t.iterator;
          else {
            const n = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < n.length; ++e) {
              const i = n[e];
              "entries" !== i &&
                "size" !== i &&
                Map.prototype[i] === Map.prototype.entries &&
                (Nc = i);
            }
          }
        }
        return Nc;
      }
      function Ra(t) {
        return (
          !!Pp(t) && (Array.isArray(t) || (!(t instanceof Map) && ns() in t))
        );
      }
      function Pp(t) {
        return null !== t && ("function" == typeof t || "object" == typeof t);
      }
      function zt(t, n, e) {
        return !Object.is(t[n], e) && ((t[n] = e), !0);
      }
      function se(t, n, e, i) {
        const r = S();
        return zt(r, Gs(), n) && (Te(), vi(dt(), r, t, n, e, i)), se;
      }
      function kt(t, n, e, i, r, s, o, a) {
        const l = S(),
          c = Te(),
          d = t + 22,
          u = c.firstCreatePass
            ? (function BL(t, n, e, i, r, s, o, a, l) {
                const c = n.consts,
                  d = oo(n, t, 4, o || null, yr(c, a));
                Sp(n, e, d, yr(c, l)), oc(n, d);
                const u = (d.tViews = Mp(
                  2,
                  d,
                  i,
                  r,
                  s,
                  n.directiveRegistry,
                  n.pipeRegistry,
                  null,
                  n.schemas,
                  c
                ));
                return (
                  null !== n.queries &&
                    (n.queries.template(n, d),
                    (u.queries = n.queries.embeddedTView(d))),
                  d
                );
              })(d, c, l, n, e, i, r, s, o)
            : c.data[d];
        pi(u, !1);
        const f = l[11].createComment("");
        Sc(c, l, f, u),
          Ut(f, l),
          Fc(l, (l[d] = qC(f, l, f, u))),
          nc(u) && wp(c, l, u),
          null != o && Dp(l, u, a);
      }
      function ln(t) {
        return (function js(t, n) {
          return t[n];
        })(
          (function wO() {
            return ae.lFrame.contextLView;
          })(),
          22 + t
        );
      }
      function _e(t, n, e) {
        const i = S();
        return zt(i, Gs(), n) && bn(Te(), dt(), i, t, n, i[11], e, !1), _e;
      }
      function Lp(t, n, e, i, r) {
        const o = r ? "class" : "style";
        Rp(t, e, n.inputs[o], o, i);
      }
      function R(t, n, e, i) {
        const r = S(),
          s = Te(),
          o = 22 + t,
          a = r[11],
          l = (r[o] = ep(
            a,
            n,
            (function RO() {
              return ae.lFrame.currentNamespace;
            })()
          )),
          c = s.firstCreatePass
            ? (function HL(t, n, e, i, r, s, o) {
                const a = n.consts,
                  c = oo(n, t, 2, r, yr(a, s));
                return (
                  Sp(n, e, c, yr(a, o)),
                  null !== c.attrs && Pc(c, c.attrs, !1),
                  null !== c.mergedAttrs && Pc(c, c.mergedAttrs, !0),
                  null !== n.queries && n.queries.elementStart(n, c),
                  c
                );
              })(o, s, r, 0, n, e, i)
            : s.data[o];
        pi(c, !0);
        const d = c.mergedAttrs;
        null !== d && cc(a, l, d);
        const u = c.classes;
        null !== u && op(a, l, u);
        const f = c.styles;
        return (
          null !== f && oC(a, l, f),
          64 != (64 & c.flags) && Sc(s, r, l, c),
          0 ===
            (function vO() {
              return ae.lFrame.elementDepthCount;
            })() && Ut(l, r),
          (function yO() {
            ae.lFrame.elementDepthCount++;
          })(),
          nc(c) &&
            (wp(s, r, c),
            (function LC(t, n, e) {
              if (Qh(n)) {
                const r = n.directiveEnd;
                for (let s = n.directiveStart; s < r; s++) {
                  const o = t.data[s];
                  o.contentQueries && o.contentQueries(1, e[s], s);
                }
              }
            })(s, c, r)),
          null !== i && Dp(r, c),
          R
        );
      }
      function F() {
        let t = Et();
        nf() ? rf() : ((t = t.parent), pi(t, !1));
        const n = t;
        !(function bO() {
          ae.lFrame.elementDepthCount--;
        })();
        const e = Te();
        return (
          e.firstCreatePass && (oc(e, t), Qh(t) && e.queries.elementEnd(t)),
          null != n.classesWithoutHost &&
            (function NO(t) {
              return 0 != (16 & t.flags);
            })(n) &&
            Lp(e, n, S(), n.classesWithoutHost, !0),
          null != n.stylesWithoutHost &&
            (function BO(t) {
              return 0 != (32 & t.flags);
            })(n) &&
            Lp(e, n, S(), n.stylesWithoutHost, !1),
          F
        );
      }
      function Me(t, n, e, i) {
        return R(t, n, e, i), F(), Me;
      }
      function vo() {
        return S();
      }
      function La(t) {
        return !!t && "function" == typeof t.then;
      }
      const Np = function h0(t) {
        return !!t && "function" == typeof t.subscribe;
      };
      function he(t, n, e, i) {
        const r = S(),
          s = Te(),
          o = Et();
        return f0(s, r, r[11], o, t, n, 0, i), he;
      }
      function Vc(t, n) {
        const e = Et(),
          i = S(),
          r = Te();
        return f0(r, i, XC(af(r.data), e, i), e, t, n), Vc;
      }
      function f0(t, n, e, i, r, s, o, a) {
        const l = nc(i),
          d = t.firstCreatePass && ZC(t),
          u = n[8],
          f = KC(n);
        let p = !0;
        if (3 & i.type || a) {
          const v = Ln(i, n),
            b = a ? a(v) : v,
            k = f.length,
            w = a ? (oe) => a(bt(oe[i.index])) : i.index;
          let L = null;
          if (
            (!a &&
              l &&
              (L = (function GL(t, n, e, i) {
                const r = t.cleanup;
                if (null != r)
                  for (let s = 0; s < r.length - 1; s += 2) {
                    const o = r[s];
                    if (o === e && r[s + 1] === i) {
                      const a = n[7],
                        l = r[s + 2];
                      return a.length > l ? a[l] : null;
                    }
                    "string" == typeof o && (s += 2);
                  }
                return null;
              })(t, n, r, i.index)),
            null !== L)
          )
            ((L.__ngLastListenerFn__ || L).__ngNextListenerFn__ = s),
              (L.__ngLastListenerFn__ = s),
              (p = !1);
          else {
            s = m0(i, n, u, s, !1);
            const oe = e.listen(b, r, s);
            f.push(s, oe), d && d.push(r, w, k, k + 1);
          }
        } else s = m0(i, n, u, s, !1);
        const m = i.outputs;
        let g;
        if (p && null !== m && (g = m[r])) {
          const v = g.length;
          if (v)
            for (let b = 0; b < v; b += 2) {
              const Ae = n[g[b]][g[b + 1]].subscribe(s),
                st = f.length;
              f.push(s, Ae), d && d.push(r, i.index, st, -(st + 1));
            }
        }
      }
      function p0(t, n, e, i) {
        try {
          return !1 !== e(i);
        } catch (r) {
          return JC(t, r), !1;
        }
      }
      function m0(t, n, e, i, r) {
        return function s(o) {
          if (o === Function) return i;
          kp(2 & t.flags ? gn(t.index, n) : n);
          let l = p0(n, 0, i, o),
            c = s.__ngNextListenerFn__;
          for (; c; ) (l = p0(n, 0, c, o) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && (o.preventDefault(), (o.returnValue = !1)), l;
        };
      }
      function Ct(t = 1) {
        return (function AO(t) {
          return (ae.lFrame.contextLView = (function kO(t, n) {
            for (; t > 0; ) (n = n[15]), t--;
            return n;
          })(t, ae.lFrame.contextLView))[8];
        })(t);
      }
      function UL(t, n) {
        let e = null;
        const i = (function dP(t) {
          const n = t.attrs;
          if (null != n) {
            const e = n.indexOf(5);
            if (0 == (1 & e)) return n[e + 1];
          }
          return null;
        })(t);
        for (let r = 0; r < n.length; r++) {
          const s = n[r];
          if ("*" !== s) {
            if (null === i ? dC(t, s, !0) : fP(i, s)) return r;
          } else e = r;
        }
        return e;
      }
      function Qe(t) {
        const n = S()[16][6];
        if (!n.projection) {
          const i = (n.projection = ga(t ? t.length : 1, null)),
            r = i.slice();
          let s = n.child;
          for (; null !== s; ) {
            const o = t ? UL(s, t) : 0;
            null !== o &&
              (r[o] ? (r[o].projectionNext = s) : (i[o] = s), (r[o] = s)),
              (s = s.next);
          }
        }
      }
      function Ce(t, n = 0, e) {
        const i = S(),
          r = Te(),
          s = oo(r, 22 + t, 16, null, e || null);
        null === s.projection && (s.projection = n),
          rf(),
          64 != (64 & s.flags) &&
            (function iP(t, n, e) {
              sC(n[11], 0, n, e, Qb(t, e, n), Jb(e.parent || n[6], e, n));
            })(r, i, s);
      }
      function M0(t, n, e, i, r) {
        const s = t[e + 1],
          o = null === n;
        let a = i ? ni(s) : zi(s),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const d = t[a + 1];
          WL(t[a], n) && ((l = !0), (t[a + 1] = i ? fp(d) : up(d))),
            (a = i ? ni(d) : zi(d));
        }
        l && (t[e + 1] = i ? up(s) : fp(s));
      }
      function WL(t, n) {
        return (
          null === t ||
          null == n ||
          (Array.isArray(t) ? t[1] : t) === n ||
          (!(!Array.isArray(t) || "string" != typeof n) && Zs(t, n) >= 0)
        );
      }
      function cn(t, n, e) {
        return ii(t, n, e, !1), cn;
      }
      function Se(t, n) {
        return ii(t, n, null, !0), Se;
      }
      function ii(t, n, e, i) {
        const r = S(),
          s = Te(),
          o = (function Hi(t) {
            const n = ae.lFrame,
              e = n.bindingIndex;
            return (n.bindingIndex = n.bindingIndex + t), e;
          })(2);
        s.firstUpdatePass &&
          (function O0(t, n, e, i) {
            const r = t.data;
            if (null === r[e + 1]) {
              const s = r[Kt()],
                o = (function R0(t, n) {
                  return n >= t.expandoStartIndex;
                })(t, e);
              (function N0(t, n) {
                return 0 != (t.flags & (n ? 16 : 32));
              })(s, i) &&
                null === n &&
                !o &&
                (n = !1),
                (n = (function tN(t, n, e, i) {
                  const r = af(t);
                  let s = i ? n.residualClasses : n.residualStyles;
                  if (null === r)
                    0 === (i ? n.classBindings : n.styleBindings) &&
                      ((e = Na((e = Vp(null, t, n, e, i)), n.attrs, i)),
                      (s = null));
                  else {
                    const o = n.directiveStylingLast;
                    if (-1 === o || t[o] !== r)
                      if (((e = Vp(r, t, n, e, i)), null === s)) {
                        let l = (function nN(t, n, e) {
                          const i = e ? n.classBindings : n.styleBindings;
                          if (0 !== zi(i)) return t[ni(i)];
                        })(t, n, i);
                        void 0 !== l &&
                          Array.isArray(l) &&
                          ((l = Vp(null, t, n, l[1], i)),
                          (l = Na(l, n.attrs, i)),
                          (function iN(t, n, e, i) {
                            t[ni(e ? n.classBindings : n.styleBindings)] = i;
                          })(t, n, i, l));
                      } else
                        s = (function rN(t, n, e) {
                          let i;
                          const r = n.directiveEnd;
                          for (let s = 1 + n.directiveStylingLast; s < r; s++)
                            i = Na(i, t[s].hostAttrs, e);
                          return Na(i, n.attrs, e);
                        })(t, n, i);
                  }
                  return (
                    void 0 !== s &&
                      (i ? (n.residualClasses = s) : (n.residualStyles = s)),
                    e
                  );
                })(r, s, n, i)),
                (function zL(t, n, e, i, r, s) {
                  let o = s ? n.classBindings : n.styleBindings,
                    a = ni(o),
                    l = zi(o);
                  t[i] = e;
                  let d,
                    c = !1;
                  if (Array.isArray(e)) {
                    const u = e;
                    (d = u[1]), (null === d || Zs(u, d) > 0) && (c = !0);
                  } else d = e;
                  if (r)
                    if (0 !== l) {
                      const f = ni(t[a + 1]);
                      (t[i + 1] = kc(f, a)),
                        0 !== f && (t[f + 1] = hp(t[f + 1], i)),
                        (t[a + 1] = (function PP(t, n) {
                          return (131071 & t) | (n << 17);
                        })(t[a + 1], i));
                    } else
                      (t[i + 1] = kc(a, 0)),
                        0 !== a && (t[a + 1] = hp(t[a + 1], i)),
                        (a = i);
                  else
                    (t[i + 1] = kc(l, 0)),
                      0 === a ? (a = i) : (t[l + 1] = hp(t[l + 1], i)),
                      (l = i);
                  c && (t[i + 1] = up(t[i + 1])),
                    M0(t, d, i, !0),
                    M0(t, d, i, !1),
                    (function $L(t, n, e, i, r) {
                      const s = r ? t.residualClasses : t.residualStyles;
                      null != s &&
                        "string" == typeof n &&
                        Zs(s, n) >= 0 &&
                        (e[i + 1] = fp(e[i + 1]));
                    })(n, d, t, i, s),
                    (o = kc(a, l)),
                    s ? (n.classBindings = o) : (n.styleBindings = o);
                })(r, s, n, e, o, i);
            }
          })(s, t, o, i),
          n !== ce &&
            zt(r, o, n) &&
            (function P0(t, n, e, i, r, s, o, a) {
              if (!(3 & n.type)) return;
              const l = t.data,
                c = l[a + 1];
              Hc(
                (function SC(t) {
                  return 1 == (1 & t);
                })(c)
                  ? L0(l, n, e, r, zi(c), o)
                  : void 0
              ) ||
                (Hc(s) ||
                  ((function MC(t) {
                    return 2 == (2 & t);
                  })(c) &&
                    (s = L0(l, null, e, r, a, o))),
                (function sP(t, n, e, i, r) {
                  if (n) r ? t.addClass(e, i) : t.removeClass(e, i);
                  else {
                    let s = -1 === i.indexOf("-") ? void 0 : an.DashCase;
                    null == r
                      ? t.removeStyle(e, i, s)
                      : ("string" == typeof r &&
                          r.endsWith("!important") &&
                          ((r = r.slice(0, -10)), (s |= an.Important)),
                        t.setStyle(e, i, r, s));
                  }
                })(i, o, ic(Kt(), e), r, s));
            })(
              s,
              s.data[Kt()],
              r,
              r[11],
              t,
              (r[o + 1] = (function aN(t, n) {
                return (
                  null == t ||
                    ("string" == typeof n
                      ? (t += n)
                      : "object" == typeof t && (t = $e(yn(t)))),
                  t
                );
              })(n, e)),
              i,
              o
            );
      }
      function Vp(t, n, e, i, r) {
        let s = null;
        const o = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < o && ((s = n[a]), (i = Na(i, s.hostAttrs, r)), s !== t);

        )
          a++;
        return null !== t && (e.directiveStylingLast = a), i;
      }
      function Na(t, n, e) {
        const i = e ? 1 : 2;
        let r = -1;
        if (null !== n)
          for (let s = 0; s < n.length; s++) {
            const o = n[s];
            "number" == typeof o
              ? (r = o)
              : r === i &&
                (Array.isArray(t) || (t = void 0 === t ? [] : ["", t]),
                vn(t, o, !!e || n[++s]));
          }
        return void 0 === t ? null : t;
      }
      function L0(t, n, e, i, r, s) {
        const o = null === n;
        let a;
        for (; r > 0; ) {
          const l = t[r],
            c = Array.isArray(l),
            d = c ? l[1] : l,
            u = null === d;
          let f = e[r + 1];
          f === ce && (f = u ? Ne : void 0);
          let p = u ? yf(f, i) : d === i ? f : void 0;
          if ((c && !Hc(p) && (p = yf(l, i)), Hc(p) && ((a = p), o))) return a;
          const m = t[r + 1];
          r = o ? ni(m) : zi(m);
        }
        if (null !== n) {
          let l = s ? n.residualClasses : n.residualStyles;
          null != l && (a = yf(l, i));
        }
        return a;
      }
      function Hc(t) {
        return void 0 !== t;
      }
      function E(t, n = "") {
        const e = S(),
          i = Te(),
          r = t + 22,
          s = i.firstCreatePass ? oo(i, r, 1, n, null) : i.data[r],
          o = (e[r] = (function Jf(t, n) {
            return t.createText(n);
          })(e[11], n));
        Sc(i, e, o, s), pi(s, !1);
      }
      function Ba(t) {
        return xi("", t, ""), Ba;
      }
      function xi(t, n, e) {
        const i = S(),
          r = (function co(t, n, e, i) {
            return zt(t, Gs(), e) ? n + le(e) + i : ce;
          })(i, t, n, e);
        return (
          r !== ce &&
            (function $i(t, n, e) {
              const i = ic(n, t);
              !(function Wb(t, n, e) {
                t.setValue(n, e);
              })(t[11], i, e);
            })(i, Kt(), r),
          xi
        );
      }
      function Wi(t, n, e) {
        const i = S();
        return zt(i, Gs(), n) && bn(Te(), dt(), i, t, n, i[11], e, !0), Wi;
      }
      function jc(t, n, e) {
        const i = S();
        if (zt(i, Gs(), n)) {
          const s = Te(),
            o = dt();
          bn(s, o, i, t, n, XC(af(s.data), o, i), e, !0);
        }
        return jc;
      }
      const Co = "en-US";
      let ix = Co;
      function Gp(t, n, e, i, r) {
        if (((t = re(t)), Array.isArray(t)))
          for (let s = 0; s < t.length; s++) Gp(t[s], n, e, i, r);
        else {
          const s = Te(),
            o = S();
          let a = Jr(t) ? t : re(t.provide),
            l = kb(t);
          const c = Et(),
            d = 1048575 & c.providerIndexes,
            u = c.directiveStart,
            f = c.providerIndexes >> 20;
          if (Jr(t) || !t.multi) {
            const p = new da(l, r, h),
              m = zp(a, n, r ? d : d + f, u);
            -1 === m
              ? (fc(ha(c, o), s, a),
                Up(s, t, n.length),
                n.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(p),
                o.push(p))
              : ((e[m] = p), (o[m] = p));
          } else {
            const p = zp(a, n, d + f, u),
              m = zp(a, n, d, d + f),
              g = p >= 0 && e[p],
              v = m >= 0 && e[m];
            if ((r && !v) || (!r && !g)) {
              fc(ha(c, o), s, a);
              const b = (function MB(t, n, e, i, r) {
                const s = new da(t, e, h);
                return (
                  (s.multi = []),
                  (s.index = n),
                  (s.componentProviders = 0),
                  Ax(s, r, i && !e),
                  s
                );
              })(r ? DB : wB, e.length, r, i, l);
              !r && v && (e[m].providerFactory = b),
                Up(s, t, n.length, 0),
                n.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(b),
                o.push(b);
            } else Up(s, t, p > -1 ? p : m, Ax(e[r ? m : p], l, !r && i));
            !r && i && v && e[m].componentProviders++;
          }
        }
      }
      function Up(t, n, e, i) {
        const r = Jr(n),
          s = (function XF(t) {
            return !!t.useClass;
          })(n);
        if (r || s) {
          const l = (s ? re(n.useClass) : n).prototype.ngOnDestroy;
          if (l) {
            const c = t.destroyHooks || (t.destroyHooks = []);
            if (!r && n.multi) {
              const d = c.indexOf(e);
              -1 === d ? c.push(e, [i, l]) : c[d + 1].push(i, l);
            } else c.push(e, l);
          }
        }
      }
      function Ax(t, n, e) {
        return e && t.componentProviders++, t.multi.push(n) - 1;
      }
      function zp(t, n, e, i) {
        for (let r = e; r < i; r++) if (n[r] === t) return r;
        return -1;
      }
      function wB(t, n, e, i) {
        return $p(this.multi, []);
      }
      function DB(t, n, e, i) {
        const r = this.multi;
        let s;
        if (this.providerFactory) {
          const o = this.providerFactory.componentProviders,
            a = fa(e, e[1], this.providerFactory.index, i);
          (s = a.slice(0, o)), $p(r, s);
          for (let l = o; l < a.length; l++) s.push(a[l]);
        } else (s = []), $p(r, s);
        return s;
      }
      function $p(t, n) {
        for (let e = 0; e < t.length; e++) n.push((0, t[e])());
        return n;
      }
      function G(t, n = []) {
        return (e) => {
          e.providersResolver = (i, r) =>
            (function xB(t, n, e) {
              const i = Te();
              if (i.firstCreatePass) {
                const r = Jn(t);
                Gp(e, i.data, i.blueprint, r, !0),
                  Gp(n, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(t) : t, n);
        };
      }
      class ss {}
      class kx {}
      class Tx extends ss {
        constructor(n, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Op(this));
          const i = pn(n);
          (this._bootstrapComponents = Ui(i.bootstrap)),
            (this._r3Injector = _C(
              n,
              e,
              [
                { provide: ss, useValue: this },
                { provide: es, useValue: this.componentFactoryResolver },
              ],
              $e(n),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(n));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const n = this._r3Injector;
          !n.destroyed && n.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(n) {
          this.destroyCbs.push(n);
        }
      }
      class Wp extends kx {
        constructor(n) {
          super(), (this.moduleType = n);
        }
        create(n) {
          return new Tx(this.moduleType, n);
        }
      }
      class EB extends ss {
        constructor(n, e, i) {
          super(),
            (this.componentFactoryResolver = new Op(this)),
            (this.instance = null);
          const r = new Ab(
            [
              ...n,
              { provide: ss, useValue: this },
              { provide: es, useValue: this.componentFactoryResolver },
            ],
            e || Dc(),
            i,
            new Set(["environment"])
          );
          (this.injector = r), r.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(n) {
          this.injector.onDestroy(n);
        }
      }
      function Wc(t, n, e = null) {
        return new EB(t, n, e).injector;
      }
      let AB = (() => {
        class t {
          constructor(e) {
            (this._injector = e), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(e) {
            if (!e.standalone) return null;
            if (!this.cachedInjectors.has(e.id)) {
              const i = Db(0, e.type),
                r =
                  i.length > 0
                    ? Wc([i], this._injector, `Standalone[${e.type.name}]`)
                    : null;
              this.cachedInjectors.set(e.id, r);
            }
            return this.cachedInjectors.get(e.id);
          }
          ngOnDestroy() {
            try {
              for (const e of this.cachedInjectors.values())
                null !== e && e.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (t.ɵprov = D({
            token: t,
            providedIn: "environment",
            factory: () => new t(_(xr)),
          })),
          t
        );
      })();
      function Ix(t) {
        t.getStandaloneInjector = (n) =>
          n.get(AB).getOrCreateStandaloneInjector(t);
      }
      function Yp(t) {
        return (n) => {
          setTimeout(t, void 0, n);
        };
      }
      const W = class JB extends B {
        constructor(n = !1) {
          super(), (this.__isAsync = n);
        }
        emit(n) {
          super.next(n);
        }
        subscribe(n, e, i) {
          let r = n,
            s = e || (() => null),
            o = i;
          if (n && "object" == typeof n) {
            const l = n;
            (r = l.next?.bind(l)),
              (s = l.error?.bind(l)),
              (o = l.complete?.bind(l));
          }
          this.__isAsync && ((s = Yp(s)), r && (r = Yp(r)), o && (o = Yp(o)));
          const a = super.subscribe({ next: r, error: s, complete: o });
          return n instanceof Ve && n.add(a), a;
        }
      };
      function eV() {
        return this._results[ns()]();
      }
      class os {
        constructor(n = !1) {
          (this._emitDistinctChangesOnly = n),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = ns(),
            i = os.prototype;
          i[e] || (i[e] = eV);
        }
        get changes() {
          return this._changes || (this._changes = new W());
        }
        get(n) {
          return this._results[n];
        }
        map(n) {
          return this._results.map(n);
        }
        filter(n) {
          return this._results.filter(n);
        }
        find(n) {
          return this._results.find(n);
        }
        reduce(n, e) {
          return this._results.reduce(n, e);
        }
        forEach(n) {
          this._results.forEach(n);
        }
        some(n) {
          return this._results.some(n);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(n, e) {
          const i = this;
          i.dirty = !1;
          const r = _n(n);
          (this._changesDetected = !(function YO(t, n, e) {
            if (t.length !== n.length) return !1;
            for (let i = 0; i < t.length; i++) {
              let r = t[i],
                s = n[i];
              if ((e && ((r = e(r)), (s = e(s))), s !== r)) return !1;
            }
            return !0;
          })(i._results, r, e)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let xt = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = iV), t;
      })();
      const tV = xt,
        nV = class extends tV {
          constructor(n, e, i) {
            super(),
              (this._declarationLView = n),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          createEmbeddedView(n, e) {
            const i = this._declarationTContainer.tViews,
              r = Rc(
                this._declarationLView,
                i,
                n,
                16,
                null,
                i.declTNode,
                null,
                null,
                null,
                null,
                e || null
              );
            r[17] = this._declarationLView[this._declarationTContainer.index];
            const o = this._declarationLView[19];
            return (
              null !== o && (r[19] = o.createEmbeddedView(i)),
              Oc(i, r, n),
              new Ta(r)
            );
          }
        };
      function iV() {
        return Yc(Et(), S());
      }
      function Yc(t, n) {
        return 4 & t.type ? new nV(n, t, no(t, n)) : null;
      }
      let _t = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = rV), t;
      })();
      function rV() {
        return $x(Et(), S());
      }
      const sV = _t,
        Ux = class extends sV {
          constructor(n, e, i) {
            super(),
              (this._lContainer = n),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return no(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Ws(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const n = hc(this._hostTNode, this._hostLView);
            if (By(n)) {
              const e = $s(n, this._hostLView),
                i = zs(n);
              return new Ws(e[1].data[i + 8], e);
            }
            return new Ws(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(n) {
            const e = zx(this._lContainer);
            return (null !== e && e[n]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(n, e, i) {
            let r, s;
            "number" == typeof i
              ? (r = i)
              : null != i && ((r = i.index), (s = i.injector));
            const o = n.createEmbeddedView(e || {}, s);
            return this.insert(o, r), o;
          }
          createComponent(n, e, i, r, s) {
            const o =
              n &&
              !(function ma(t) {
                return "function" == typeof t;
              })(n);
            let a;
            if (o) a = e;
            else {
              const u = e || {};
              (a = u.index),
                (i = u.injector),
                (r = u.projectableNodes),
                (s = u.environmentInjector || u.ngModuleRef);
            }
            const l = o ? n : new Ia(je(n)),
              c = i || this.parentInjector;
            if (!s && null == l.ngModule) {
              const f = (o ? c : this.parentInjector).get(xr, null);
              f && (s = f);
            }
            const d = l.create(c, r, void 0, s);
            return this.insert(d.hostView, a), d;
          }
          insert(n, e) {
            const i = n._lView,
              r = i[1];
            if (
              (function _O(t) {
                return Xn(t[3]);
              })(i)
            ) {
              const d = this.indexOf(n);
              if (-1 !== d) this.detach(d);
              else {
                const u = i[3],
                  f = new Ux(u, u[6], u[3]);
                f.detach(f.indexOf(n));
              }
            }
            const s = this._adjustIndex(e),
              o = this._lContainer;
            !(function Z1(t, n, e, i) {
              const r = 10 + i,
                s = e.length;
              i > 0 && (e[r - 1][4] = n),
                i < s - 10
                  ? ((n[4] = e[r]), Qy(e, 10 + i, n))
                  : (e.push(n), (n[4] = null)),
                (n[3] = e);
              const o = n[17];
              null !== o &&
                e !== o &&
                (function X1(t, n) {
                  const e = t[9];
                  n[16] !== n[3][3][16] && (t[2] = !0),
                    null === e ? (t[9] = [n]) : e.push(n);
                })(o, n);
              const a = n[19];
              null !== a && a.insertView(t), (n[2] |= 64);
            })(r, i, o, s);
            const a = rp(s, o),
              l = i[11],
              c = Mc(l, o[7]);
            return (
              null !== c &&
                (function Y1(t, n, e, i, r, s) {
                  (i[0] = r), (i[6] = n), Aa(t, i, e, 1, r, s);
                })(r, o[6], l, i, c, a),
              n.attachToViewContainerRef(),
              Qy(Qp(o), s, n),
              n
            );
          }
          move(n, e) {
            return this.insert(n, e);
          }
          indexOf(n) {
            const e = zx(this._lContainer);
            return null !== e ? e.indexOf(n) : -1;
          }
          remove(n) {
            const e = this._adjustIndex(n, -1),
              i = tp(this._lContainer, e);
            i && (mc(Qp(this._lContainer), e), Yb(i[1], i));
          }
          detach(n) {
            const e = this._adjustIndex(n, -1),
              i = tp(this._lContainer, e);
            return i && null != mc(Qp(this._lContainer), e) ? new Ta(i) : null;
          }
          _adjustIndex(n, e = 0) {
            return n ?? this.length + e;
          }
        };
      function zx(t) {
        return t[8];
      }
      function Qp(t) {
        return t[8] || (t[8] = []);
      }
      function $x(t, n) {
        let e;
        const i = n[t.index];
        if (Xn(i)) e = i;
        else {
          let r;
          if (8 & t.type) r = bt(i);
          else {
            const s = n[11];
            r = s.createComment("");
            const o = Ln(t, n);
            ts(
              s,
              Mc(s, o),
              r,
              (function nP(t, n) {
                return t.nextSibling(n);
              })(s, o),
              !1
            );
          }
          (n[t.index] = e = qC(i, n, r, t)), Fc(n, e);
        }
        return new Ux(e, t, n);
      }
      class Kp {
        constructor(n) {
          (this.queryList = n), (this.matches = null);
        }
        clone() {
          return new Kp(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Zp {
        constructor(n = []) {
          this.queries = n;
        }
        createEmbeddedView(n) {
          const e = n.queries;
          if (null !== e) {
            const i =
                null !== n.contentQueries ? n.contentQueries[0] : e.length,
              r = [];
            for (let s = 0; s < i; s++) {
              const o = e.getByIndex(s);
              r.push(this.queries[o.indexInDeclarationView].clone());
            }
            return new Zp(r);
          }
          return null;
        }
        insertView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        detachView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        dirtyQueriesWithMatches(n) {
          for (let e = 0; e < this.queries.length; e++)
            null !== Kx(n, e).matches && this.queries[e].setDirty();
        }
      }
      class Wx {
        constructor(n, e, i = null) {
          (this.predicate = n), (this.flags = e), (this.read = i);
        }
      }
      class Xp {
        constructor(n = []) {
          this.queries = n;
        }
        elementStart(n, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(n, e);
        }
        elementEnd(n) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(n);
        }
        embeddedTView(n) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== e ? e.length : 0,
              s = this.getByIndex(i).embeddedTView(n, r);
            s &&
              ((s.indexInDeclarationView = i),
              null !== e ? e.push(s) : (e = [s]));
          }
          return null !== e ? new Xp(e) : null;
        }
        template(n, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(n, e);
        }
        getByIndex(n) {
          return this.queries[n];
        }
        get length() {
          return this.queries.length;
        }
        track(n) {
          this.queries.push(n);
        }
      }
      class Jp {
        constructor(n, e = -1) {
          (this.metadata = n),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(n, e) {
          this.isApplyingToNode(e) && this.matchTNode(n, e);
        }
        elementEnd(n) {
          this._declarationNodeIndex === n.index &&
            (this._appliesToNextNode = !1);
        }
        template(n, e) {
          this.elementStart(n, e);
        }
        embeddedTView(n, e) {
          return this.isApplyingToNode(n)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-n.index, e),
              new Jp(this.metadata))
            : null;
        }
        isApplyingToNode(n) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = n.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(n, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const s = i[r];
              this.matchTNodeWithReadOption(n, e, lV(e, s)),
                this.matchTNodeWithReadOption(n, e, pc(e, n, s, !1, !1));
            }
          else
            i === xt
              ? 4 & e.type && this.matchTNodeWithReadOption(n, e, -1)
              : this.matchTNodeWithReadOption(n, e, pc(e, n, i, !1, !1));
        }
        matchTNodeWithReadOption(n, e, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === T || r === _t || (r === xt && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const s = pc(e, n, r, !1, !1);
                null !== s && this.addMatch(e.index, s);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(n, e) {
          null === this.matches
            ? (this.matches = [n, e])
            : this.matches.push(n, e);
        }
      }
      function lV(t, n) {
        const e = t.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === n) return e[i + 1];
        return null;
      }
      function dV(t, n, e, i) {
        return -1 === e
          ? (function cV(t, n) {
              return 11 & t.type ? no(t, n) : 4 & t.type ? Yc(t, n) : null;
            })(n, t)
          : -2 === e
          ? (function uV(t, n, e) {
              return e === T
                ? no(n, t)
                : e === xt
                ? Yc(n, t)
                : e === _t
                ? $x(n, t)
                : void 0;
            })(t, n, i)
          : fa(t, t[1], e, n);
      }
      function qx(t, n, e, i) {
        const r = n[19].queries[i];
        if (null === r.matches) {
          const s = t.data,
            o = e.matches,
            a = [];
          for (let l = 0; l < o.length; l += 2) {
            const c = o[l];
            a.push(c < 0 ? null : dV(n, s[c], o[l + 1], e.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function em(t, n, e, i) {
        const r = t.queries.getByIndex(e),
          s = r.matches;
        if (null !== s) {
          const o = qx(t, n, r, e);
          for (let a = 0; a < s.length; a += 2) {
            const l = s[a];
            if (l > 0) i.push(o[a / 2]);
            else {
              const c = s[a + 1],
                d = n[-l];
              for (let u = 10; u < d.length; u++) {
                const f = d[u];
                f[17] === f[3] && em(f[1], f, c, i);
              }
              if (null !== d[9]) {
                const u = d[9];
                for (let f = 0; f < u.length; f++) {
                  const p = u[f];
                  em(p[1], p, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function Q(t) {
        const n = S(),
          e = Te(),
          i = Ey();
        lf(i + 1);
        const r = Kx(e, i);
        if (t.dirty && by(n) === (2 == (2 & r.metadata.flags))) {
          if (null === r.matches) t.reset([]);
          else {
            const s = r.crossesNgTemplate ? em(e, n, i, []) : qx(e, n, r, i);
            t.reset(s, u1), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function et(t, n, e) {
        const i = Te();
        i.firstCreatePass &&
          (Qx(i, new Wx(t, n, e), -1),
          2 == (2 & n) && (i.staticViewQueries = !0)),
          Yx(i, S(), n);
      }
      function Ie(t, n, e, i) {
        const r = Te();
        if (r.firstCreatePass) {
          const s = Et();
          Qx(r, new Wx(n, e, i), s.index),
            (function fV(t, n) {
              const e = t.contentQueries || (t.contentQueries = []);
              n !== (e.length ? e[e.length - 1] : -1) &&
                e.push(t.queries.length - 1, n);
            })(r, t),
            2 == (2 & e) && (r.staticContentQueries = !0);
        }
        Yx(r, S(), e);
      }
      function K() {
        return (function hV(t, n) {
          return t[19].queries[n].queryList;
        })(S(), Ey());
      }
      function Yx(t, n, e) {
        const i = new os(4 == (4 & e));
        BC(t, n, i, i.destroy),
          null === n[19] && (n[19] = new Zp()),
          n[19].queries.push(new Kp(i));
      }
      function Qx(t, n, e) {
        null === t.queries && (t.queries = new Xp()),
          t.queries.track(new Jp(n, e));
      }
      function Kx(t, n) {
        return t.queries.getByIndex(n);
      }
      function Zx(t, n) {
        return Yc(t, n);
      }
      function Kc(...t) {}
      const Wa = new C("Application Initializer");
      let Zc = (() => {
        class t {
          constructor(e) {
            (this.appInits = e),
              (this.resolve = Kc),
              (this.reject = Kc),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((i, r) => {
                (this.resolve = i), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              i = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const s = this.appInits[r]();
                if (La(s)) e.push(s);
                else if (Np(s)) {
                  const o = new Promise((a, l) => {
                    s.subscribe({ complete: a, error: l });
                  });
                  e.push(o);
                }
              }
            Promise.all(e)
              .then(() => {
                i();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === e.length && i(),
              (this.initialized = !0);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Wa, 8));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const qa = new C("AppId", {
        providedIn: "root",
        factory: function gw() {
          return `${sm()}${sm()}${sm()}`;
        },
      });
      function sm() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const _w = new C("Platform Initializer"),
        dn = new C("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        om = new C("appBootstrapListener"),
        en = new C("AnimationModuleType");
      let OV = (() => {
        class t {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "platform" })),
          t
        );
      })();
      const wi = new C("LocaleId", {
        providedIn: "root",
        factory: () =>
          Ge(wi, J.Optional | J.SkipSelf) ||
          (function FV() {
            return (typeof $localize < "u" && $localize.locale) || Co;
          })(),
      });
      class LV {
        constructor(n, e) {
          (this.ngModuleFactory = n), (this.componentFactories = e);
        }
      }
      let am = (() => {
        class t {
          compileModuleSync(e) {
            return new Wp(e);
          }
          compileModuleAsync(e) {
            return Promise.resolve(this.compileModuleSync(e));
          }
          compileModuleAndAllComponentsSync(e) {
            const i = this.compileModuleSync(e),
              s = Ui(pn(e).declarations).reduce((o, a) => {
                const l = je(a);
                return l && o.push(new Ia(l)), o;
              }, []);
            return new LV(i, s);
          }
          compileModuleAndAllComponentsAsync(e) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(e));
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const VV = (() => Promise.resolve(0))();
      function lm(t) {
        typeof Zone > "u"
          ? VV.then(() => {
              t && t.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", t);
      }
      class Y {
        constructor({
          enableLongStackTrace: n = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new W(!1)),
            (this.onMicrotaskEmpty = new W(!1)),
            (this.onStable = new W(!1)),
            (this.onError = new W(!1)),
            typeof Zone > "u")
          )
            throw new M(908, !1);
          Zone.assertZonePatched();
          const r = this;
          if (
            ((r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.AsyncStackTaggingZoneSpec)
          ) {
            const s = Zone.AsyncStackTaggingZoneSpec;
            r._inner = r._inner.fork(new s("Angular"));
          }
          Zone.TaskTrackingZoneSpec &&
            (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            n &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && e),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function HV() {
              let t = He.requestAnimationFrame,
                n = He.cancelAnimationFrame;
              if (typeof Zone < "u" && t && n) {
                const e = t[Zone.__symbol__("OriginalDelegate")];
                e && (t = e);
                const i = n[Zone.__symbol__("OriginalDelegate")];
                i && (n = i);
              }
              return {
                nativeRequestAnimationFrame: t,
                nativeCancelAnimationFrame: n,
              };
            })().nativeRequestAnimationFrame),
            (function UV(t) {
              const n = () => {
                !(function GV(t) {
                  t.isCheckStableRunning ||
                    -1 !== t.lastRequestAnimationFrameId ||
                    ((t.lastRequestAnimationFrameId =
                      t.nativeRequestAnimationFrame.call(He, () => {
                        t.fakeTopEventTask ||
                          (t.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (t.lastRequestAnimationFrameId = -1),
                                dm(t),
                                (t.isCheckStableRunning = !0),
                                cm(t),
                                (t.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          t.fakeTopEventTask.invoke();
                      })),
                    dm(t));
                })(t);
              };
              t._inner = t._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, r, s, o, a) => {
                  try {
                    return bw(t), e.invokeTask(r, s, o, a);
                  } finally {
                    ((t.shouldCoalesceEventChangeDetection &&
                      "eventTask" === s.type) ||
                      t.shouldCoalesceRunChangeDetection) &&
                      n(),
                      Cw(t);
                  }
                },
                onInvoke: (e, i, r, s, o, a, l) => {
                  try {
                    return bw(t), e.invoke(r, s, o, a, l);
                  } finally {
                    t.shouldCoalesceRunChangeDetection && n(), Cw(t);
                  }
                },
                onHasTask: (e, i, r, s) => {
                  e.hasTask(r, s),
                    i === r &&
                      ("microTask" == s.change
                        ? ((t._hasPendingMicrotasks = s.microTask),
                          dm(t),
                          cm(t))
                        : "macroTask" == s.change &&
                          (t.hasPendingMacrotasks = s.macroTask));
                },
                onHandleError: (e, i, r, s) => (
                  e.handleError(r, s),
                  t.runOutsideAngular(() => t.onError.emit(s)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Y.isInAngularZone()) throw new M(909, !1);
        }
        static assertNotInAngularZone() {
          if (Y.isInAngularZone()) throw new M(909, !1);
        }
        run(n, e, i) {
          return this._inner.run(n, e, i);
        }
        runTask(n, e, i, r) {
          const s = this._inner,
            o = s.scheduleEventTask("NgZoneEvent: " + r, n, jV, Kc, Kc);
          try {
            return s.runTask(o, e, i);
          } finally {
            s.cancelTask(o);
          }
        }
        runGuarded(n, e, i) {
          return this._inner.runGuarded(n, e, i);
        }
        runOutsideAngular(n) {
          return this._outer.run(n);
        }
      }
      const jV = {};
      function cm(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function dm(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          ((t.shouldCoalesceEventChangeDetection ||
            t.shouldCoalesceRunChangeDetection) &&
            -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function bw(t) {
        t._nesting++,
          t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function Cw(t) {
        t._nesting--, cm(t);
      }
      class zV {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new W()),
            (this.onMicrotaskEmpty = new W()),
            (this.onStable = new W()),
            (this.onError = new W());
        }
        run(n, e, i) {
          return n.apply(e, i);
        }
        runGuarded(n, e, i) {
          return n.apply(e, i);
        }
        runOutsideAngular(n) {
          return n();
        }
        runTask(n, e, i, r) {
          return n.apply(e, i);
        }
      }
      const xw = new C(""),
        Xc = new C("");
      let fm,
        um = (() => {
          class t {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                fm ||
                  ((function $V(t) {
                    fm = t;
                  })(r),
                  r.addToWindow(i)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Y.assertNotInAngularZone(),
                        lm(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                lm(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, r) {
              let s = -1;
              i &&
                i > 0 &&
                (s = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (o) => o.timeoutId !== s
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: s, updateCb: r });
            }
            whenStable(e, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, i, r) {
              return [];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Y), _(hm), _(Xc));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        hm = (() => {
          class t {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return fm?.findTestabilityInTree(this, e, i) ?? null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({
              token: t,
              factory: t.ɵfac,
              providedIn: "platform",
            })),
            t
          );
        })(),
        Er = null;
      const ww = new C("AllowMultipleToken"),
        pm = new C("PlatformDestroyListeners");
      class Dw {
        constructor(n, e) {
          (this.name = n), (this.token = e);
        }
      }
      function Sw(t, n, e = []) {
        const i = `Platform: ${n}`,
          r = new C(i);
        return (s = []) => {
          let o = mm();
          if (!o || o.injector.get(ww, !1)) {
            const a = [...e, ...s, { provide: r, useValue: !0 }];
            t
              ? t(a)
              : (function YV(t) {
                  if (Er && !Er.get(ww, !1)) throw new M(400, !1);
                  Er = t;
                  const n = t.get(Aw);
                  (function Mw(t) {
                    const n = t.get(_w, null);
                    n && n.forEach((e) => e());
                  })(t);
                })(
                  (function Ew(t = [], n) {
                    return gt.create({
                      name: n,
                      providers: [
                        { provide: Pf, useValue: "platform" },
                        { provide: pm, useValue: new Set([() => (Er = null)]) },
                        ...t,
                      ],
                    });
                  })(a, i)
                );
          }
          return (function KV(t) {
            const n = mm();
            if (!n) throw new M(401, !1);
            return n;
          })();
        };
      }
      function mm() {
        return Er?.get(Aw) ?? null;
      }
      let Aw = (() => {
        class t {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const r = (function ZV(t, n) {
                let e;
                return (
                  (e =
                    "noop" === t
                      ? new zV()
                      : ("zone.js" === t ? void 0 : t) || new Y(n)),
                  e
                );
              })(
                i?.ngZone,
                (function kw(t) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!t || !t.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!t || !t.ngZoneRunCoalescing) || !1,
                  };
                })(i)
              ),
              s = [{ provide: Y, useValue: r }];
            return r.run(() => {
              const o = gt.create({
                  providers: s,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                a = e.create(o),
                l = a.injector.get(Gi, null);
              if (!l) throw new M(402, !1);
              return (
                r.runOutsideAngular(() => {
                  const c = r.onError.subscribe({
                    next: (d) => {
                      l.handleError(d);
                    },
                  });
                  a.onDestroy(() => {
                    Jc(this._modules, a), c.unsubscribe();
                  });
                }),
                (function Tw(t, n, e) {
                  try {
                    const i = e();
                    return La(i)
                      ? i.catch((r) => {
                          throw (
                            (n.runOutsideAngular(() => t.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (n.runOutsideAngular(() => t.handleError(i)), i);
                  }
                })(l, r, () => {
                  const c = a.injector.get(Zc);
                  return (
                    c.runInitializers(),
                    c.donePromise.then(
                      () => (
                        (function rx(t) {
                          fn(t, "Expected localeId to be defined"),
                            "string" == typeof t &&
                              (ix = t.toLowerCase().replace(/_/g, "-"));
                        })(a.injector.get(wi, Co) || Co),
                        this._moduleDoBootstrap(a),
                        a
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const r = Iw({}, i);
            return (function WV(t, n, e) {
              const i = new Wp(e);
              return Promise.resolve(i);
            })(0, 0, e).then((s) => this.bootstrapModuleFactory(s, r));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(as);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!e.instance.ngDoBootstrap) throw new M(403, !1);
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new M(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const e = this._injector.get(pm, null);
            e && (e.forEach((i) => i()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(gt));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "platform" })),
          t
        );
      })();
      function Iw(t, n) {
        return Array.isArray(n) ? n.reduce(Iw, t) : { ...t, ...n };
      }
      let as = (() => {
        class t {
          constructor(e, i, r) {
            (this._zone = e),
              (this._injector = i),
              (this._exceptionHandler = r),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const s = new Pe((a) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    a.next(this._stable), a.complete();
                  });
              }),
              o = new Pe((a) => {
                let l;
                this._zone.runOutsideAngular(() => {
                  l = this._zone.onStable.subscribe(() => {
                    Y.assertNotInAngularZone(),
                      lm(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), a.next(!0));
                      });
                  });
                });
                const c = this._zone.onUnstable.subscribe(() => {
                  Y.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        a.next(!1);
                      }));
                });
                return () => {
                  l.unsubscribe(), c.unsubscribe();
                };
              });
            this.isStable = yt(s, o.pipe(Bh()));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(e, i) {
            const r = e instanceof Tb;
            if (!this._injector.get(Zc).done)
              throw (
                (!r &&
                  (function Do(t) {
                    const n = je(t) || qt(t) || Yt(t);
                    return null !== n && n.standalone;
                  })(e),
                new M(405, false))
              );
            let o;
            (o = r ? e : this._injector.get(es).resolveComponentFactory(e)),
              this.componentTypes.push(o.componentType);
            const a = (function qV(t) {
                return t.isBoundToModule;
              })(o)
                ? void 0
                : this._injector.get(ss),
              c = o.create(gt.NULL, [], i || o.selector, a),
              d = c.location.nativeElement,
              u = c.injector.get(xw, null);
            return (
              u?.registerApplication(d),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  Jc(this.components, c),
                  u?.unregisterApplication(d);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new M(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            Jc(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView),
              this.tick(),
              this.components.push(e),
              this._injector
                .get(om, [])
                .concat(this._bootstrapListeners)
                .forEach((r) => r(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => Jc(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new M(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Y), _(xr), _(Gi));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function Jc(t, n) {
        const e = t.indexOf(n);
        e > -1 && t.splice(e, 1);
      }
      let Ow = !0,
        Ue = (() => {
          class t {}
          return (t.__NG_ELEMENT_ID__ = e2), t;
        })();
      function e2(t) {
        return (function t2(t, n, e) {
          if (tc(t) && !e) {
            const i = gn(t.index, n);
            return new Ta(i, i);
          }
          return 47 & t.type ? new Ta(n[16], n) : null;
        })(Et(), S(), 16 == (16 & t));
      }
      class Bw {
        constructor() {}
        supports(n) {
          return Ra(n);
        }
        create(n) {
          return new l2(n);
        }
      }
      const a2 = (t, n) => n;
      class l2 {
        constructor(n) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = n || a2);
        }
        forEachItem(n) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) n(e);
        }
        forEachOperation(n) {
          let e = this._itHead,
            i = this._removalsHead,
            r = 0,
            s = null;
          for (; e || i; ) {
            const o = !i || (e && e.currentIndex < Hw(i, r, s)) ? e : i,
              a = Hw(o, r, s),
              l = o.currentIndex;
            if (o === i) r--, (i = i._nextRemoved);
            else if (((e = e._next), null == o.previousIndex)) r++;
            else {
              s || (s = []);
              const c = a - r,
                d = l - r;
              if (c != d) {
                for (let f = 0; f < c; f++) {
                  const p = f < s.length ? s[f] : (s[f] = 0),
                    m = p + f;
                  d <= m && m < c && (s[f] = p + 1);
                }
                s[o.previousIndex] = d - c;
              }
            }
            a !== l && n(o, a, l);
          }
        }
        forEachPreviousItem(n) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) n(e);
        }
        forEachAddedItem(n) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e);
        }
        forEachMovedItem(n) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) n(e);
        }
        forEachRemovedItem(n) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e);
        }
        forEachIdentityChange(n) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            n(e);
        }
        diff(n) {
          if ((null == n && (n = []), !Ra(n))) throw new M(900, !1);
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let r,
            s,
            o,
            e = this._itHead,
            i = !1;
          if (Array.isArray(n)) {
            this.length = n.length;
            for (let a = 0; a < this.length; a++)
              (s = n[a]),
                (o = this._trackByFn(a, s)),
                null !== e && Object.is(e.trackById, o)
                  ? (i && (e = this._verifyReinsertion(e, s, o, a)),
                    Object.is(e.item, s) || this._addIdentityChange(e, s))
                  : ((e = this._mismatch(e, s, o, a)), (i = !0)),
                (e = e._next);
          } else
            (r = 0),
              (function FL(t, n) {
                if (Array.isArray(t))
                  for (let e = 0; e < t.length; e++) n(t[e]);
                else {
                  const e = t[ns()]();
                  let i;
                  for (; !(i = e.next()).done; ) n(i.value);
                }
              })(n, (a) => {
                (o = this._trackByFn(r, a)),
                  null !== e && Object.is(e.trackById, o)
                    ? (i && (e = this._verifyReinsertion(e, a, o, r)),
                      Object.is(e.item, a) || this._addIdentityChange(e, a))
                    : ((e = this._mismatch(e, a, o, r)), (i = !0)),
                  (e = e._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(e), (this.collection = n), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              n = this._previousItHead = this._itHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._additionsHead; null !== n; n = n._nextAdded)
              n.previousIndex = n.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                n = this._movesHead;
              null !== n;
              n = n._nextMoved
            )
              n.previousIndex = n.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(n, e, i, r) {
          let s;
          return (
            null === n ? (s = this._itTail) : ((s = n._prev), this._remove(n)),
            null !==
            (n =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(n.item, e) || this._addIdentityChange(n, e),
                this._reinsertAfter(n, s, r))
              : null !==
                (n =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(n.item, e) || this._addIdentityChange(n, e),
                this._moveAfter(n, s, r))
              : (n = this._addAfter(new c2(e, i), s, r)),
            n
          );
        }
        _verifyReinsertion(n, e, i, r) {
          let s =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== s
              ? (n = this._reinsertAfter(s, n._prev, r))
              : n.currentIndex != r &&
                ((n.currentIndex = r), this._addToMoves(n, r)),
            n
          );
        }
        _truncate(n) {
          for (; null !== n; ) {
            const e = n._next;
            this._addToRemovals(this._unlink(n)), (n = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(n, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(n);
          const r = n._prevRemoved,
            s = n._nextRemoved;
          return (
            null === r ? (this._removalsHead = s) : (r._nextRemoved = s),
            null === s ? (this._removalsTail = r) : (s._prevRemoved = r),
            this._insertAfter(n, e, i),
            this._addToMoves(n, i),
            n
          );
        }
        _moveAfter(n, e, i) {
          return (
            this._unlink(n),
            this._insertAfter(n, e, i),
            this._addToMoves(n, i),
            n
          );
        }
        _addAfter(n, e, i) {
          return (
            this._insertAfter(n, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = n)
                : (this._additionsTail._nextAdded = n)),
            n
          );
        }
        _insertAfter(n, e, i) {
          const r = null === e ? this._itHead : e._next;
          return (
            (n._next = r),
            (n._prev = e),
            null === r ? (this._itTail = n) : (r._prev = n),
            null === e ? (this._itHead = n) : (e._next = n),
            null === this._linkedRecords && (this._linkedRecords = new Vw()),
            this._linkedRecords.put(n),
            (n.currentIndex = i),
            n
          );
        }
        _remove(n) {
          return this._addToRemovals(this._unlink(n));
        }
        _unlink(n) {
          null !== this._linkedRecords && this._linkedRecords.remove(n);
          const e = n._prev,
            i = n._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            n
          );
        }
        _addToMoves(n, e) {
          return (
            n.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = n)
                  : (this._movesTail._nextMoved = n)),
            n
          );
        }
        _addToRemovals(n) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Vw()),
            this._unlinkedRecords.put(n),
            (n.currentIndex = null),
            (n._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = n),
                (n._prevRemoved = null))
              : ((n._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = n)),
            n
          );
        }
        _addIdentityChange(n, e) {
          return (
            (n.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = n)
                : (this._identityChangesTail._nextIdentityChange = n)),
            n
          );
        }
      }
      class c2 {
        constructor(n, e) {
          (this.item = n),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class d2 {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(n) {
          null === this._head
            ? ((this._head = this._tail = n),
              (n._nextDup = null),
              (n._prevDup = null))
            : ((this._tail._nextDup = n),
              (n._prevDup = this._tail),
              (n._nextDup = null),
              (this._tail = n));
        }
        get(n, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, n)
            )
              return i;
          return null;
        }
        remove(n) {
          const e = n._prevDup,
            i = n._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class Vw {
        constructor() {
          this.map = new Map();
        }
        put(n) {
          const e = n.trackById;
          let i = this.map.get(e);
          i || ((i = new d2()), this.map.set(e, i)), i.add(n);
        }
        get(n, e) {
          const r = this.map.get(n);
          return r ? r.get(n, e) : null;
        }
        remove(n) {
          const e = n.trackById;
          return this.map.get(e).remove(n) && this.map.delete(e), n;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Hw(t, n, e) {
        const i = t.previousIndex;
        if (null === i) return i;
        let r = 0;
        return e && i < e.length && (r = e[i]), i + n + r;
      }
      class jw {
        constructor() {}
        supports(n) {
          return n instanceof Map || Pp(n);
        }
        create() {
          return new u2();
        }
      }
      class u2 {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(n) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) n(e);
        }
        forEachPreviousItem(n) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) n(e);
        }
        forEachChangedItem(n) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) n(e);
        }
        forEachAddedItem(n) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e);
        }
        forEachRemovedItem(n) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e);
        }
        diff(n) {
          if (n) {
            if (!(n instanceof Map || Pp(n))) throw new M(900, !1);
          } else n = new Map();
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(n, (i, r) => {
              if (e && e.key === r)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const s = this._getOrCreateRecordForKey(r, i);
                e = this._insertBeforeOrAppend(e, s);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(n, e) {
          if (n) {
            const i = n._prev;
            return (
              (e._next = n),
              (e._prev = i),
              (n._prev = e),
              i && (i._next = e),
              n === this._mapHead && (this._mapHead = e),
              (this._appendAfter = n),
              n
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(n, e) {
          if (this._records.has(n)) {
            const r = this._records.get(n);
            this._maybeAddToChanges(r, e);
            const s = r._prev,
              o = r._next;
            return (
              s && (s._next = o),
              o && (o._prev = s),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new h2(n);
          return (
            this._records.set(n, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              this._previousMapHead = this._mapHead, n = this._previousMapHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._changesHead; null !== n; n = n._nextChanged)
              n.previousValue = n.currentValue;
            for (n = this._additionsHead; null != n; n = n._nextAdded)
              n.previousValue = n.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(n, e) {
          Object.is(e, n.currentValue) ||
            ((n.previousValue = n.currentValue),
            (n.currentValue = e),
            this._addToChanges(n));
        }
        _addToAdditions(n) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = n)
            : ((this._additionsTail._nextAdded = n), (this._additionsTail = n));
        }
        _addToChanges(n) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = n)
            : ((this._changesTail._nextChanged = n), (this._changesTail = n));
        }
        _forEach(n, e) {
          n instanceof Map
            ? n.forEach(e)
            : Object.keys(n).forEach((i) => e(n[i], i));
        }
      }
      class h2 {
        constructor(n) {
          (this.key = n),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function Gw() {
        return new Cn([new Bw()]);
      }
      let Cn = (() => {
        class t {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (i) => t.create(e, i || Gw()),
              deps: [[t, new Nn(), new on()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (null != i) return i;
            throw new M(901, !1);
          }
        }
        return (t.ɵprov = D({ token: t, providedIn: "root", factory: Gw })), t;
      })();
      function Uw() {
        return new cs([new jw()]);
      }
      let cs = (() => {
        class t {
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const r = i.factories.slice();
              e = e.concat(r);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (i) => t.create(e, i || Uw()),
              deps: [[t, new Nn(), new on()]],
            };
          }
          find(e) {
            const i = this.factories.find((r) => r.supports(e));
            if (i) return i;
            throw new M(901, !1);
          }
        }
        return (t.ɵprov = D({ token: t, providedIn: "root", factory: Uw })), t;
      })();
      const m2 = Sw(null, "core", []);
      let g2 = (() => {
        class t {
          constructor(e) {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(as));
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({})),
          t
        );
      })();
      function Yi(t) {
        return "boolean" == typeof t ? t : null != t && "false" !== t;
      }
      let nd = null;
      function Di() {
        return nd;
      }
      const Z = new C("DocumentToken");
      let bm = (() => {
        class t {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({
            token: t,
            factory: function () {
              return (function b2() {
                return _(zw);
              })();
            },
            providedIn: "platform",
          })),
          t
        );
      })();
      const C2 = new C("Location Initialized");
      let zw = (() => {
        class t extends bm {
          constructor(e) {
            super(), (this._doc = e), this._init();
          }
          _init() {
            (this.location = window.location), (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return Di().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = Di().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", e, !1),
              () => i.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const i = Di().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", e, !1),
              () => i.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(e) {
            this.location.pathname = e;
          }
          pushState(e, i, r) {
            $w() ? this._history.pushState(e, i, r) : (this.location.hash = r);
          }
          replaceState(e, i, r) {
            $w()
              ? this._history.replaceState(e, i, r)
              : (this.location.hash = r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Z));
          }),
          (t.ɵprov = D({
            token: t,
            factory: function () {
              return (function x2() {
                return new zw(_(Z));
              })();
            },
            providedIn: "platform",
          })),
          t
        );
      })();
      function $w() {
        return !!window.history.pushState;
      }
      function Cm(t, n) {
        if (0 == t.length) return n;
        if (0 == n.length) return t;
        let e = 0;
        return (
          t.endsWith("/") && e++,
          n.startsWith("/") && e++,
          2 == e ? t + n.substring(1) : 1 == e ? t + n : t + "/" + n
        );
      }
      function Ww(t) {
        const n = t.match(/#|\?|$/),
          e = (n && n.index) || t.length;
        return t.slice(0, e - ("/" === t[e - 1] ? 1 : 0)) + t.slice(e);
      }
      function Qi(t) {
        return t && "?" !== t[0] ? "?" + t : t;
      }
      let ds = (() => {
        class t {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({
            token: t,
            factory: function () {
              return Ge(Yw);
            },
            providedIn: "root",
          })),
          t
        );
      })();
      const qw = new C("appBaseHref");
      let Yw = (() => {
          class t extends ds {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                (this._baseHref =
                  i ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  Ge(Z).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return Cm(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  Qi(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && e ? `${i}${r}` : i;
            }
            pushState(e, i, r, s) {
              const o = this.prepareExternalUrl(r + Qi(s));
              this._platformLocation.pushState(e, i, o);
            }
            replaceState(e, i, r, s) {
              const o = this.prepareExternalUrl(r + Qi(s));
              this._platformLocation.replaceState(e, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(bm), _(qw, 8));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        w2 = (() => {
          class t extends ds {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = Cm(this._baseHref, e);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(e, i, r, s) {
              let o = this.prepareExternalUrl(r + Qi(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, o);
            }
            replaceState(e, i, r, s) {
              let o = this.prepareExternalUrl(r + Qi(s));
              0 == o.length && (o = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, o);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(bm), _(qw, 8));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ya = (() => {
          class t {
            constructor(e) {
              (this._subject = new W()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const i = this._locationStrategy.getBaseHref();
              (this._baseHref = Ww(Qw(i))),
                this._locationStrategy.onPopState((r) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: r.state,
                    type: r.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + Qi(i));
            }
            normalize(e) {
              return t.stripTrailingSlash(
                (function M2(t, n) {
                  return t && n.startsWith(t) ? n.substring(t.length) : n;
                })(this._baseHref, Qw(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", r = null) {
              this._locationStrategy.pushState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Qi(i)),
                  r
                );
            }
            replaceState(e, i = "", r = null) {
              this._locationStrategy.replaceState(r, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Qi(i)),
                  r
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((r) => r(e, i));
            }
            subscribe(e, i, r) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: r,
              });
            }
          }
          return (
            (t.normalizeQueryParams = Qi),
            (t.joinWithSlash = Cm),
            (t.stripTrailingSlash = Ww),
            (t.ɵfac = function (e) {
              return new (e || t)(_(ds));
            }),
            (t.ɵprov = D({
              token: t,
              factory: function () {
                return (function D2() {
                  return new Ya(_(ds));
                })();
              },
              providedIn: "root",
            })),
            t
          );
        })();
      function Qw(t) {
        return t.replace(/\/index.html$/, "");
      }
      function rD(t, n) {
        n = encodeURIComponent(n);
        for (const e of t.split(";")) {
          const i = e.indexOf("="),
            [r, s] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
          if (r.trim() === n) return decodeURIComponent(s);
        }
        return null;
      }
      let hd = (() => {
        class t {
          constructor(e, i, r, s) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = s),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(e) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses =
                "string" == typeof e ? e.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(e) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
              this._rawClass &&
                (Ra(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers
                      .find(this._rawClass)
                      .create())
                  : (this._keyValueDiffer = this._keyValueDiffers
                      .find(this._rawClass)
                      .create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const e = this._iterableDiffer.diff(this._rawClass);
              e && this._applyIterableChanges(e);
            } else if (this._keyValueDiffer) {
              const e = this._keyValueDiffer.diff(this._rawClass);
              e && this._applyKeyValueChanges(e);
            }
          }
          _applyKeyValueChanges(e) {
            e.forEachAddedItem((i) => this._toggleClass(i.key, i.currentValue)),
              e.forEachChangedItem((i) =>
                this._toggleClass(i.key, i.currentValue)
              ),
              e.forEachRemovedItem((i) => {
                i.previousValue && this._toggleClass(i.key, !1);
              });
          }
          _applyIterableChanges(e) {
            e.forEachAddedItem((i) => {
              if ("string" != typeof i.item)
                throw new Error(
                  `NgClass can only toggle CSS classes expressed as strings, got ${$e(
                    i.item
                  )}`
                );
              this._toggleClass(i.item, !0);
            }),
              e.forEachRemovedItem((i) => this._toggleClass(i.item, !1));
          }
          _applyClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !0))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !!e[i])));
          }
          _removeClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((i) => this._toggleClass(i, !1))
                : Object.keys(e).forEach((i) => this._toggleClass(i, !1)));
          }
          _toggleClass(e, i) {
            (e = e.trim()) &&
              e.split(/\s+/g).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(h(Cn), h(cs), h(T), h(ei));
          }),
          (t.ɵdir = y({
            type: t,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          })),
          t
        );
      })();
      class cH {
        constructor(n, e, i, r) {
          (this.$implicit = n),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let aD = (() => {
        class t {
          constructor(e, i, r) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              !this._differ &&
                e &&
                (this._differ = this._differs
                  .find(e)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = this._viewContainer;
            e.forEachOperation((r, s, o) => {
              if (null == r.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new cH(r.item, this._ngForOf, -1, -1),
                  null === o ? void 0 : o
                );
              else if (null == o) i.remove(null === s ? void 0 : s);
              else if (null !== s) {
                const a = i.get(s);
                i.move(a, o), lD(a, r);
              }
            });
            for (let r = 0, s = i.length; r < s; r++) {
              const a = i.get(r).context;
              (a.index = r), (a.count = s), (a.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((r) => {
              lD(i.get(r.currentIndex), r);
            });
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(h(_t), h(xt), h(Cn));
          }),
          (t.ɵdir = y({
            type: t,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          })),
          t
        );
      })();
      function lD(t, n) {
        t.context.$implicit = n.item;
      }
      let So = (() => {
        class t {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new uH()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            cD("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            cD("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(h(_t), h(xt));
          }),
          (t.ɵdir = y({
            type: t,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          })),
          t
        );
      })();
      class uH {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function cD(t, n) {
        if (n && !n.createEmbeddedView)
          throw new Error(
            `${t} must be a TemplateRef, but received '${$e(n)}'.`
          );
      }
      class Im {
        constructor(n, e) {
          (this._viewContainerRef = n),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(n) {
          n && !this._created
            ? this.create()
            : !n && this._created && this.destroy();
        }
      }
      let fd = (() => {
          class t {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (let i = 0; i < this._defaultViews.length; i++)
                  this._defaultViews[i].enforceState(e);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
              standalone: !0,
            })),
            t
          );
        })(),
        dD = (() => {
          class t {
            constructor(e, i, r) {
              (this.ngSwitch = r), r._addCase(), (this._view = new Im(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(_t), h(xt), h(fd, 9));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
              standalone: !0,
            })),
            t
          );
        })(),
        nt = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })();
      const fD = "browser";
      function Zi(t) {
        return t === fD;
      }
      function Eo(t) {
        return "server" === t;
      }
      let VH = (() => {
        class t {}
        return (
          (t.ɵprov = D({
            token: t,
            providedIn: "root",
            factory: () => new HH(_(Z), window),
          })),
          t
        );
      })();
      class HH {
        constructor(n, e) {
          (this.document = n), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(n) {
          this.offset = Array.isArray(n) ? () => n : n;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(n) {
          this.supportsScrolling() && this.window.scrollTo(n[0], n[1]);
        }
        scrollToAnchor(n) {
          if (!this.supportsScrolling()) return;
          const e = (function jH(t, n) {
            const e = t.getElementById(n) || t.getElementsByName(n)[0];
            if (e) return e;
            if (
              "function" == typeof t.createTreeWalker &&
              t.body &&
              (t.body.createShadowRoot || t.body.attachShadow)
            ) {
              const i = t.createTreeWalker(t.body, NodeFilter.SHOW_ELEMENT);
              let r = i.currentNode;
              for (; r; ) {
                const s = r.shadowRoot;
                if (s) {
                  const o =
                    s.getElementById(n) || s.querySelector(`[name="${n}"]`);
                  if (o) return o;
                }
                r = i.nextNode();
              }
            }
            return null;
          })(this.document, n);
          e && (this.scrollToElement(e), e.focus());
        }
        setHistoryScrollRestoration(n) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = n);
          }
        }
        scrollToElement(n) {
          const e = n.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            r = e.top + this.window.pageYOffset,
            s = this.offset();
          this.window.scrollTo(i - s[0], r - s[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const n =
              pD(this.window.history) ||
              pD(Object.getPrototypeOf(this.window.history));
            return !(!n || (!n.writable && !n.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function pD(t) {
        return Object.getOwnPropertyDescriptor(t, "scrollRestoration");
      }
      class mD {}
      class Fm extends class GH extends class y2 {} {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      } {
        static makeCurrent() {
          !(function v2(t) {
            nd || (nd = t);
          })(new Fm());
        }
        onAndCancel(n, e, i) {
          return (
            n.addEventListener(e, i, !1),
            () => {
              n.removeEventListener(e, i, !1);
            }
          );
        }
        dispatchEvent(n, e) {
          n.dispatchEvent(e);
        }
        remove(n) {
          n.parentNode && n.parentNode.removeChild(n);
        }
        createElement(n, e) {
          return (e = e || this.getDefaultDocument()).createElement(n);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(n) {
          return n.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(n) {
          return n instanceof DocumentFragment;
        }
        getGlobalEventTarget(n, e) {
          return "window" === e
            ? window
            : "document" === e
            ? n
            : "body" === e
            ? n.body
            : null;
        }
        getBaseHref(n) {
          const e = (function UH() {
            return (
              (Za = Za || document.querySelector("base")),
              Za ? Za.getAttribute("href") : null
            );
          })();
          return null == e
            ? null
            : (function zH(t) {
                (md = md || document.createElement("a")),
                  md.setAttribute("href", t);
                const n = md.pathname;
                return "/" === n.charAt(0) ? n : `/${n}`;
              })(e);
        }
        resetBaseElement() {
          Za = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(n) {
          return rD(document.cookie, n);
        }
      }
      let md,
        Za = null;
      const gD = new C("TRANSITION_ID"),
        WH = [
          {
            provide: Wa,
            useFactory: function $H(t, n, e) {
              return () => {
                e.get(Zc).donePromise.then(() => {
                  const i = Di(),
                    r = n.querySelectorAll(`style[ng-transition="${t}"]`);
                  for (let s = 0; s < r.length; s++) i.remove(r[s]);
                });
              };
            },
            deps: [gD, Z, gt],
            multi: !0,
          },
        ];
      let YH = (() => {
        class t {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const gd = new C("EventManagerPlugins");
      let _d = (() => {
        class t {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((r) => (r.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, r) {
            return this._findPluginFor(i).addEventListener(e, i, r);
          }
          addGlobalEventListener(e, i, r) {
            return this._findPluginFor(i).addGlobalEventListener(e, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const i = this._eventNameToPlugin.get(e);
            if (i) return i;
            const r = this._plugins;
            for (let s = 0; s < r.length; s++) {
              const o = r[s];
              if (o.supports(e)) return this._eventNameToPlugin.set(e, o), o;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(gd), _(Y));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class _D {
        constructor(n) {
          this._doc = n;
        }
        addGlobalEventListener(n, e, i) {
          const r = Di().getGlobalEventTarget(this._doc, n);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, i);
        }
      }
      let vD = (() => {
          class t {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const i = new Set();
              e.forEach((r) => {
                this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r));
              }),
                this.onStylesAdded(i);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Xa = (() => {
          class t extends vD {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Map()),
                this._hostNodes.set(e.head, []);
            }
            _addStylesToHost(e, i, r) {
              e.forEach((s) => {
                const o = this._doc.createElement("style");
                (o.textContent = s), r.push(i.appendChild(o));
              });
            }
            addHost(e) {
              const i = [];
              this._addStylesToHost(this._stylesSet, e, i),
                this._hostNodes.set(e, i);
            }
            removeHost(e) {
              const i = this._hostNodes.get(e);
              i && i.forEach(yD), this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((i, r) => {
                this._addStylesToHost(e, r, i);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((e) => e.forEach(yD));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      function yD(t) {
        Di().remove(t);
      }
      const Pm = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Lm = /%COMP%/g;
      function vd(t, n, e) {
        for (let i = 0; i < n.length; i++) {
          let r = n[i];
          Array.isArray(r) ? vd(t, r, e) : ((r = r.replace(Lm, t)), e.push(r));
        }
        return e;
      }
      function xD(t) {
        return (n) => {
          if ("__ngUnwrap__" === n) return t;
          !1 === t(n) && (n.preventDefault(), (n.returnValue = !1));
        };
      }
      let yd = (() => {
        class t {
          constructor(e, i, r) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Nm(e));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            switch (i.encapsulation) {
              case Kn.Emulated: {
                let r = this.rendererByCompId.get(i.id);
                return (
                  r ||
                    ((r = new ej(
                      this.eventManager,
                      this.sharedStylesHost,
                      i,
                      this.appId
                    )),
                    this.rendererByCompId.set(i.id, r)),
                  r.applyToHost(e),
                  r
                );
              }
              case 1:
              case Kn.ShadowDom:
                return new tj(this.eventManager, this.sharedStylesHost, e, i);
              default:
                if (!this.rendererByCompId.has(i.id)) {
                  const r = vd(i.id, i.styles, []);
                  this.sharedStylesHost.addStyles(r),
                    this.rendererByCompId.set(i.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(_d), _(Xa), _(qa));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Nm {
        constructor(n) {
          (this.eventManager = n),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(n, e) {
          return e
            ? document.createElementNS(Pm[e] || e, n)
            : document.createElement(n);
        }
        createComment(n) {
          return document.createComment(n);
        }
        createText(n) {
          return document.createTextNode(n);
        }
        appendChild(n, e) {
          (DD(n) ? n.content : n).appendChild(e);
        }
        insertBefore(n, e, i) {
          n && (DD(n) ? n.content : n).insertBefore(e, i);
        }
        removeChild(n, e) {
          n && n.removeChild(e);
        }
        selectRootElement(n, e) {
          let i = "string" == typeof n ? document.querySelector(n) : n;
          if (!i)
            throw new Error(`The selector "${n}" did not match any elements`);
          return e || (i.textContent = ""), i;
        }
        parentNode(n) {
          return n.parentNode;
        }
        nextSibling(n) {
          return n.nextSibling;
        }
        setAttribute(n, e, i, r) {
          if (r) {
            e = r + ":" + e;
            const s = Pm[r];
            s ? n.setAttributeNS(s, e, i) : n.setAttribute(e, i);
          } else n.setAttribute(e, i);
        }
        removeAttribute(n, e, i) {
          if (i) {
            const r = Pm[i];
            r ? n.removeAttributeNS(r, e) : n.removeAttribute(`${i}:${e}`);
          } else n.removeAttribute(e);
        }
        addClass(n, e) {
          n.classList.add(e);
        }
        removeClass(n, e) {
          n.classList.remove(e);
        }
        setStyle(n, e, i, r) {
          r & (an.DashCase | an.Important)
            ? n.style.setProperty(e, i, r & an.Important ? "important" : "")
            : (n.style[e] = i);
        }
        removeStyle(n, e, i) {
          i & an.DashCase ? n.style.removeProperty(e) : (n.style[e] = "");
        }
        setProperty(n, e, i) {
          n[e] = i;
        }
        setValue(n, e) {
          n.nodeValue = e;
        }
        listen(n, e, i) {
          return "string" == typeof n
            ? this.eventManager.addGlobalEventListener(n, e, xD(i))
            : this.eventManager.addEventListener(n, e, xD(i));
        }
      }
      function DD(t) {
        return "TEMPLATE" === t.tagName && void 0 !== t.content;
      }
      class ej extends Nm {
        constructor(n, e, i, r) {
          super(n), (this.component = i);
          const s = vd(r + "-" + i.id, i.styles, []);
          e.addStyles(s),
            (this.contentAttr = (function ZH(t) {
              return "_ngcontent-%COMP%".replace(Lm, t);
            })(r + "-" + i.id)),
            (this.hostAttr = (function XH(t) {
              return "_nghost-%COMP%".replace(Lm, t);
            })(r + "-" + i.id));
        }
        applyToHost(n) {
          super.setAttribute(n, this.hostAttr, "");
        }
        createElement(n, e) {
          const i = super.createElement(n, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      class tj extends Nm {
        constructor(n, e, i, r) {
          super(n),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const s = vd(r.id, r.styles, []);
          for (let o = 0; o < s.length; o++) {
            const a = document.createElement("style");
            (a.textContent = s[o]), this.shadowRoot.appendChild(a);
          }
        }
        nodeOrShadowRoot(n) {
          return n === this.hostEl ? this.shadowRoot : n;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(n, e) {
          return super.appendChild(this.nodeOrShadowRoot(n), e);
        }
        insertBefore(n, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(n), e, i);
        }
        removeChild(n, e) {
          return super.removeChild(this.nodeOrShadowRoot(n), e);
        }
        parentNode(n) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(n))
          );
        }
      }
      let nj = (() => {
        class t extends _D {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, r) {
            return (
              e.addEventListener(i, r, !1),
              () => this.removeEventListener(e, i, r)
            );
          }
          removeEventListener(e, i, r) {
            return e.removeEventListener(i, r);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Z));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const MD = ["alt", "control", "meta", "shift"],
        rj = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        SD = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        sj = {
          alt: (t) => t.altKey,
          control: (t) => t.ctrlKey,
          meta: (t) => t.metaKey,
          shift: (t) => t.shiftKey,
        };
      let oj = (() => {
        class t extends _D {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != t.parseEventName(e);
          }
          addEventListener(e, i, r) {
            const s = t.parseEventName(i),
              o = t.eventCallback(s.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => Di().onAndCancel(e, s.domEventName, o));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split("."),
              r = i.shift();
            if (0 === i.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const s = t._normalizeKey(i.pop());
            let o = "";
            if (
              (MD.forEach((l) => {
                const c = i.indexOf(l);
                c > -1 && (i.splice(c, 1), (o += l + "."));
              }),
              (o += s),
              0 != i.length || 0 === s.length)
            )
              return null;
            const a = {};
            return (a.domEventName = r), (a.fullKey = o), a;
          }
          static getEventFullKey(e) {
            let i = "",
              r = (function aj(t) {
                let n = t.key;
                if (null == n) {
                  if (((n = t.keyIdentifier), null == n)) return "Unidentified";
                  n.startsWith("U+") &&
                    ((n = String.fromCharCode(parseInt(n.substring(2), 16))),
                    3 === t.location && SD.hasOwnProperty(n) && (n = SD[n]));
                }
                return rj[n] || n;
              })(e);
            return (
              (r = r.toLowerCase()),
              " " === r ? (r = "space") : "." === r && (r = "dot"),
              MD.forEach((s) => {
                s != r && (0, sj[s])(e) && (i += s + ".");
              }),
              (i += r),
              i
            );
          }
          static eventCallback(e, i, r) {
            return (s) => {
              t.getEventFullKey(s) === e && r.runGuarded(() => i(s));
            };
          }
          static _normalizeKey(e) {
            return "esc" === e ? "escape" : e;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Z));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const uj = Sw(m2, "browser", [
          { provide: dn, useValue: fD },
          {
            provide: _w,
            useValue: function lj() {
              Fm.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: Z,
            useFactory: function dj() {
              return (
                (function yF(t) {
                  Df = t;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        AD = new C(""),
        kD = [
          {
            provide: Xc,
            useClass: class qH {
              addToWindow(n) {
                (He.getAngularTestability = (i, r = !0) => {
                  const s = n.findTestabilityInTree(i, r);
                  if (null == s)
                    throw new Error("Could not find testability for element.");
                  return s;
                }),
                  (He.getAllAngularTestabilities = () =>
                    n.getAllTestabilities()),
                  (He.getAllAngularRootElements = () => n.getAllRootElements()),
                  He.frameworkStabilizers || (He.frameworkStabilizers = []),
                  He.frameworkStabilizers.push((i) => {
                    const r = He.getAllAngularTestabilities();
                    let s = r.length,
                      o = !1;
                    const a = function (l) {
                      (o = o || l), s--, 0 == s && i(o);
                    };
                    r.forEach(function (l) {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(n, e, i) {
                return null == e
                  ? null
                  : n.getTestability(e) ??
                      (i
                        ? Di().isShadowRoot(e)
                          ? this.findTestabilityInTree(n, e.host, !0)
                          : this.findTestabilityInTree(n, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: xw, useClass: um, deps: [Y, hm, Xc] },
          { provide: um, useClass: um, deps: [Y, hm, Xc] },
        ],
        TD = [
          { provide: Pf, useValue: "root" },
          {
            provide: Gi,
            useFactory: function cj() {
              return new Gi();
            },
            deps: [],
          },
          { provide: gd, useClass: nj, multi: !0, deps: [Z, Y, dn] },
          { provide: gd, useClass: oj, multi: !0, deps: [Z] },
          { provide: yd, useClass: yd, deps: [_d, Xa, qa] },
          { provide: Ma, useExisting: yd },
          { provide: vD, useExisting: Xa },
          { provide: Xa, useClass: Xa, deps: [Z] },
          { provide: _d, useClass: _d, deps: [gd, Y] },
          { provide: mD, useClass: YH, deps: [] },
          [],
        ];
      let ID = (() => {
          class t {
            constructor(e) {}
            static withServerTransition(e) {
              return {
                ngModule: t,
                providers: [
                  { provide: qa, useValue: e.appId },
                  { provide: gD, useExisting: qa },
                  WH,
                ],
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(AD, 12));
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [...TD, ...kD], imports: [nt, g2] })),
            t
          );
        })(),
        bd = (() => {
          class t {
            constructor(e) {
              this._doc = e;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(e) {
              this._doc.title = e || "";
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z));
            }),
            (t.ɵprov = D({
              token: t,
              factory: function (e) {
                let i = null;
                return (
                  (i = e
                    ? new e()
                    : (function fj() {
                        return new bd(_(Z));
                      })()),
                  i
                );
              },
              providedIn: "root",
            })),
            t
          );
        })();
      typeof window < "u" && window;
      let Cd = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({
              token: t,
              factory: function (e) {
                let i = null;
                return (i = e ? new (e || t)() : _(FD)), i;
              },
              providedIn: "root",
            })),
            t
          );
        })(),
        FD = (() => {
          class t extends Cd {
            constructor(e) {
              super(), (this._doc = e);
            }
            sanitize(e, i) {
              if (null == i) return null;
              switch (e) {
                case Fe.NONE:
                  return i;
                case Fe.HTML:
                  return gi(i, "HTML")
                    ? yn(i)
                    : yb(this._doc, String(i)).toString();
                case Fe.STYLE:
                  return gi(i, "Style") ? yn(i) : i;
                case Fe.SCRIPT:
                  if (gi(i, "Script")) return yn(i);
                  throw new Error("unsafe value used in a script context");
                case Fe.URL:
                  return gi(i, "URL") ? yn(i) : xa(String(i));
                case Fe.RESOURCE_URL:
                  if (gi(i, "ResourceURL")) return yn(i);
                  throw new Error(
                    "unsafe value used in a resource URL context (see https://g.co/ng/security#xss)"
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${e} (see https://g.co/ng/security#xss)`
                  );
              }
            }
            bypassSecurityTrustHtml(e) {
              return (function AF(t) {
                return new xF(t);
              })(e);
            }
            bypassSecurityTrustStyle(e) {
              return (function kF(t) {
                return new wF(t);
              })(e);
            }
            bypassSecurityTrustScript(e) {
              return (function TF(t) {
                return new DF(t);
              })(e);
            }
            bypassSecurityTrustUrl(e) {
              return (function IF(t) {
                return new MF(t);
              })(e);
            }
            bypassSecurityTrustResourceUrl(e) {
              return (function RF(t) {
                return new SF(t);
              })(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z));
            }),
            (t.ɵprov = D({
              token: t,
              factory: function (e) {
                let i = null;
                return (
                  (i = e
                    ? new e()
                    : (function bj(t) {
                        return new FD(t.get(Z));
                      })(_(gt))),
                  i
                );
              },
              providedIn: "root",
            })),
            t
          );
        })();
      const { isArray: Cj } = Array,
        { getPrototypeOf: xj, prototype: wj, keys: Dj } = Object;
      function PD(t) {
        if (1 === t.length) {
          const n = t[0];
          if (Cj(n)) return { args: n, keys: null };
          if (
            (function Mj(t) {
              return t && "object" == typeof t && xj(t) === wj;
            })(n)
          ) {
            const e = Dj(n);
            return { args: e.map((i) => n[i]), keys: e };
          }
        }
        return { args: t, keys: null };
      }
      const { isArray: Sj } = Array;
      function Hm(t) {
        return q((n) =>
          (function Ej(t, n) {
            return Sj(n) ? t(...n) : t(n);
          })(t, n)
        );
      }
      function LD(t, n) {
        return t.reduce((e, i, r) => ((e[i] = n[r]), e), {});
      }
      function jm(...t) {
        const n = iy(t),
          { args: e, keys: i } = PD(t),
          r = new Pe((s) => {
            const { length: o } = e;
            if (!o) return void s.complete();
            const a = new Array(o);
            let l = o,
              c = o;
            for (let d = 0; d < o; d++) {
              let u = !1;
              Nt(e[d]).subscribe(
                Ye(
                  s,
                  (f) => {
                    u || ((u = !0), c--), (a[d] = f);
                  },
                  () => l--,
                  void 0,
                  () => {
                    (!l || !u) && (c || s.next(i ? LD(i, a) : a), s.complete());
                  }
                )
              );
            }
          });
        return n ? r.pipe(Hm(n)) : r;
      }
      let EM = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })(),
        SG = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [EM] })),
            t
          );
        })(),
        EG = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [SG] })),
            t
          );
        })();
      function N(...t) {
        return at(t, ra(t));
      }
      class nn extends B {
        constructor(n) {
          super(), (this._value = n);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(n) {
          const e = super._subscribe(n);
          return !e.closed && n.next(this._value), e;
        }
        getValue() {
          const { hasError: n, thrownError: e, _value: i } = this;
          if (n) throw e;
          return this._throwIfClosed(), i;
        }
        next(n) {
          super.next((this._value = n));
        }
      }
      const Fd = ta(
        (t) =>
          function () {
            t(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      function og(...t) {
        const n = ra(t),
          e = iy(t),
          { args: i, keys: r } = PD(t);
        if (0 === i.length) return at([], n);
        const s = new Pe(
          (function kG(t, n, e = gr) {
            return (i) => {
              zM(
                n,
                () => {
                  const { length: r } = t,
                    s = new Array(r);
                  let o = r,
                    a = r;
                  for (let l = 0; l < r; l++)
                    zM(
                      n,
                      () => {
                        const c = at(t[l], n);
                        let d = !1;
                        c.subscribe(
                          Ye(
                            i,
                            (u) => {
                              (s[l] = u),
                                d || ((d = !0), a--),
                                a || i.next(e(s.slice()));
                            },
                            () => {
                              --o || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, n, r ? (o) => LD(r, o) : gr)
        );
        return e ? s.pipe(Hm(e)) : s;
      }
      function zM(t, n, e) {
        t ? Li(e, t, n) : n();
      }
      function Ir(...t) {
        return (function TG() {
          return Ps(1);
        })()(at(t, ra(t)));
      }
      function Ji(t) {
        return new Pe((n) => {
          Nt(t()).subscribe(n);
        });
      }
      function fs(t, n) {
        const e = we(t) ? t : () => t,
          i = (r) => r.error(e());
        return new Pe(n ? (r) => n.schedule(i, 0, r) : i);
      }
      function ag() {
        return Ze((t, n) => {
          let e = null;
          t._refCount++;
          const i = Ye(n, void 0, void 0, void 0, () => {
            if (!t || t._refCount <= 0 || 0 < --t._refCount)
              return void (e = null);
            const r = t._connection,
              s = e;
            (e = null),
              r && (!s || r === s) && r.unsubscribe(),
              n.unsubscribe();
          });
          t.subscribe(i), i.closed || (e = t.connect());
        });
      }
      class lg extends Pe {
        constructor(n, e) {
          super(),
            (this.source = n),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            jv(n) && (this.lift = n.lift);
        }
        _subscribe(n) {
          return this.getSubject().subscribe(n);
        }
        getSubject() {
          const n = this._subject;
          return (
            (!n || n.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: n } = this;
          (this._subject = this._connection = null), n?.unsubscribe();
        }
        connect() {
          let n = this._connection;
          if (!n) {
            n = this._connection = new Ve();
            const e = this.getSubject();
            n.add(
              this.source.subscribe(
                Ye(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (i) => {
                    this._teardown(), e.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              n.closed && ((this._connection = null), (n = Ve.EMPTY));
          }
          return n;
        }
        refCount() {
          return ag()(this);
        }
      }
      function ht(t, n) {
        return Ze((e, i) => {
          let r = null,
            s = 0,
            o = !1;
          const a = () => o && !r && i.complete();
          e.subscribe(
            Ye(
              i,
              (l) => {
                r?.unsubscribe();
                let c = 0;
                const d = s++;
                Nt(t(l, d)).subscribe(
                  (r = Ye(
                    i,
                    (u) => i.next(n ? n(l, u, d, c++) : u),
                    () => {
                      (r = null), a();
                    }
                  ))
                );
              },
              () => {
                (o = !0), a();
              }
            )
          );
        });
      }
      function ke(t) {
        return t <= 0
          ? () => ui
          : Ze((n, e) => {
              let i = 0;
              n.subscribe(
                Ye(e, (r) => {
                  ++i <= t && (e.next(r), t <= i && e.complete());
                })
              );
            });
      }
      function xn(...t) {
        const n = ra(t);
        return Ze((e, i) => {
          (n ? Ir(t, e, n) : Ir(t, e)).subscribe(i);
        });
      }
      function ve(t, n) {
        return Ze((e, i) => {
          let r = 0;
          e.subscribe(Ye(i, (s) => t.call(n, s, r++) && i.next(s)));
        });
      }
      function Pd(t) {
        return Ze((n, e) => {
          let i = !1;
          n.subscribe(
            Ye(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => {
                i || e.next(t), e.complete();
              }
            )
          );
        });
      }
      function $M(t = IG) {
        return Ze((n, e) => {
          let i = !1;
          n.subscribe(
            Ye(
              e,
              (r) => {
                (i = !0), e.next(r);
              },
              () => (i ? e.complete() : e.error(t()))
            )
          );
        });
      }
      function IG() {
        return new Fd();
      }
      function Rr(t, n) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            t ? ve((r, s) => t(r, s, i)) : gr,
            ke(1),
            e ? Pd(n) : $M(() => new Fd())
          );
      }
      function er(t, n) {
        return we(n) ? mt(t, n, 1) : mt(t, 1);
      }
      function it(t, n, e) {
        const i = we(t) || n || e ? { next: t, error: n, complete: e } : t;
        return i
          ? Ze((r, s) => {
              var o;
              null === (o = i.subscribe) || void 0 === o || o.call(i);
              let a = !0;
              r.subscribe(
                Ye(
                  s,
                  (l) => {
                    var c;
                    null === (c = i.next) || void 0 === c || c.call(i, l),
                      s.next(l);
                  },
                  () => {
                    var l;
                    (a = !1),
                      null === (l = i.complete) || void 0 === l || l.call(i),
                      s.complete();
                  },
                  (l) => {
                    var c;
                    (a = !1),
                      null === (c = i.error) || void 0 === c || c.call(i, l),
                      s.error(l);
                  },
                  () => {
                    var l, c;
                    a &&
                      (null === (l = i.unsubscribe) ||
                        void 0 === l ||
                        l.call(i)),
                      null === (c = i.finalize) || void 0 === c || c.call(i);
                  }
                )
              );
            })
          : gr;
      }
      function Mi(t) {
        return Ze((n, e) => {
          let s,
            i = null,
            r = !1;
          (i = n.subscribe(
            Ye(e, void 0, void 0, (o) => {
              (s = Nt(t(o, Mi(t)(n)))),
                i ? (i.unsubscribe(), (i = null), s.subscribe(e)) : (r = !0);
            })
          )),
            r && (i.unsubscribe(), (i = null), s.subscribe(e));
        });
      }
      function RG(t, n, e, i, r) {
        return (s, o) => {
          let a = e,
            l = n,
            c = 0;
          s.subscribe(
            Ye(
              o,
              (d) => {
                const u = c++;
                (l = a ? t(l, d, u) : ((a = !0), d)), i && o.next(l);
              },
              r &&
                (() => {
                  a && o.next(l), o.complete();
                })
            )
          );
        };
      }
      function WM(t, n) {
        return Ze(RG(t, n, arguments.length >= 2, !0));
      }
      function cg(t) {
        return t <= 0
          ? () => ui
          : Ze((n, e) => {
              let i = [];
              n.subscribe(
                Ye(
                  e,
                  (r) => {
                    i.push(r), t < i.length && i.shift();
                  },
                  () => {
                    for (const r of i) e.next(r);
                    e.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function qM(t, n) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            t ? ve((r, s) => t(r, s, i)) : gr,
            cg(1),
            e ? Pd(n) : $M(() => new Fd())
          );
      }
      function Ld(t) {
        return q(() => t);
      }
      function Nd(t) {
        return Ze((n, e) => {
          try {
            n.subscribe(e);
          } finally {
            e.add(t);
          }
        });
      }
      const be = "primary";
      class FG {
        constructor(n) {
          this.params = n || {};
        }
        has(n) {
          return Object.prototype.hasOwnProperty.call(this.params, n);
        }
        get(n) {
          if (this.has(n)) {
            const e = this.params[n];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(n) {
          if (this.has(n)) {
            const e = this.params[n];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ko(t) {
        return new FG(t);
      }
      function PG(t, n, e) {
        const i = e.path.split("/");
        if (
          i.length > t.length ||
          ("full" === e.pathMatch && (n.hasChildren() || i.length < t.length))
        )
          return null;
        const r = {};
        for (let s = 0; s < i.length; s++) {
          const o = i[s],
            a = t[s];
          if (o.startsWith(":")) r[o.substring(1)] = a;
          else if (o !== a.path) return null;
        }
        return { consumed: t.slice(0, i.length), posParams: r };
      }
      function Si(t, n) {
        const e = t ? Object.keys(t) : void 0,
          i = n ? Object.keys(n) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let r;
        for (let s = 0; s < e.length; s++)
          if (((r = e[s]), !YM(t[r], n[r]))) return !1;
        return !0;
      }
      function YM(t, n) {
        if (Array.isArray(t) && Array.isArray(n)) {
          if (t.length !== n.length) return !1;
          const e = [...t].sort(),
            i = [...n].sort();
          return e.every((r, s) => i[s] === r);
        }
        return t === n;
      }
      function QM(t) {
        return Array.prototype.concat.apply([], t);
      }
      function KM(t) {
        return t.length > 0 ? t[t.length - 1] : null;
      }
      function Bt(t, n) {
        for (const e in t) t.hasOwnProperty(e) && n(t[e], e);
      }
      function tr(t) {
        return Np(t) ? t : La(t) ? at(Promise.resolve(t)) : N(t);
      }
      const BG = {
          exact: function JM(t, n, e) {
            if (
              !ms(t.segments, n.segments) ||
              !Bd(t.segments, n.segments, e) ||
              t.numberOfChildren !== n.numberOfChildren
            )
              return !1;
            for (const i in n.children)
              if (!t.children[i] || !JM(t.children[i], n.children[i], e))
                return !1;
            return !0;
          },
          subset: eS,
        },
        ZM = {
          exact: function VG(t, n) {
            return Si(t, n);
          },
          subset: function HG(t, n) {
            return (
              Object.keys(n).length <= Object.keys(t).length &&
              Object.keys(n).every((e) => YM(t[e], n[e]))
            );
          },
          ignored: () => !0,
        };
      function XM(t, n, e) {
        return (
          BG[e.paths](t.root, n.root, e.matrixParams) &&
          ZM[e.queryParams](t.queryParams, n.queryParams) &&
          !("exact" === e.fragment && t.fragment !== n.fragment)
        );
      }
      function eS(t, n, e) {
        return tS(t, n, n.segments, e);
      }
      function tS(t, n, e, i) {
        if (t.segments.length > e.length) {
          const r = t.segments.slice(0, e.length);
          return !(!ms(r, e) || n.hasChildren() || !Bd(r, e, i));
        }
        if (t.segments.length === e.length) {
          if (!ms(t.segments, e) || !Bd(t.segments, e, i)) return !1;
          for (const r in n.children)
            if (!t.children[r] || !eS(t.children[r], n.children[r], i))
              return !1;
          return !0;
        }
        {
          const r = e.slice(0, t.segments.length),
            s = e.slice(t.segments.length);
          return (
            !!(ms(t.segments, r) && Bd(t.segments, r, i) && t.children[be]) &&
            tS(t.children[be], n, s, i)
          );
        }
      }
      function Bd(t, n, e) {
        return n.every((i, r) => ZM[e](t[r].parameters, i.parameters));
      }
      class ps {
        constructor(n, e, i) {
          (this.root = n), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ko(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return UG.serialize(this);
        }
      }
      class xe {
        constructor(n, e) {
          (this.segments = n),
            (this.children = e),
            (this.parent = null),
            Bt(e, (i, r) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Vd(this);
        }
      }
      class il {
        constructor(n, e) {
          (this.path = n), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ko(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return sS(this);
        }
      }
      function ms(t, n) {
        return t.length === n.length && t.every((e, i) => e.path === n[i].path);
      }
      let nS = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({
            token: t,
            factory: function () {
              return new ug();
            },
            providedIn: "root",
          })),
          t
        );
      })();
      class ug {
        parse(n) {
          const e = new XG(n);
          return new ps(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(n) {
          const e = `/${rl(n.root, !0)}`,
            i = (function WG(t) {
              const n = Object.keys(t)
                .map((e) => {
                  const i = t[e];
                  return Array.isArray(i)
                    ? i.map((r) => `${Hd(e)}=${Hd(r)}`).join("&")
                    : `${Hd(e)}=${Hd(i)}`;
                })
                .filter((e) => !!e);
              return n.length ? `?${n.join("&")}` : "";
            })(n.queryParams);
          return `${e}${i}${
            "string" == typeof n.fragment
              ? `#${(function zG(t) {
                  return encodeURI(t);
                })(n.fragment)}`
              : ""
          }`;
        }
      }
      const UG = new ug();
      function Vd(t) {
        return t.segments.map((n) => sS(n)).join("/");
      }
      function rl(t, n) {
        if (!t.hasChildren()) return Vd(t);
        if (n) {
          const e = t.children[be] ? rl(t.children[be], !1) : "",
            i = [];
          return (
            Bt(t.children, (r, s) => {
              s !== be && i.push(`${s}:${rl(r, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join("//")})` : e
          );
        }
        {
          const e = (function GG(t, n) {
            let e = [];
            return (
              Bt(t.children, (i, r) => {
                r === be && (e = e.concat(n(i, r)));
              }),
              Bt(t.children, (i, r) => {
                r !== be && (e = e.concat(n(i, r)));
              }),
              e
            );
          })(t, (i, r) =>
            r === be ? [rl(t.children[be], !1)] : [`${r}:${rl(i, !1)}`]
          );
          return 1 === Object.keys(t.children).length && null != t.children[be]
            ? `${Vd(t)}/${e[0]}`
            : `${Vd(t)}/(${e.join("//")})`;
        }
      }
      function iS(t) {
        return encodeURIComponent(t)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function Hd(t) {
        return iS(t).replace(/%3B/gi, ";");
      }
      function hg(t) {
        return iS(t)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function jd(t) {
        return decodeURIComponent(t);
      }
      function rS(t) {
        return jd(t.replace(/\+/g, "%20"));
      }
      function sS(t) {
        return `${hg(t.path)}${(function $G(t) {
          return Object.keys(t)
            .map((n) => `;${hg(n)}=${hg(t[n])}`)
            .join("");
        })(t.parameters)}`;
      }
      const qG = /^[^\/()?;=#]+/;
      function Gd(t) {
        const n = t.match(qG);
        return n ? n[0] : "";
      }
      const YG = /^[^=?&#]+/,
        KG = /^[^&#]+/;
      class XG {
        constructor(n) {
          (this.url = n), (this.remaining = n);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new xe([], {})
              : new xe([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const n = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(n);
            } while (this.consumeOptional("&"));
          return n;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const n = [];
          for (
            this.peekStartsWith("(") || n.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), n.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (n.length > 0 || Object.keys(e).length > 0) &&
              (i[be] = new xe(n, e)),
            i
          );
        }
        parseSegment() {
          const n = Gd(this.remaining);
          if ("" === n && this.peekStartsWith(";")) throw new M(4009, !1);
          return this.capture(n), new il(jd(n), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const n = {};
          for (; this.consumeOptional(";"); ) this.parseParam(n);
          return n;
        }
        parseParam(n) {
          const e = Gd(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const r = Gd(this.remaining);
            r && ((i = r), this.capture(i));
          }
          n[jd(e)] = jd(i);
        }
        parseQueryParam(n) {
          const e = (function QG(t) {
            const n = t.match(YG);
            return n ? n[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const o = (function ZG(t) {
              const n = t.match(KG);
              return n ? n[0] : "";
            })(this.remaining);
            o && ((i = o), this.capture(i));
          }
          const r = rS(e),
            s = rS(i);
          if (n.hasOwnProperty(r)) {
            let o = n[r];
            Array.isArray(o) || ((o = [o]), (n[r] = o)), o.push(s);
          } else n[r] = s;
        }
        parseParens(n) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = Gd(this.remaining),
              r = this.remaining[i.length];
            if ("/" !== r && ")" !== r && ";" !== r) throw new M(4010, !1);
            let s;
            i.indexOf(":") > -1
              ? ((s = i.slice(0, i.indexOf(":"))),
                this.capture(s),
                this.capture(":"))
              : n && (s = be);
            const o = this.parseChildren();
            (e[s] = 1 === Object.keys(o).length ? o[be] : new xe([], o)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(n) {
          return this.remaining.startsWith(n);
        }
        consumeOptional(n) {
          return (
            !!this.peekStartsWith(n) &&
            ((this.remaining = this.remaining.substring(n.length)), !0)
          );
        }
        capture(n) {
          if (!this.consumeOptional(n)) throw new M(4011, !1);
        }
      }
      function fg(t) {
        return t.segments.length > 0 ? new xe([], { [be]: t }) : t;
      }
      function Ud(t) {
        const n = {};
        for (const i of Object.keys(t.children)) {
          const s = Ud(t.children[i]);
          (s.segments.length > 0 || s.hasChildren()) && (n[i] = s);
        }
        return (function JG(t) {
          if (1 === t.numberOfChildren && t.children[be]) {
            const n = t.children[be];
            return new xe(t.segments.concat(n.segments), n.children);
          }
          return t;
        })(new xe(t.segments, n));
      }
      function gs(t) {
        return t instanceof ps;
      }
      function nU(t, n, e, i, r) {
        if (0 === e.length) return To(n.root, n.root, n.root, i, r);
        const s = (function lS(t) {
          if ("string" == typeof t[0] && 1 === t.length && "/" === t[0])
            return new aS(!0, 0, t);
          let n = 0,
            e = !1;
          const i = t.reduce((r, s, o) => {
            if ("object" == typeof s && null != s) {
              if (s.outlets) {
                const a = {};
                return (
                  Bt(s.outlets, (l, c) => {
                    a[c] = "string" == typeof l ? l.split("/") : l;
                  }),
                  [...r, { outlets: a }]
                );
              }
              if (s.segmentPath) return [...r, s.segmentPath];
            }
            return "string" != typeof s
              ? [...r, s]
              : 0 === o
              ? (s.split("/").forEach((a, l) => {
                  (0 == l && "." === a) ||
                    (0 == l && "" === a
                      ? (e = !0)
                      : ".." === a
                      ? n++
                      : "" != a && r.push(a));
                }),
                r)
              : [...r, s];
          }, []);
          return new aS(e, n, i);
        })(e);
        return s.toRoot()
          ? To(n.root, n.root, new xe([], {}), i, r)
          : (function o(l) {
              const c = (function rU(t, n, e, i) {
                  if (t.isAbsolute) return new Io(n.root, !0, 0);
                  if (-1 === i) return new Io(e, e === n.root, 0);
                  return (function cS(t, n, e) {
                    let i = t,
                      r = n,
                      s = e;
                    for (; s > r; ) {
                      if (((s -= r), (i = i.parent), !i)) throw new M(4005, !1);
                      r = i.segments.length;
                    }
                    return new Io(i, !1, r - s);
                  })(e, i + (sl(t.commands[0]) ? 0 : 1), t.numberOfDoubleDots);
                })(s, n, t.snapshot?._urlSegment, l),
                d = c.processChildren
                  ? al(c.segmentGroup, c.index, s.commands)
                  : mg(c.segmentGroup, c.index, s.commands);
              return To(n.root, c.segmentGroup, d, i, r);
            })(t.snapshot?._lastPathIndex);
      }
      function sl(t) {
        return (
          "object" == typeof t && null != t && !t.outlets && !t.segmentPath
        );
      }
      function ol(t) {
        return "object" == typeof t && null != t && t.outlets;
      }
      function To(t, n, e, i, r) {
        let o,
          s = {};
        i &&
          Bt(i, (l, c) => {
            s[c] = Array.isArray(l) ? l.map((d) => `${d}`) : `${l}`;
          }),
          (o = t === n ? e : oS(t, n, e));
        const a = fg(Ud(o));
        return new ps(a, s, r);
      }
      function oS(t, n, e) {
        const i = {};
        return (
          Bt(t.children, (r, s) => {
            i[s] = r === n ? e : oS(r, n, e);
          }),
          new xe(t.segments, i)
        );
      }
      class aS {
        constructor(n, e, i) {
          if (
            ((this.isAbsolute = n),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            n && i.length > 0 && sl(i[0]))
          )
            throw new M(4003, !1);
          const r = i.find(ol);
          if (r && r !== KM(i)) throw new M(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class Io {
        constructor(n, e, i) {
          (this.segmentGroup = n), (this.processChildren = e), (this.index = i);
        }
      }
      function mg(t, n, e) {
        if (
          (t || (t = new xe([], {})),
          0 === t.segments.length && t.hasChildren())
        )
          return al(t, n, e);
        const i = (function oU(t, n, e) {
            let i = 0,
              r = n;
            const s = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < t.segments.length; ) {
              if (i >= e.length) return s;
              const o = t.segments[r],
                a = e[i];
              if (ol(a)) break;
              const l = `${a}`,
                c = i < e.length - 1 ? e[i + 1] : null;
              if (r > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!uS(l, c, o)) return s;
                i += 2;
              } else {
                if (!uS(l, {}, o)) return s;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(t, n, e),
          r = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < t.segments.length) {
          const s = new xe(t.segments.slice(0, i.pathIndex), {});
          return (
            (s.children[be] = new xe(
              t.segments.slice(i.pathIndex),
              t.children
            )),
            al(s, 0, r)
          );
        }
        return i.match && 0 === r.length
          ? new xe(t.segments, {})
          : i.match && !t.hasChildren()
          ? gg(t, n, e)
          : i.match
          ? al(t, 0, r)
          : gg(t, n, e);
      }
      function al(t, n, e) {
        if (0 === e.length) return new xe(t.segments, {});
        {
          const i = (function sU(t) {
              return ol(t[0]) ? t[0].outlets : { [be]: t };
            })(e),
            r = {};
          return (
            Bt(i, (s, o) => {
              "string" == typeof s && (s = [s]),
                null !== s && (r[o] = mg(t.children[o], n, s));
            }),
            Bt(t.children, (s, o) => {
              void 0 === i[o] && (r[o] = s);
            }),
            new xe(t.segments, r)
          );
        }
      }
      function gg(t, n, e) {
        const i = t.segments.slice(0, n);
        let r = 0;
        for (; r < e.length; ) {
          const s = e[r];
          if (ol(s)) {
            const l = aU(s.outlets);
            return new xe(i, l);
          }
          if (0 === r && sl(e[0])) {
            i.push(new il(t.segments[n].path, dS(e[0]))), r++;
            continue;
          }
          const o = ol(s) ? s.outlets[be] : `${s}`,
            a = r < e.length - 1 ? e[r + 1] : null;
          o && a && sl(a)
            ? (i.push(new il(o, dS(a))), (r += 2))
            : (i.push(new il(o, {})), r++);
        }
        return new xe(i, {});
      }
      function aU(t) {
        const n = {};
        return (
          Bt(t, (e, i) => {
            "string" == typeof e && (e = [e]),
              null !== e && (n[i] = gg(new xe([], {}), 0, e));
          }),
          n
        );
      }
      function dS(t) {
        const n = {};
        return Bt(t, (e, i) => (n[i] = `${e}`)), n;
      }
      function uS(t, n, e) {
        return t == e.path && Si(n, e.parameters);
      }
      class nr {
        constructor(n, e) {
          (this.id = n), (this.url = e);
        }
      }
      class _g extends nr {
        constructor(n, e, i = "imperative", r = null) {
          super(n, e),
            (this.type = 0),
            (this.navigationTrigger = i),
            (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Or extends nr {
        constructor(n, e, i) {
          super(n, e), (this.urlAfterRedirects = i), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class zd extends nr {
        constructor(n, e, i, r) {
          super(n, e), (this.reason = i), (this.code = r), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class hS extends nr {
        constructor(n, e, i, r) {
          super(n, e), (this.error = i), (this.target = r), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class lU extends nr {
        constructor(n, e, i, r) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class cU extends nr {
        constructor(n, e, i, r) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class dU extends nr {
        constructor(n, e, i, r, s) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.shouldActivate = s),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class uU extends nr {
        constructor(n, e, i, r) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class hU extends nr {
        constructor(n, e, i, r) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class fU {
        constructor(n) {
          (this.route = n), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class pU {
        constructor(n) {
          (this.route = n), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class mU {
        constructor(n) {
          (this.snapshot = n), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class gU {
        constructor(n) {
          (this.snapshot = n), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class _U {
        constructor(n) {
          (this.snapshot = n), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class vU {
        constructor(n) {
          (this.snapshot = n), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class fS {
        constructor(n, e, i) {
          (this.routerEvent = n),
            (this.position = e),
            (this.anchor = i),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class pS {
        constructor(n) {
          this._root = n;
        }
        get root() {
          return this._root.value;
        }
        parent(n) {
          const e = this.pathFromRoot(n);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(n) {
          const e = vg(n, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(n) {
          const e = vg(n, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(n) {
          const e = yg(n, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== n);
        }
        pathFromRoot(n) {
          return yg(n, this._root).map((e) => e.value);
        }
      }
      function vg(t, n) {
        if (t === n.value) return n;
        for (const e of n.children) {
          const i = vg(t, e);
          if (i) return i;
        }
        return null;
      }
      function yg(t, n) {
        if (t === n.value) return [n];
        for (const e of n.children) {
          const i = yg(t, e);
          if (i.length) return i.unshift(n), i;
        }
        return [];
      }
      class ir {
        constructor(n, e) {
          (this.value = n), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Ro(t) {
        const n = {};
        return t && t.children.forEach((e) => (n[e.value.outlet] = e)), n;
      }
      class mS extends pS {
        constructor(n, e) {
          super(n), (this.snapshot = e), bg(this, n);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function gS(t, n) {
        const e = (function bU(t, n) {
            const o = new $d([], {}, {}, "", {}, be, n, null, t.root, -1, {});
            return new vS("", new ir(o, []));
          })(t, n),
          i = new nn([new il("", {})]),
          r = new nn({}),
          s = new nn({}),
          o = new nn({}),
          a = new nn(""),
          l = new _s(i, r, o, a, s, be, n, e.root);
        return (l.snapshot = e.root), new mS(new ir(l, []), e);
      }
      class _s {
        constructor(n, e, i, r, s, o, a, l) {
          (this.url = n),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this._futureSnapshot = l);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(q((n) => ko(n)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(q((n) => ko(n)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function _S(t, n = "emptyOnly") {
        const e = t.pathFromRoot;
        let i = 0;
        if ("always" !== n)
          for (i = e.length - 1; i >= 1; ) {
            const r = e[i],
              s = e[i - 1];
            if (r.routeConfig && "" === r.routeConfig.path) i--;
            else {
              if (s.component) break;
              i--;
            }
          }
        return (function CU(t) {
          return t.reduce(
            (n, e) => ({
              params: { ...n.params, ...e.params },
              data: { ...n.data, ...e.data },
              resolve: {
                ...e.data,
                ...n.resolve,
                ...e.routeConfig?.data,
                ...e._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class $d {
        constructor(n, e, i, r, s, o, a, l, c, d, u, f) {
          (this.url = n),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = s),
            (this.outlet = o),
            (this.component = a),
            (this.routeConfig = l),
            (this._urlSegment = c),
            (this._lastPathIndex = d),
            (this._correctedLastPathIndex = f ?? d),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ko(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ko(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class vS extends pS {
        constructor(n, e) {
          super(e), (this.url = n), bg(this, e);
        }
        toString() {
          return yS(this._root);
        }
      }
      function bg(t, n) {
        (n.value._routerState = t), n.children.forEach((e) => bg(t, e));
      }
      function yS(t) {
        const n =
          t.children.length > 0 ? ` { ${t.children.map(yS).join(", ")} } ` : "";
        return `${t.value}${n}`;
      }
      function Cg(t) {
        if (t.snapshot) {
          const n = t.snapshot,
            e = t._futureSnapshot;
          (t.snapshot = e),
            Si(n.queryParams, e.queryParams) ||
              t.queryParams.next(e.queryParams),
            n.fragment !== e.fragment && t.fragment.next(e.fragment),
            Si(n.params, e.params) || t.params.next(e.params),
            (function LG(t, n) {
              if (t.length !== n.length) return !1;
              for (let e = 0; e < t.length; ++e) if (!Si(t[e], n[e])) return !1;
              return !0;
            })(n.url, e.url) || t.url.next(e.url),
            Si(n.data, e.data) || t.data.next(e.data);
        } else
          (t.snapshot = t._futureSnapshot), t.data.next(t._futureSnapshot.data);
      }
      function xg(t, n) {
        const e =
          Si(t.params, n.params) &&
          (function jG(t, n) {
            return (
              ms(t, n) && t.every((e, i) => Si(e.parameters, n[i].parameters))
            );
          })(t.url, n.url);
        return (
          e &&
          !(!t.parent != !n.parent) &&
          (!t.parent || xg(t.parent, n.parent))
        );
      }
      function ll(t, n, e) {
        if (e && t.shouldReuseRoute(n.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = n.value;
          const r = (function wU(t, n, e) {
            return n.children.map((i) => {
              for (const r of e.children)
                if (t.shouldReuseRoute(i.value, r.value.snapshot))
                  return ll(t, i, r);
              return ll(t, i);
            });
          })(t, n, e);
          return new ir(i, r);
        }
        {
          if (t.shouldAttach(n.value)) {
            const s = t.retrieve(n.value);
            if (null !== s) {
              const o = s.route;
              return (
                (o.value._futureSnapshot = n.value),
                (o.children = n.children.map((a) => ll(t, a))),
                o
              );
            }
          }
          const i = (function DU(t) {
              return new _s(
                new nn(t.url),
                new nn(t.params),
                new nn(t.queryParams),
                new nn(t.fragment),
                new nn(t.data),
                t.outlet,
                t.component,
                t
              );
            })(n.value),
            r = n.children.map((s) => ll(t, s));
          return new ir(i, r);
        }
      }
      const wg = "ngNavigationCancelingError";
      function bS(t, n) {
        const { redirectTo: e, navigationBehaviorOptions: i } = gs(n)
            ? { redirectTo: n, navigationBehaviorOptions: void 0 }
            : n,
          r = CS(!1, 0, n);
        return (r.url = e), (r.navigationBehaviorOptions = i), r;
      }
      function CS(t, n, e) {
        const i = new Error("NavigationCancelingError: " + (t || ""));
        return (i[wg] = !0), (i.cancellationCode = n), e && (i.url = e), i;
      }
      function xS(t) {
        return wS(t) && gs(t.url);
      }
      function wS(t) {
        return t && t[wg];
      }
      class MU {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new cl()),
            (this.attachRef = null);
        }
      }
      let cl = (() => {
        class t {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(e, i) {
            const r = this.getOrCreateContext(e);
            (r.outlet = i), this.contexts.set(e, r);
          }
          onChildOutletDestroyed(e) {
            const i = this.getContext(e);
            i && ((i.outlet = null), (i.attachRef = null));
          }
          onOutletDeactivated() {
            const e = this.contexts;
            return (this.contexts = new Map()), e;
          }
          onOutletReAttached(e) {
            this.contexts = e;
          }
          getOrCreateContext(e) {
            let i = this.getContext(e);
            return i || ((i = new MU()), this.contexts.set(e, i)), i;
          }
          getContext(e) {
            return this.contexts.get(e) || null;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const Wd = !1;
      let qd = (() => {
        class t {
          constructor(e, i, r, s, o) {
            (this.parentContexts = e),
              (this.location = i),
              (this.changeDetector = s),
              (this.environmentInjector = o),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new W()),
              (this.deactivateEvents = new W()),
              (this.attachEvents = new W()),
              (this.detachEvents = new W()),
              (this.name = r || be),
              e.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.getContext(this.name)?.outlet === this &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const e = this.parentContexts.getContext(this.name);
              e &&
                e.route &&
                (e.attachRef
                  ? this.attach(e.attachRef, e.route)
                  : this.activateWith(e.route, e.injector));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new M(4012, Wd);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new M(4012, Wd);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new M(4012, Wd);
            this.location.detach();
            const e = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(e.instance),
              e
            );
          }
          attach(e, i) {
            (this.activated = e),
              (this._activatedRoute = i),
              this.location.insert(e.hostView),
              this.attachEvents.emit(e.instance);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, i) {
            if (this.isActivated) throw new M(4013, Wd);
            this._activatedRoute = e;
            const r = this.location,
              o = e._futureSnapshot.component,
              a = this.parentContexts.getOrCreateContext(this.name).children,
              l = new SU(e, a, r.injector);
            if (
              i &&
              (function EU(t) {
                return !!t.resolveComponentFactory;
              })(i)
            ) {
              const c = i.resolveComponentFactory(o);
              this.activated = r.createComponent(c, r.length, l);
            } else
              this.activated = r.createComponent(o, {
                index: r.length,
                injector: l,
                environmentInjector: i ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(h(cl), h(_t), Zt("name"), h(Ue), h(xr));
          }),
          (t.ɵdir = y({
            type: t,
            selectors: [["router-outlet"]],
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
          })),
          t
        );
      })();
      class SU {
        constructor(n, e, i) {
          (this.route = n), (this.childContexts = e), (this.parent = i);
        }
        get(n, e) {
          return n === _s
            ? this.route
            : n === cl
            ? this.childContexts
            : this.parent.get(n, e);
        }
      }
      let DS = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = te({
            type: t,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (e, i) {
              1 & e && Me(0, "router-outlet");
            },
            dependencies: [qd],
            encapsulation: 2,
          })),
          t
        );
      })();
      function MS(t, n) {
        return (
          t.providers &&
            !t._injector &&
            (t._injector = Wc(t.providers, n, `Route: ${t.path}`)),
          t._injector ?? n
        );
      }
      function Mg(t) {
        const n = t.children && t.children.map(Mg),
          e = n ? { ...t, children: n } : { ...t };
        return (
          !e.component &&
            !e.loadComponent &&
            (n || e.loadChildren) &&
            e.outlet &&
            e.outlet !== be &&
            (e.component = DS),
          e
        );
      }
      function Gn(t) {
        return t.outlet || be;
      }
      function SS(t, n) {
        const e = t.filter((i) => Gn(i) === n);
        return e.push(...t.filter((i) => Gn(i) !== n)), e;
      }
      function ES(t) {
        if (!t) return null;
        if (t.routeConfig?._injector) return t.routeConfig._injector;
        for (let n = t.parent; n; n = n.parent) {
          const e = n.routeConfig;
          if (e?._loadedInjector) return e._loadedInjector;
          if (e?._injector) return e._injector;
        }
        return null;
      }
      class RU {
        constructor(n, e, i, r) {
          (this.routeReuseStrategy = n),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = r);
        }
        activate(n) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, n),
            Cg(this.futureState.root),
            this.activateChildRoutes(e, i, n);
        }
        deactivateChildRoutes(n, e, i) {
          const r = Ro(e);
          n.children.forEach((s) => {
            const o = s.value.outlet;
            this.deactivateRoutes(s, r[o], i), delete r[o];
          }),
            Bt(r, (s, o) => {
              this.deactivateRouteAndItsChildren(s, i);
            });
        }
        deactivateRoutes(n, e, i) {
          const r = n.value,
            s = e ? e.value : null;
          if (r === s)
            if (r.component) {
              const o = i.getContext(r.outlet);
              o && this.deactivateChildRoutes(n, e, o.children);
            } else this.deactivateChildRoutes(n, e, i);
          else s && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(n, e) {
          n.value.component &&
          this.routeReuseStrategy.shouldDetach(n.value.snapshot)
            ? this.detachAndStoreRouteSubtree(n, e)
            : this.deactivateRouteAndOutlet(n, e);
        }
        detachAndStoreRouteSubtree(n, e) {
          const i = e.getContext(n.value.outlet),
            r = i && n.value.component ? i.children : e,
            s = Ro(n);
          for (const o of Object.keys(s))
            this.deactivateRouteAndItsChildren(s[o], r);
          if (i && i.outlet) {
            const o = i.outlet.detach(),
              a = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(n.value.snapshot, {
              componentRef: o,
              route: n,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(n, e) {
          const i = e.getContext(n.value.outlet),
            r = i && n.value.component ? i.children : e,
            s = Ro(n);
          for (const o of Object.keys(s))
            this.deactivateRouteAndItsChildren(s[o], r);
          i &&
            i.outlet &&
            (i.outlet.deactivate(),
            i.children.onOutletDeactivated(),
            (i.attachRef = null),
            (i.resolver = null),
            (i.route = null));
        }
        activateChildRoutes(n, e, i) {
          const r = Ro(e);
          n.children.forEach((s) => {
            this.activateRoutes(s, r[s.value.outlet], i),
              this.forwardEvent(new vU(s.value.snapshot));
          }),
            n.children.length && this.forwardEvent(new gU(n.value.snapshot));
        }
        activateRoutes(n, e, i) {
          const r = n.value,
            s = e ? e.value : null;
          if ((Cg(r), r === s))
            if (r.component) {
              const o = i.getOrCreateContext(r.outlet);
              this.activateChildRoutes(n, e, o.children);
            } else this.activateChildRoutes(n, e, i);
          else if (r.component) {
            const o = i.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                o.children.onOutletReAttached(a.contexts),
                (o.attachRef = a.componentRef),
                (o.route = a.route.value),
                o.outlet && o.outlet.attach(a.componentRef, a.route.value),
                Cg(a.route.value),
                this.activateChildRoutes(n, null, o.children);
            } else {
              const a = ES(r.snapshot),
                l = a?.get(es) ?? null;
              (o.attachRef = null),
                (o.route = r),
                (o.resolver = l),
                (o.injector = a),
                o.outlet && o.outlet.activateWith(r, o.injector),
                this.activateChildRoutes(n, null, o.children);
            }
          } else this.activateChildRoutes(n, null, i);
        }
      }
      class AS {
        constructor(n) {
          (this.path = n), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Yd {
        constructor(n, e) {
          (this.component = n), (this.route = e);
        }
      }
      function OU(t, n, e) {
        const i = t._root;
        return dl(i, n ? n._root : null, e, [i.value]);
      }
      function Qd(t, n, e) {
        return (ES(n) ?? e).get(t);
      }
      function dl(
        t,
        n,
        e,
        i,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const s = Ro(n);
        return (
          t.children.forEach((o) => {
            (function PU(
              t,
              n,
              e,
              i,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const s = t.value,
                o = n ? n.value : null,
                a = e ? e.getContext(t.value.outlet) : null;
              if (o && s.routeConfig === o.routeConfig) {
                const l = (function LU(t, n, e) {
                  if ("function" == typeof e) return e(t, n);
                  switch (e) {
                    case "pathParamsChange":
                      return !ms(t.url, n.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !ms(t.url, n.url) || !Si(t.queryParams, n.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !xg(t, n) || !Si(t.queryParams, n.queryParams);
                    default:
                      return !xg(t, n);
                  }
                })(o, s, s.routeConfig.runGuardsAndResolvers);
                l
                  ? r.canActivateChecks.push(new AS(i))
                  : ((s.data = o.data), (s._resolvedData = o._resolvedData)),
                  dl(t, n, s.component ? (a ? a.children : null) : e, i, r),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    r.canDeactivateChecks.push(new Yd(a.outlet.component, o));
              } else
                o && ul(n, a, r),
                  r.canActivateChecks.push(new AS(i)),
                  dl(t, null, s.component ? (a ? a.children : null) : e, i, r);
            })(o, s[o.value.outlet], e, i.concat([o.value]), r),
              delete s[o.value.outlet];
          }),
          Bt(s, (o, a) => ul(o, e.getContext(a), r)),
          r
        );
      }
      function ul(t, n, e) {
        const i = Ro(t),
          r = t.value;
        Bt(i, (s, o) => {
          ul(s, r.component ? (n ? n.children.getContext(o) : null) : n, e);
        }),
          e.canDeactivateChecks.push(
            new Yd(
              r.component && n && n.outlet && n.outlet.isActivated
                ? n.outlet.component
                : null,
              r
            )
          );
      }
      function hl(t) {
        return "function" == typeof t;
      }
      function Sg(t) {
        return t instanceof Fd || "EmptyError" === t?.name;
      }
      const Kd = Symbol("INITIAL_VALUE");
      function Oo() {
        return ht((t) =>
          og(t.map((n) => n.pipe(ke(1), xn(Kd)))).pipe(
            q((n) => {
              for (const e of n)
                if (!0 !== e) {
                  if (e === Kd) return Kd;
                  if (!1 === e || e instanceof ps) return e;
                }
              return !0;
            }),
            ve((n) => n !== Kd),
            ke(1)
          )
        );
      }
      function kS(t) {
        return (function nR(...t) {
          return Bv(t);
        })(
          it((n) => {
            if (gs(n)) throw bS(0, n);
          }),
          q((n) => !0 === n)
        );
      }
      const Eg = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function TS(t, n, e, i, r) {
        const s = Ag(t, n, e);
        return s.matched
          ? (function JU(t, n, e, i) {
              const r = n.canMatch;
              return r && 0 !== r.length
                ? N(
                    r.map((o) => {
                      const a = t.get(o),
                        l = (function GU(t) {
                          return t && hl(t.canMatch);
                        })(a)
                          ? a.canMatch(n, e)
                          : a(n, e);
                      return tr(l);
                    })
                  ).pipe(Oo(), kS())
                : N(!0);
            })((i = MS(n, i)), n, e).pipe(q((o) => (!0 === o ? s : { ...Eg })))
          : N(s);
      }
      function Ag(t, n, e) {
        if ("" === n.path)
          return "full" === n.pathMatch && (t.hasChildren() || e.length > 0)
            ? { ...Eg }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: e,
                parameters: {},
                positionalParamSegments: {},
              };
        const r = (n.matcher || PG)(e, t, n);
        if (!r) return { ...Eg };
        const s = {};
        Bt(r.posParams, (a, l) => {
          s[l] = a.path;
        });
        const o =
          r.consumed.length > 0
            ? { ...s, ...r.consumed[r.consumed.length - 1].parameters }
            : s;
        return {
          matched: !0,
          consumedSegments: r.consumed,
          remainingSegments: e.slice(r.consumed.length),
          parameters: o,
          positionalParamSegments: r.posParams ?? {},
        };
      }
      function Zd(t, n, e, i, r = "corrected") {
        if (
          e.length > 0 &&
          (function nz(t, n, e) {
            return e.some((i) => Xd(t, n, i) && Gn(i) !== be);
          })(t, e, i)
        ) {
          const o = new xe(
            n,
            (function tz(t, n, e, i) {
              const r = {};
              (r[be] = i),
                (i._sourceSegment = t),
                (i._segmentIndexShift = n.length);
              for (const s of e)
                if ("" === s.path && Gn(s) !== be) {
                  const o = new xe([], {});
                  (o._sourceSegment = t),
                    (o._segmentIndexShift = n.length),
                    (r[Gn(s)] = o);
                }
              return r;
            })(t, n, i, new xe(e, t.children))
          );
          return (
            (o._sourceSegment = t),
            (o._segmentIndexShift = n.length),
            { segmentGroup: o, slicedSegments: [] }
          );
        }
        if (
          0 === e.length &&
          (function iz(t, n, e) {
            return e.some((i) => Xd(t, n, i));
          })(t, e, i)
        ) {
          const o = new xe(
            t.segments,
            (function ez(t, n, e, i, r, s) {
              const o = {};
              for (const a of i)
                if (Xd(t, e, a) && !r[Gn(a)]) {
                  const l = new xe([], {});
                  (l._sourceSegment = t),
                    (l._segmentIndexShift =
                      "legacy" === s ? t.segments.length : n.length),
                    (o[Gn(a)] = l);
                }
              return { ...r, ...o };
            })(t, n, e, i, t.children, r)
          );
          return (
            (o._sourceSegment = t),
            (o._segmentIndexShift = n.length),
            { segmentGroup: o, slicedSegments: e }
          );
        }
        const s = new xe(t.segments, t.children);
        return (
          (s._sourceSegment = t),
          (s._segmentIndexShift = n.length),
          { segmentGroup: s, slicedSegments: e }
        );
      }
      function Xd(t, n, e) {
        return (
          (!(t.hasChildren() || n.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      function IS(t, n, e, i) {
        return (
          !!(Gn(t) === i || (i !== be && Xd(n, e, t))) &&
          ("**" === t.path || Ag(n, t, e).matched)
        );
      }
      function RS(t, n, e) {
        return 0 === n.length && !t.children[e];
      }
      const Jd = !1;
      class eu {
        constructor(n) {
          this.segmentGroup = n || null;
        }
      }
      class OS {
        constructor(n) {
          this.urlTree = n;
        }
      }
      function fl(t) {
        return fs(new eu(t));
      }
      function FS(t) {
        return fs(new OS(t));
      }
      class az {
        constructor(n, e, i, r, s) {
          (this.injector = n),
            (this.configLoader = e),
            (this.urlSerializer = i),
            (this.urlTree = r),
            (this.config = s),
            (this.allowRedirects = !0);
        }
        apply() {
          const n = Zd(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new xe(n.segments, n.children);
          return this.expandSegmentGroup(this.injector, this.config, e, be)
            .pipe(
              q((s) =>
                this.createUrlTree(
                  Ud(s),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Mi((s) => {
                if (s instanceof OS)
                  return (this.allowRedirects = !1), this.match(s.urlTree);
                throw s instanceof eu ? this.noMatchError(s) : s;
              })
            );
        }
        match(n) {
          return this.expandSegmentGroup(this.injector, this.config, n.root, be)
            .pipe(
              q((r) => this.createUrlTree(Ud(r), n.queryParams, n.fragment))
            )
            .pipe(
              Mi((r) => {
                throw r instanceof eu ? this.noMatchError(r) : r;
              })
            );
        }
        noMatchError(n) {
          return new M(4002, Jd);
        }
        createUrlTree(n, e, i) {
          const r = fg(n);
          return new ps(r, e, i);
        }
        expandSegmentGroup(n, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.expandChildren(n, e, i).pipe(q((s) => new xe([], s)))
            : this.expandSegment(n, i, e, i.segments, r, !0);
        }
        expandChildren(n, e, i) {
          const r = [];
          for (const s of Object.keys(i.children))
            "primary" === s ? r.unshift(s) : r.push(s);
          return at(r).pipe(
            er((s) => {
              const o = i.children[s],
                a = SS(e, s);
              return this.expandSegmentGroup(n, a, o, s).pipe(
                q((l) => ({ segment: l, outlet: s }))
              );
            }),
            WM((s, o) => ((s[o.outlet] = o.segment), s), {}),
            qM()
          );
        }
        expandSegment(n, e, i, r, s, o) {
          return at(i).pipe(
            er((a) =>
              this.expandSegmentAgainstRoute(n, e, i, a, r, s, o).pipe(
                Mi((c) => {
                  if (c instanceof eu) return N(null);
                  throw c;
                })
              )
            ),
            Rr((a) => !!a),
            Mi((a, l) => {
              if (Sg(a)) return RS(e, r, s) ? N(new xe([], {})) : fl(e);
              throw a;
            })
          );
        }
        expandSegmentAgainstRoute(n, e, i, r, s, o, a) {
          return IS(r, e, s, o)
            ? void 0 === r.redirectTo
              ? this.matchSegmentAgainstRoute(n, e, r, s, o)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(n, e, i, r, s, o)
              : fl(e)
            : fl(e);
        }
        expandSegmentAgainstRouteUsingRedirect(n, e, i, r, s, o) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(n, i, r, o)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                n,
                e,
                i,
                r,
                s,
                o
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(n, e, i, r) {
          const s = this.applyRedirectCommands([], i.redirectTo, {});
          return i.redirectTo.startsWith("/")
            ? FS(s)
            : this.lineralizeSegments(i, s).pipe(
                mt((o) => {
                  const a = new xe(o, {});
                  return this.expandSegment(n, a, e, o, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(n, e, i, r, s, o) {
          const {
            matched: a,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: d,
          } = Ag(e, r, s);
          if (!a) return fl(e);
          const u = this.applyRedirectCommands(l, r.redirectTo, d);
          return r.redirectTo.startsWith("/")
            ? FS(u)
            : this.lineralizeSegments(r, u).pipe(
                mt((f) => this.expandSegment(n, e, i, f.concat(c), o, !1))
              );
        }
        matchSegmentAgainstRoute(n, e, i, r, s) {
          return "**" === i.path
            ? ((n = MS(i, n)),
              i.loadChildren
                ? (i._loadedRoutes
                    ? N({
                        routes: i._loadedRoutes,
                        injector: i._loadedInjector,
                      })
                    : this.configLoader.loadChildren(n, i)
                  ).pipe(
                    q(
                      (a) => (
                        (i._loadedRoutes = a.routes),
                        (i._loadedInjector = a.injector),
                        new xe(r, {})
                      )
                    )
                  )
                : N(new xe(r, {})))
            : TS(e, i, r, n).pipe(
                ht(
                  ({ matched: o, consumedSegments: a, remainingSegments: l }) =>
                    o
                      ? this.getChildConfig((n = i._injector ?? n), i, r).pipe(
                          mt((d) => {
                            const u = d.injector ?? n,
                              f = d.routes,
                              { segmentGroup: p, slicedSegments: m } = Zd(
                                e,
                                a,
                                l,
                                f
                              ),
                              g = new xe(p.segments, p.children);
                            if (0 === m.length && g.hasChildren())
                              return this.expandChildren(u, f, g).pipe(
                                q((w) => new xe(a, w))
                              );
                            if (0 === f.length && 0 === m.length)
                              return N(new xe(a, {}));
                            const v = Gn(i) === s;
                            return this.expandSegment(
                              u,
                              g,
                              f,
                              m,
                              v ? be : s,
                              !0
                            ).pipe(
                              q((k) => new xe(a.concat(k.segments), k.children))
                            );
                          })
                        )
                      : fl(e)
                )
              );
        }
        getChildConfig(n, e, i) {
          return e.children
            ? N({ routes: e.children, injector: n })
            : e.loadChildren
            ? void 0 !== e._loadedRoutes
              ? N({ routes: e._loadedRoutes, injector: e._loadedInjector })
              : (function XU(t, n, e, i) {
                  const r = n.canLoad;
                  return void 0 === r || 0 === r.length
                    ? N(!0)
                    : N(
                        r.map((o) => {
                          const a = t.get(o),
                            l = (function BU(t) {
                              return t && hl(t.canLoad);
                            })(a)
                              ? a.canLoad(n, e)
                              : a(n, e);
                          return tr(l);
                        })
                      ).pipe(Oo(), kS());
                })(n, e, i).pipe(
                  mt((r) =>
                    r
                      ? this.configLoader.loadChildren(n, e).pipe(
                          it((s) => {
                            (e._loadedRoutes = s.routes),
                              (e._loadedInjector = s.injector);
                          })
                        )
                      : (function sz(t) {
                          return fs(CS(Jd, 3));
                        })()
                  )
                )
            : N({ routes: [], injector: n });
        }
        lineralizeSegments(n, e) {
          let i = [],
            r = e.root;
          for (;;) {
            if (((i = i.concat(r.segments)), 0 === r.numberOfChildren))
              return N(i);
            if (r.numberOfChildren > 1 || !r.children[be])
              return fs(new M(4e3, Jd));
            r = r.children[be];
          }
        }
        applyRedirectCommands(n, e, i) {
          return this.applyRedirectCreateUrlTree(
            e,
            this.urlSerializer.parse(e),
            n,
            i
          );
        }
        applyRedirectCreateUrlTree(n, e, i, r) {
          const s = this.createSegmentGroup(n, e.root, i, r);
          return new ps(
            s,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(n, e) {
          const i = {};
          return (
            Bt(n, (r, s) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                i[s] = e[a];
              } else i[s] = r;
            }),
            i
          );
        }
        createSegmentGroup(n, e, i, r) {
          const s = this.createSegments(n, e.segments, i, r);
          let o = {};
          return (
            Bt(e.children, (a, l) => {
              o[l] = this.createSegmentGroup(n, a, i, r);
            }),
            new xe(s, o)
          );
        }
        createSegments(n, e, i, r) {
          return e.map((s) =>
            s.path.startsWith(":")
              ? this.findPosParam(n, s, r)
              : this.findOrReturn(s, i)
          );
        }
        findPosParam(n, e, i) {
          const r = i[e.path.substring(1)];
          if (!r) throw new M(4001, Jd);
          return r;
        }
        findOrReturn(n, e) {
          let i = 0;
          for (const r of e) {
            if (r.path === n.path) return e.splice(i), r;
            i++;
          }
          return n;
        }
      }
      class cz {}
      class hz {
        constructor(n, e, i, r, s, o, a, l) {
          (this.injector = n),
            (this.rootComponentType = e),
            (this.config = i),
            (this.urlTree = r),
            (this.url = s),
            (this.paramsInheritanceStrategy = o),
            (this.relativeLinkResolution = a),
            (this.urlSerializer = l);
        }
        recognize() {
          const n = Zd(
            this.urlTree.root,
            [],
            [],
            this.config.filter((e) => void 0 === e.redirectTo),
            this.relativeLinkResolution
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            n,
            be
          ).pipe(
            q((e) => {
              if (null === e) return null;
              const i = new $d(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  be,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {}
                ),
                r = new ir(i, e),
                s = new vS(this.url, r);
              return this.inheritParamsAndData(s._root), s;
            })
          );
        }
        inheritParamsAndData(n) {
          const e = n.value,
            i = _S(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            n.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(n, e, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.processChildren(n, e, i)
            : this.processSegment(n, e, i, i.segments, r);
        }
        processChildren(n, e, i) {
          return at(Object.keys(i.children)).pipe(
            er((r) => {
              const s = i.children[r],
                o = SS(e, r);
              return this.processSegmentGroup(n, o, s, r);
            }),
            WM((r, s) => (r && s ? (r.push(...s), r) : null)),
            (function OG(t, n = !1) {
              return Ze((e, i) => {
                let r = 0;
                e.subscribe(
                  Ye(i, (s) => {
                    const o = t(s, r++);
                    (o || n) && i.next(s), !o && i.complete();
                  })
                );
              });
            })((r) => null !== r),
            Pd(null),
            qM(),
            q((r) => {
              if (null === r) return null;
              const s = PS(r);
              return (
                (function fz(t) {
                  t.sort((n, e) =>
                    n.value.outlet === be
                      ? -1
                      : e.value.outlet === be
                      ? 1
                      : n.value.outlet.localeCompare(e.value.outlet)
                  );
                })(s),
                s
              );
            })
          );
        }
        processSegment(n, e, i, r, s) {
          return at(e).pipe(
            er((o) =>
              this.processSegmentAgainstRoute(o._injector ?? n, o, i, r, s)
            ),
            Rr((o) => !!o),
            Mi((o) => {
              if (Sg(o)) return RS(i, r, s) ? N([]) : N(null);
              throw o;
            })
          );
        }
        processSegmentAgainstRoute(n, e, i, r, s) {
          if (e.redirectTo || !IS(e, i, r, s)) return N(null);
          let o;
          if ("**" === e.path) {
            const a = r.length > 0 ? KM(r).parameters : {},
              l = NS(i) + r.length;
            o = N({
              snapshot: new $d(
                r,
                a,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                VS(e),
                Gn(e),
                e.component ?? e._loadedComponent ?? null,
                e,
                LS(i),
                l,
                HS(e),
                l
              ),
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            o = TS(i, e, r, n).pipe(
              q(
                ({
                  matched: a,
                  consumedSegments: l,
                  remainingSegments: c,
                  parameters: d,
                }) => {
                  if (!a) return null;
                  const u = NS(i) + l.length;
                  return {
                    snapshot: new $d(
                      l,
                      d,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      VS(e),
                      Gn(e),
                      e.component ?? e._loadedComponent ?? null,
                      e,
                      LS(i),
                      u,
                      HS(e),
                      u
                    ),
                    consumedSegments: l,
                    remainingSegments: c,
                  };
                }
              )
            );
          return o.pipe(
            ht((a) => {
              if (null === a) return N(null);
              const {
                snapshot: l,
                consumedSegments: c,
                remainingSegments: d,
              } = a;
              n = e._injector ?? n;
              const u = e._loadedInjector ?? n,
                f = (function pz(t) {
                  return t.children
                    ? t.children
                    : t.loadChildren
                    ? t._loadedRoutes
                    : [];
                })(e),
                { segmentGroup: p, slicedSegments: m } = Zd(
                  i,
                  c,
                  d,
                  f.filter((v) => void 0 === v.redirectTo),
                  this.relativeLinkResolution
                );
              if (0 === m.length && p.hasChildren())
                return this.processChildren(u, f, p).pipe(
                  q((v) => (null === v ? null : [new ir(l, v)]))
                );
              if (0 === f.length && 0 === m.length) return N([new ir(l, [])]);
              const g = Gn(e) === s;
              return this.processSegment(u, f, p, m, g ? be : s).pipe(
                q((v) => (null === v ? null : [new ir(l, v)]))
              );
            })
          );
        }
      }
      function mz(t) {
        const n = t.value.routeConfig;
        return n && "" === n.path && void 0 === n.redirectTo;
      }
      function PS(t) {
        const n = [],
          e = new Set();
        for (const i of t) {
          if (!mz(i)) {
            n.push(i);
            continue;
          }
          const r = n.find((s) => i.value.routeConfig === s.value.routeConfig);
          void 0 !== r ? (r.children.push(...i.children), e.add(r)) : n.push(i);
        }
        for (const i of e) {
          const r = PS(i.children);
          n.push(new ir(i.value, r));
        }
        return n.filter((i) => !e.has(i));
      }
      function LS(t) {
        let n = t;
        for (; n._sourceSegment; ) n = n._sourceSegment;
        return n;
      }
      function NS(t) {
        let n = t,
          e = n._segmentIndexShift ?? 0;
        for (; n._sourceSegment; )
          (n = n._sourceSegment), (e += n._segmentIndexShift ?? 0);
        return e - 1;
      }
      function VS(t) {
        return t.data || {};
      }
      function HS(t) {
        return t.resolve || {};
      }
      const kg = Symbol("RouteTitle");
      function jS(t) {
        return "string" == typeof t.title || null === t.title;
      }
      function Tg(t) {
        return ht((n) => {
          const e = t(n);
          return e ? at(e).pipe(q(() => n)) : N(n);
        });
      }
      let GS = (() => {
          class t {
            buildTitle(e) {
              let i,
                r = e.root;
              for (; void 0 !== r; )
                (i = this.getResolvedTitleForRoute(r) ?? i),
                  (r = r.children.find((s) => s.outlet === be));
              return i;
            }
            getResolvedTitleForRoute(e) {
              return e.data[kg];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({
              token: t,
              factory: function () {
                return Ge(US);
              },
              providedIn: "root",
            })),
            t
          );
        })(),
        US = (() => {
          class t extends GS {
            constructor(e) {
              super(), (this.title = e);
            }
            updateTitle(e) {
              const i = this.buildTitle(e);
              void 0 !== i && this.title.setTitle(i);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(bd));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      class Ig {}
      class Dz extends class wz {
        shouldDetach(n) {
          return !1;
        }
        store(n, e) {}
        shouldAttach(n) {
          return !1;
        }
        retrieve(n) {
          return null;
        }
        shouldReuseRoute(n, e) {
          return n.routeConfig === e.routeConfig;
        }
      } {}
      const Rg = new C("", { providedIn: "root", factory: () => ({}) }),
        Og = new C("ROUTES");
      let Fg = (() => {
        class t {
          constructor(e, i) {
            (this.injector = e),
              (this.compiler = i),
              (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap());
          }
          loadComponent(e) {
            if (this.componentLoaders.get(e))
              return this.componentLoaders.get(e);
            if (e._loadedComponent) return N(e._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(e);
            const i = tr(e.loadComponent()).pipe(
                it((s) => {
                  this.onLoadEndListener && this.onLoadEndListener(e),
                    (e._loadedComponent = s);
                }),
                Nd(() => {
                  this.componentLoaders.delete(e);
                })
              ),
              r = new lg(i, () => new B()).pipe(ag());
            return this.componentLoaders.set(e, r), r;
          }
          loadChildren(e, i) {
            if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
            if (i._loadedRoutes)
              return N({
                routes: i._loadedRoutes,
                injector: i._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(i);
            const s = this.loadModuleFactoryOrRoutes(i.loadChildren).pipe(
                q((a) => {
                  this.onLoadEndListener && this.onLoadEndListener(i);
                  let l,
                    c,
                    d = !1;
                  Array.isArray(a)
                    ? (c = a)
                    : ((l = a.create(e).injector),
                      (c = QM(l.get(Og, [], J.Self | J.Optional))));
                  return { routes: c.map(Mg), injector: l };
                }),
                Nd(() => {
                  this.childrenLoaders.delete(i);
                })
              ),
              o = new lg(s, () => new B()).pipe(ag());
            return this.childrenLoaders.set(i, o), o;
          }
          loadModuleFactoryOrRoutes(e) {
            return tr(e()).pipe(
              mt((i) =>
                i instanceof kx || Array.isArray(i)
                  ? N(i)
                  : at(this.compiler.compileModuleAsync(i))
              )
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(gt), _(am));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      class Sz {}
      class Ez {
        shouldProcessUrl(n) {
          return !0;
        }
        extract(n) {
          return n;
        }
        merge(n, e) {
          return n;
        }
      }
      function Az(t) {
        throw t;
      }
      function kz(t, n, e) {
        return n.parse("/");
      }
      const Tz = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        Iz = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      function $S() {
        const t = Ge(nS),
          n = Ge(cl),
          e = Ge(Ya),
          i = Ge(gt),
          r = Ge(am),
          s = Ge(Og, { optional: !0 }) ?? [],
          o = Ge(Rg, { optional: !0 }) ?? {},
          a = Ge(US),
          l = Ge(GS, { optional: !0 }),
          c = Ge(Sz, { optional: !0 }),
          d = Ge(Ig, { optional: !0 }),
          u = new Pt(null, t, n, e, i, r, QM(s));
        return (
          c && (u.urlHandlingStrategy = c),
          d && (u.routeReuseStrategy = d),
          (u.titleStrategy = l ?? a),
          (function Rz(t, n) {
            t.errorHandler && (n.errorHandler = t.errorHandler),
              t.malformedUriErrorHandler &&
                (n.malformedUriErrorHandler = t.malformedUriErrorHandler),
              t.onSameUrlNavigation &&
                (n.onSameUrlNavigation = t.onSameUrlNavigation),
              t.paramsInheritanceStrategy &&
                (n.paramsInheritanceStrategy = t.paramsInheritanceStrategy),
              t.relativeLinkResolution &&
                (n.relativeLinkResolution = t.relativeLinkResolution),
              t.urlUpdateStrategy &&
                (n.urlUpdateStrategy = t.urlUpdateStrategy),
              t.canceledNavigationResolution &&
                (n.canceledNavigationResolution =
                  t.canceledNavigationResolution);
          })(o, u),
          u
        );
      }
      let Pt = (() => {
        class t {
          constructor(e, i, r, s, o, a, l) {
            (this.rootComponentType = e),
              (this.urlSerializer = i),
              (this.rootContexts = r),
              (this.location = s),
              (this.config = l),
              (this.lastSuccessfulNavigation = null),
              (this.currentNavigation = null),
              (this.disposed = !1),
              (this.navigationId = 0),
              (this.currentPageId = 0),
              (this.isNgZoneEnabled = !1),
              (this.events = new B()),
              (this.errorHandler = Az),
              (this.malformedUriErrorHandler = kz),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.afterPreactivation = () => N(void 0)),
              (this.urlHandlingStrategy = new Ez()),
              (this.routeReuseStrategy = new Dz()),
              (this.onSameUrlNavigation = "ignore"),
              (this.paramsInheritanceStrategy = "emptyOnly"),
              (this.urlUpdateStrategy = "deferred"),
              (this.relativeLinkResolution = "corrected"),
              (this.canceledNavigationResolution = "replace"),
              (this.configLoader = o.get(Fg)),
              (this.configLoader.onLoadEndListener = (f) =>
                this.triggerEvent(new pU(f))),
              (this.configLoader.onLoadStartListener = (f) =>
                this.triggerEvent(new fU(f))),
              (this.ngModule = o.get(ss)),
              (this.console = o.get(OV));
            const u = o.get(Y);
            (this.isNgZoneEnabled = u instanceof Y && Y.isInAngularZone()),
              this.resetConfig(l),
              (this.currentUrlTree = (function NG() {
                return new ps(new xe([], {}), {}, null);
              })()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = gS(
                this.currentUrlTree,
                this.rootComponentType
              )),
              (this.transitions = new nn({
                id: 0,
                targetPageId: 0,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                extractedUrl: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                urlAfterRedirects: this.urlHandlingStrategy.extract(
                  this.currentUrlTree
                ),
                rawUrl: this.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: "imperative",
                restoredState: null,
                currentSnapshot: this.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: this.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              (this.navigations = this.setupNavigations(this.transitions)),
              this.processNavigations();
          }
          get browserPageId() {
            return this.location.getState()?.ɵrouterPageId;
          }
          setupNavigations(e) {
            const i = this.events;
            return e.pipe(
              ve((r) => 0 !== r.id),
              q((r) => ({
                ...r,
                extractedUrl: this.urlHandlingStrategy.extract(r.rawUrl),
              })),
              ht((r) => {
                let s = !1,
                  o = !1;
                return N(r).pipe(
                  it((a) => {
                    this.currentNavigation = {
                      id: a.id,
                      initialUrl: a.rawUrl,
                      extractedUrl: a.extractedUrl,
                      trigger: a.source,
                      extras: a.extras,
                      previousNavigation: this.lastSuccessfulNavigation
                        ? {
                            ...this.lastSuccessfulNavigation,
                            previousNavigation: null,
                          }
                        : null,
                    };
                  }),
                  ht((a) => {
                    const l = this.browserUrlTree.toString(),
                      c =
                        !this.navigated ||
                        a.extractedUrl.toString() !== l ||
                        l !== this.currentUrlTree.toString();
                    if (
                      ("reload" === this.onSameUrlNavigation || c) &&
                      this.urlHandlingStrategy.shouldProcessUrl(a.rawUrl)
                    )
                      return (
                        WS(a.source) && (this.browserUrlTree = a.extractedUrl),
                        N(a).pipe(
                          ht((u) => {
                            const f = this.transitions.getValue();
                            return (
                              i.next(
                                new _g(
                                  u.id,
                                  this.serializeUrl(u.extractedUrl),
                                  u.source,
                                  u.restoredState
                                )
                              ),
                              f !== this.transitions.getValue()
                                ? ui
                                : Promise.resolve(u)
                            );
                          }),
                          (function lz(t, n, e, i) {
                            return ht((r) =>
                              (function oz(t, n, e, i, r) {
                                return new az(t, n, e, i, r).apply();
                              })(t, n, e, r.extractedUrl, i).pipe(
                                q((s) => ({ ...r, urlAfterRedirects: s }))
                              )
                            );
                          })(
                            this.ngModule.injector,
                            this.configLoader,
                            this.urlSerializer,
                            this.config
                          ),
                          it((u) => {
                            (this.currentNavigation = {
                              ...this.currentNavigation,
                              finalUrl: u.urlAfterRedirects,
                            }),
                              (r.urlAfterRedirects = u.urlAfterRedirects);
                          }),
                          (function _z(t, n, e, i, r, s) {
                            return mt((o) =>
                              (function uz(
                                t,
                                n,
                                e,
                                i,
                                r,
                                s,
                                o = "emptyOnly",
                                a = "legacy"
                              ) {
                                return new hz(t, n, e, i, r, o, a, s)
                                  .recognize()
                                  .pipe(
                                    ht((l) =>
                                      null === l
                                        ? (function dz(t) {
                                            return new Pe((n) => n.error(t));
                                          })(new cz())
                                        : N(l)
                                    )
                                  );
                              })(
                                t,
                                n,
                                e,
                                o.urlAfterRedirects,
                                i.serialize(o.urlAfterRedirects),
                                i,
                                r,
                                s
                              ).pipe(q((a) => ({ ...o, targetSnapshot: a })))
                            );
                          })(
                            this.ngModule.injector,
                            this.rootComponentType,
                            this.config,
                            this.urlSerializer,
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          it((u) => {
                            if (
                              ((r.targetSnapshot = u.targetSnapshot),
                              "eager" === this.urlUpdateStrategy)
                            ) {
                              if (!u.extras.skipLocationChange) {
                                const p = this.urlHandlingStrategy.merge(
                                  u.urlAfterRedirects,
                                  u.rawUrl
                                );
                                this.setBrowserUrl(p, u);
                              }
                              this.browserUrlTree = u.urlAfterRedirects;
                            }
                            const f = new lU(
                              u.id,
                              this.serializeUrl(u.extractedUrl),
                              this.serializeUrl(u.urlAfterRedirects),
                              u.targetSnapshot
                            );
                            i.next(f);
                          })
                        )
                      );
                    if (
                      c &&
                      this.rawUrlTree &&
                      this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                    ) {
                      const {
                          id: f,
                          extractedUrl: p,
                          source: m,
                          restoredState: g,
                          extras: v,
                        } = a,
                        b = new _g(f, this.serializeUrl(p), m, g);
                      i.next(b);
                      const k = gS(p, this.rootComponentType).snapshot;
                      return N(
                        (r = {
                          ...a,
                          targetSnapshot: k,
                          urlAfterRedirects: p,
                          extras: {
                            ...v,
                            skipLocationChange: !1,
                            replaceUrl: !1,
                          },
                        })
                      );
                    }
                    return (this.rawUrlTree = a.rawUrl), a.resolve(null), ui;
                  }),
                  it((a) => {
                    const l = new cU(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot
                    );
                    this.triggerEvent(l);
                  }),
                  q(
                    (a) =>
                      (r = {
                        ...a,
                        guards: OU(
                          a.targetSnapshot,
                          a.currentSnapshot,
                          this.rootContexts
                        ),
                      })
                  ),
                  (function zU(t, n) {
                    return mt((e) => {
                      const {
                        targetSnapshot: i,
                        currentSnapshot: r,
                        guards: {
                          canActivateChecks: s,
                          canDeactivateChecks: o,
                        },
                      } = e;
                      return 0 === o.length && 0 === s.length
                        ? N({ ...e, guardsResult: !0 })
                        : (function $U(t, n, e, i) {
                            return at(t).pipe(
                              mt((r) =>
                                (function ZU(t, n, e, i, r) {
                                  const s =
                                    n && n.routeConfig
                                      ? n.routeConfig.canDeactivate
                                      : null;
                                  return s && 0 !== s.length
                                    ? N(
                                        s.map((a) => {
                                          const l = Qd(a, n, r);
                                          return tr(
                                            (function jU(t) {
                                              return t && hl(t.canDeactivate);
                                            })(l)
                                              ? l.canDeactivate(t, n, e, i)
                                              : l(t, n, e, i)
                                          ).pipe(Rr());
                                        })
                                      ).pipe(Oo())
                                    : N(!0);
                                })(r.component, r.route, e, n, i)
                              ),
                              Rr((r) => !0 !== r, !0)
                            );
                          })(o, i, r, t).pipe(
                            mt((a) =>
                              a &&
                              (function NU(t) {
                                return "boolean" == typeof t;
                              })(a)
                                ? (function WU(t, n, e, i) {
                                    return at(n).pipe(
                                      er((r) =>
                                        Ir(
                                          (function YU(t, n) {
                                            return (
                                              null !== t && n && n(new mU(t)),
                                              N(!0)
                                            );
                                          })(r.route.parent, i),
                                          (function qU(t, n) {
                                            return (
                                              null !== t && n && n(new _U(t)),
                                              N(!0)
                                            );
                                          })(r.route, i),
                                          (function KU(t, n, e) {
                                            const i = n[n.length - 1],
                                              s = n
                                                .slice(0, n.length - 1)
                                                .reverse()
                                                .map((o) =>
                                                  (function FU(t) {
                                                    const n = t.routeConfig
                                                      ? t.routeConfig
                                                          .canActivateChild
                                                      : null;
                                                    return n && 0 !== n.length
                                                      ? { node: t, guards: n }
                                                      : null;
                                                  })(o)
                                                )
                                                .filter((o) => null !== o)
                                                .map((o) =>
                                                  Ji(() =>
                                                    N(
                                                      o.guards.map((l) => {
                                                        const c = Qd(
                                                          l,
                                                          o.node,
                                                          e
                                                        );
                                                        return tr(
                                                          (function HU(t) {
                                                            return (
                                                              t &&
                                                              hl(
                                                                t.canActivateChild
                                                              )
                                                            );
                                                          })(c)
                                                            ? c.canActivateChild(
                                                                i,
                                                                t
                                                              )
                                                            : c(i, t)
                                                        ).pipe(Rr());
                                                      })
                                                    ).pipe(Oo())
                                                  )
                                                );
                                            return N(s).pipe(Oo());
                                          })(t, r.path, e),
                                          (function QU(t, n, e) {
                                            const i = n.routeConfig
                                              ? n.routeConfig.canActivate
                                              : null;
                                            if (!i || 0 === i.length)
                                              return N(!0);
                                            const r = i.map((s) =>
                                              Ji(() => {
                                                const o = Qd(s, n, e);
                                                return tr(
                                                  (function VU(t) {
                                                    return (
                                                      t && hl(t.canActivate)
                                                    );
                                                  })(o)
                                                    ? o.canActivate(n, t)
                                                    : o(n, t)
                                                ).pipe(Rr());
                                              })
                                            );
                                            return N(r).pipe(Oo());
                                          })(t, r.route, e)
                                        )
                                      ),
                                      Rr((r) => !0 !== r, !0)
                                    );
                                  })(i, s, t, n)
                                : N(a)
                            ),
                            q((a) => ({ ...e, guardsResult: a }))
                          );
                    });
                  })(this.ngModule.injector, (a) => this.triggerEvent(a)),
                  it((a) => {
                    if (((r.guardsResult = a.guardsResult), gs(a.guardsResult)))
                      throw bS(0, a.guardsResult);
                    const l = new dU(
                      a.id,
                      this.serializeUrl(a.extractedUrl),
                      this.serializeUrl(a.urlAfterRedirects),
                      a.targetSnapshot,
                      !!a.guardsResult
                    );
                    this.triggerEvent(l);
                  }),
                  ve(
                    (a) =>
                      !!a.guardsResult ||
                      (this.restoreHistory(a),
                      this.cancelNavigationTransition(a, "", 3),
                      !1)
                  ),
                  Tg((a) => {
                    if (a.guards.canActivateChecks.length)
                      return N(a).pipe(
                        it((l) => {
                          const c = new uU(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        }),
                        ht((l) => {
                          let c = !1;
                          return N(l).pipe(
                            (function vz(t, n) {
                              return mt((e) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: r },
                                } = e;
                                if (!r.length) return N(e);
                                let s = 0;
                                return at(r).pipe(
                                  er((o) =>
                                    (function yz(t, n, e, i) {
                                      const r = t.routeConfig,
                                        s = t._resolve;
                                      return (
                                        void 0 !== r?.title &&
                                          !jS(r) &&
                                          (s[kg] = r.title),
                                        (function bz(t, n, e, i) {
                                          const r = (function Cz(t) {
                                            return [
                                              ...Object.keys(t),
                                              ...Object.getOwnPropertySymbols(
                                                t
                                              ),
                                            ];
                                          })(t);
                                          if (0 === r.length) return N({});
                                          const s = {};
                                          return at(r).pipe(
                                            mt((o) =>
                                              (function xz(t, n, e, i) {
                                                const r = Qd(t, n, i);
                                                return tr(
                                                  r.resolve
                                                    ? r.resolve(n, e)
                                                    : r(n, e)
                                                );
                                              })(t[o], n, e, i).pipe(
                                                Rr(),
                                                it((a) => {
                                                  s[o] = a;
                                                })
                                              )
                                            ),
                                            cg(1),
                                            Ld(s),
                                            Mi((o) => (Sg(o) ? ui : fs(o)))
                                          );
                                        })(s, t, n, i).pipe(
                                          q(
                                            (o) => (
                                              (t._resolvedData = o),
                                              (t.data = _S(t, e).resolve),
                                              r &&
                                                jS(r) &&
                                                (t.data[kg] = r.title),
                                              null
                                            )
                                          )
                                        )
                                      );
                                    })(o.route, i, t, n)
                                  ),
                                  it(() => s++),
                                  cg(1),
                                  mt((o) => (s === r.length ? N(e) : ui))
                                );
                              });
                            })(
                              this.paramsInheritanceStrategy,
                              this.ngModule.injector
                            ),
                            it({
                              next: () => (c = !0),
                              complete: () => {
                                c ||
                                  (this.restoreHistory(l),
                                  this.cancelNavigationTransition(l, "", 2));
                              },
                            })
                          );
                        }),
                        it((l) => {
                          const c = new hU(
                            l.id,
                            this.serializeUrl(l.extractedUrl),
                            this.serializeUrl(l.urlAfterRedirects),
                            l.targetSnapshot
                          );
                          this.triggerEvent(c);
                        })
                      );
                  }),
                  Tg((a) => {
                    const l = (c) => {
                      const d = [];
                      c.routeConfig?.loadComponent &&
                        !c.routeConfig._loadedComponent &&
                        d.push(
                          this.configLoader.loadComponent(c.routeConfig).pipe(
                            it((u) => {
                              c.component = u;
                            }),
                            q(() => {})
                          )
                        );
                      for (const u of c.children) d.push(...l(u));
                      return d;
                    };
                    return og(l(a.targetSnapshot.root)).pipe(Pd(), ke(1));
                  }),
                  Tg(() => this.afterPreactivation()),
                  q((a) => {
                    const l = (function xU(t, n, e) {
                      const i = ll(t, n._root, e ? e._root : void 0);
                      return new mS(i, n);
                    })(
                      this.routeReuseStrategy,
                      a.targetSnapshot,
                      a.currentRouterState
                    );
                    return (r = { ...a, targetRouterState: l });
                  }),
                  it((a) => {
                    (this.currentUrlTree = a.urlAfterRedirects),
                      (this.rawUrlTree = this.urlHandlingStrategy.merge(
                        a.urlAfterRedirects,
                        a.rawUrl
                      )),
                      (this.routerState = a.targetRouterState),
                      "deferred" === this.urlUpdateStrategy &&
                        (a.extras.skipLocationChange ||
                          this.setBrowserUrl(this.rawUrlTree, a),
                        (this.browserUrlTree = a.urlAfterRedirects));
                  }),
                  ((t, n, e) =>
                    q(
                      (i) => (
                        new RU(
                          n,
                          i.targetRouterState,
                          i.currentRouterState,
                          e
                        ).activate(t),
                        i
                      )
                    ))(this.rootContexts, this.routeReuseStrategy, (a) =>
                    this.triggerEvent(a)
                  ),
                  it({
                    next() {
                      s = !0;
                    },
                    complete() {
                      s = !0;
                    },
                  }),
                  Nd(() => {
                    s || o || this.cancelNavigationTransition(r, "", 1),
                      this.currentNavigation?.id === r.id &&
                        (this.currentNavigation = null);
                  }),
                  Mi((a) => {
                    if (((o = !0), wS(a))) {
                      xS(a) ||
                        ((this.navigated = !0), this.restoreHistory(r, !0));
                      const l = new zd(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a.message,
                        a.cancellationCode
                      );
                      if ((i.next(l), xS(a))) {
                        const c = this.urlHandlingStrategy.merge(
                            a.url,
                            this.rawUrlTree
                          ),
                          d = {
                            skipLocationChange: r.extras.skipLocationChange,
                            replaceUrl:
                              "eager" === this.urlUpdateStrategy ||
                              WS(r.source),
                          };
                        this.scheduleNavigation(c, "imperative", null, d, {
                          resolve: r.resolve,
                          reject: r.reject,
                          promise: r.promise,
                        });
                      } else r.resolve(!1);
                    } else {
                      this.restoreHistory(r, !0);
                      const l = new hS(
                        r.id,
                        this.serializeUrl(r.extractedUrl),
                        a,
                        r.targetSnapshot ?? void 0
                      );
                      i.next(l);
                      try {
                        r.resolve(this.errorHandler(a));
                      } catch (c) {
                        r.reject(c);
                      }
                    }
                    return ui;
                  })
                );
              })
            );
          }
          resetRootComponentType(e) {
            (this.rootComponentType = e),
              (this.routerState.root.component = this.rootComponentType);
          }
          setTransition(e) {
            this.transitions.next({ ...this.transitions.value, ...e });
          }
          initialNavigation() {
            this.setUpLocationChangeListener(),
              0 === this.navigationId &&
                this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const i = "popstate" === e.type ? "popstate" : "hashchange";
                "popstate" === i &&
                  setTimeout(() => {
                    const r = { replaceUrl: !0 },
                      s = e.state?.navigationId ? e.state : null;
                    if (s) {
                      const a = { ...s };
                      delete a.navigationId,
                        delete a.ɵrouterPageId,
                        0 !== Object.keys(a).length && (r.state = a);
                    }
                    const o = this.parseUrl(e.url);
                    this.scheduleNavigation(o, i, s, r);
                  }, 0);
              }));
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.currentNavigation;
          }
          triggerEvent(e) {
            this.events.next(e);
          }
          resetConfig(e) {
            (this.config = e.map(Mg)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.transitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(e, i = {}) {
            const {
                relativeTo: r,
                queryParams: s,
                fragment: o,
                queryParamsHandling: a,
                preserveFragment: l,
              } = i,
              c = r || this.routerState.root,
              d = l ? this.currentUrlTree.fragment : o;
            let u = null;
            switch (a) {
              case "merge":
                u = { ...this.currentUrlTree.queryParams, ...s };
                break;
              case "preserve":
                u = this.currentUrlTree.queryParams;
                break;
              default:
                u = s || null;
            }
            return (
              null !== u && (u = this.removeEmptyProps(u)),
              nU(c, this.currentUrlTree, e, u, d ?? null)
            );
          }
          navigateByUrl(e, i = { skipLocationChange: !1 }) {
            const r = gs(e) ? e : this.parseUrl(e),
              s = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
            return this.scheduleNavigation(s, "imperative", null, i);
          }
          navigate(e, i = { skipLocationChange: !1 }) {
            return (
              (function Oz(t) {
                for (let n = 0; n < t.length; n++) {
                  if (null == t[n]) throw new M(4008, false);
                }
              })(e),
              this.navigateByUrl(this.createUrlTree(e, i), i)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let i;
            try {
              i = this.urlSerializer.parse(e);
            } catch (r) {
              i = this.malformedUriErrorHandler(r, this.urlSerializer, e);
            }
            return i;
          }
          isActive(e, i) {
            let r;
            if (((r = !0 === i ? { ...Tz } : !1 === i ? { ...Iz } : i), gs(e)))
              return XM(this.currentUrlTree, e, r);
            const s = this.parseUrl(e);
            return XM(this.currentUrlTree, s, r);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((i, r) => {
              const s = e[r];
              return null != s && (i[r] = s), i;
            }, {});
          }
          processNavigations() {
            this.navigations.subscribe(
              (e) => {
                (this.navigated = !0),
                  (this.lastSuccessfulId = e.id),
                  (this.currentPageId = e.targetPageId),
                  this.events.next(
                    new Or(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      this.serializeUrl(this.currentUrlTree)
                    )
                  ),
                  (this.lastSuccessfulNavigation = this.currentNavigation),
                  this.titleStrategy?.updateTitle(this.routerState.snapshot),
                  e.resolve(!0);
              },
              (e) => {
                this.console.warn(`Unhandled Navigation Error: ${e}`);
              }
            );
          }
          scheduleNavigation(e, i, r, s, o) {
            if (this.disposed) return Promise.resolve(!1);
            let a, l, c;
            o
              ? ((a = o.resolve), (l = o.reject), (c = o.promise))
              : (c = new Promise((f, p) => {
                  (a = f), (l = p);
                }));
            const d = ++this.navigationId;
            let u;
            return (
              "computed" === this.canceledNavigationResolution
                ? (0 === this.currentPageId && (r = this.location.getState()),
                  (u =
                    r && r.ɵrouterPageId
                      ? r.ɵrouterPageId
                      : s.replaceUrl || s.skipLocationChange
                      ? this.browserPageId ?? 0
                      : (this.browserPageId ?? 0) + 1))
                : (u = 0),
              this.setTransition({
                id: d,
                targetPageId: u,
                source: i,
                restoredState: r,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.rawUrlTree,
                rawUrl: e,
                extras: s,
                resolve: a,
                reject: l,
                promise: c,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              c.catch((f) => Promise.reject(f))
            );
          }
          setBrowserUrl(e, i) {
            const r = this.urlSerializer.serialize(e),
              s = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, i.targetPageId),
              };
            this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl
              ? this.location.replaceState(r, "", s)
              : this.location.go(r, "", s);
          }
          restoreHistory(e, i = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const r = this.currentPageId - e.targetPageId;
              ("popstate" !== e.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !== this.currentNavigation?.finalUrl) ||
              0 === r
                ? this.currentUrlTree === this.currentNavigation?.finalUrl &&
                  0 === r &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(r);
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          cancelNavigationTransition(e, i, r) {
            const s = new zd(e.id, this.serializeUrl(e.extractedUrl), i, r);
            this.triggerEvent(s), e.resolve(!1);
          }
          generateNgRouterState(e, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: i }
              : { navigationId: e };
          }
        }
        return (
          (t.ɵfac = function (e) {
            Dr();
          }),
          (t.ɵprov = D({
            token: t,
            factory: function () {
              return $S();
            },
            providedIn: "root",
          })),
          t
        );
      })();
      function WS(t) {
        return "imperative" !== t;
      }
      let Pg = (() => {
          class t {
            constructor(e, i, r, s, o) {
              (this.router = e),
                (this.route = i),
                (this.tabIndexAttribute = r),
                (this.renderer = s),
                (this.el = o),
                (this.commands = null),
                (this.onChanges = new B()),
                this.setTabIndexIfNotOnNativeEl("0");
            }
            setTabIndexIfNotOnNativeEl(e) {
              if (null != this.tabIndexAttribute) return;
              const i = this.renderer,
                r = this.el.nativeElement;
              null !== e
                ? i.setAttribute(r, "tabindex", e)
                : i.removeAttribute(r, "tabindex");
            }
            ngOnChanges(e) {
              this.onChanges.next(this);
            }
            set routerLink(e) {
              null != e
                ? ((this.commands = Array.isArray(e) ? e : [e]),
                  this.setTabIndexIfNotOnNativeEl("0"))
                : ((this.commands = null),
                  this.setTabIndexIfNotOnNativeEl(null));
            }
            onClick() {
              if (null === this.urlTree) return !0;
              const e = {
                skipLocationChange: Yi(this.skipLocationChange),
                replaceUrl: Yi(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, e), !0;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Yi(this.preserveFragment),
                  });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(Pt), h(_s), Zt("tabindex"), h(ei), h(T));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
              hostBindings: function (e, i) {
                1 & e &&
                  he("click", function () {
                    return i.onClick();
                  });
              },
              inputs: {
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
                routerLink: "routerLink",
              },
              features: [ct],
            })),
            t
          );
        })(),
        iu = (() => {
          class t {
            constructor(e, i, r) {
              (this.router = e),
                (this.route = i),
                (this.locationStrategy = r),
                (this.commands = null),
                (this.href = null),
                (this.onChanges = new B()),
                (this.subscription = e.events.subscribe((s) => {
                  s instanceof Or && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : null;
            }
            ngOnChanges(e) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(e, i, r, s, o) {
              if (
                0 !== e ||
                i ||
                r ||
                s ||
                o ||
                ("string" == typeof this.target && "_self" != this.target) ||
                null === this.urlTree
              )
                return !0;
              const a = {
                skipLocationChange: Yi(this.skipLocationChange),
                replaceUrl: Yi(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, a), !1;
            }
            updateTargetUrlAndHref() {
              this.href =
                null !== this.urlTree
                  ? this.locationStrategy.prepareExternalUrl(
                      this.router.serializeUrl(this.urlTree)
                    )
                  : null;
            }
            get urlTree() {
              return null === this.commands
                ? null
                : this.router.createUrlTree(this.commands, {
                    relativeTo:
                      void 0 !== this.relativeTo ? this.relativeTo : this.route,
                    queryParams: this.queryParams,
                    fragment: this.fragment,
                    queryParamsHandling: this.queryParamsHandling,
                    preserveFragment: Yi(this.preserveFragment),
                  });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(Pt), h(_s), h(ds));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, i) {
                1 & e &&
                  he("click", function (s) {
                    return i.onClick(
                      s.button,
                      s.ctrlKey,
                      s.shiftKey,
                      s.altKey,
                      s.metaKey
                    );
                  }),
                  2 & e && se("target", i.target)("href", i.href, If);
              },
              inputs: {
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
                relativeTo: "relativeTo",
                routerLink: "routerLink",
              },
              features: [ct],
            })),
            t
          );
        })(),
        qS = (() => {
          class t {
            constructor(e, i, r, s, o, a) {
              (this.router = e),
                (this.element = i),
                (this.renderer = r),
                (this.cdr = s),
                (this.link = o),
                (this.linkWithHref = a),
                (this.classes = []),
                (this.isActive = !1),
                (this.routerLinkActiveOptions = { exact: !1 }),
                (this.isActiveChange = new W()),
                (this.routerEventsSubscription = e.events.subscribe((l) => {
                  l instanceof Or && this.update();
                }));
            }
            ngAfterContentInit() {
              N(this.links.changes, this.linksWithHrefs.changes, N(null))
                .pipe(Ps())
                .subscribe((e) => {
                  this.update(), this.subscribeToEachLinkOnChanges();
                });
            }
            subscribeToEachLinkOnChanges() {
              this.linkInputChangesSubscription?.unsubscribe();
              const e = [
                ...this.links.toArray(),
                ...this.linksWithHrefs.toArray(),
                this.link,
                this.linkWithHref,
              ]
                .filter((i) => !!i)
                .map((i) => i.onChanges);
              this.linkInputChangesSubscription = at(e)
                .pipe(Ps())
                .subscribe((i) => {
                  this.isActive !== this.isLinkActive(this.router)(i) &&
                    this.update();
                });
            }
            set routerLinkActive(e) {
              const i = Array.isArray(e) ? e : e.split(" ");
              this.classes = i.filter((r) => !!r);
            }
            ngOnChanges(e) {
              this.update();
            }
            ngOnDestroy() {
              this.routerEventsSubscription.unsubscribe(),
                this.linkInputChangesSubscription?.unsubscribe();
            }
            update() {
              !this.links ||
                !this.linksWithHrefs ||
                !this.router.navigated ||
                Promise.resolve().then(() => {
                  const e = this.hasActiveLinks();
                  this.isActive !== e &&
                    ((this.isActive = e),
                    this.cdr.markForCheck(),
                    this.classes.forEach((i) => {
                      e
                        ? this.renderer.addClass(this.element.nativeElement, i)
                        : this.renderer.removeClass(
                            this.element.nativeElement,
                            i
                          );
                    }),
                    e && void 0 !== this.ariaCurrentWhenActive
                      ? this.renderer.setAttribute(
                          this.element.nativeElement,
                          "aria-current",
                          this.ariaCurrentWhenActive.toString()
                        )
                      : this.renderer.removeAttribute(
                          this.element.nativeElement,
                          "aria-current"
                        ),
                    this.isActiveChange.emit(e));
                });
            }
            isLinkActive(e) {
              const i = (function Fz(t) {
                return !!t.paths;
              })(this.routerLinkActiveOptions)
                ? this.routerLinkActiveOptions
                : this.routerLinkActiveOptions.exact || !1;
              return (r) => !!r.urlTree && e.isActive(r.urlTree, i);
            }
            hasActiveLinks() {
              const e = this.isLinkActive(this.router);
              return (
                (this.link && e(this.link)) ||
                (this.linkWithHref && e(this.linkWithHref)) ||
                this.links.some(e) ||
                this.linksWithHrefs.some(e)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(Pt),
                h(T),
                h(ei),
                h(Ue),
                h(Pg, 8),
                h(iu, 8)
              );
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [["", "routerLinkActive", ""]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (Ie(r, Pg, 5), Ie(r, iu, 5)), 2 & e)) {
                  let s;
                  Q((s = K())) && (i.links = s),
                    Q((s = K())) && (i.linksWithHrefs = s);
                }
              },
              inputs: {
                routerLinkActiveOptions: "routerLinkActiveOptions",
                ariaCurrentWhenActive: "ariaCurrentWhenActive",
                routerLinkActive: "routerLinkActive",
              },
              outputs: { isActiveChange: "isActiveChange" },
              exportAs: ["routerLinkActive"],
              features: [ct],
            })),
            t
          );
        })();
      class YS {}
      let QS = (() => {
        class t {
          constructor(e, i, r, s, o) {
            (this.router = e),
              (this.injector = r),
              (this.preloadingStrategy = s),
              (this.loader = o);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                ve((e) => e instanceof Or),
                er(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(e, i) {
            const r = [];
            for (const s of i) {
              s.providers &&
                !s._injector &&
                (s._injector = Wc(s.providers, e, `Route: ${s.path}`));
              const o = s._injector ?? e,
                a = s._loadedInjector ?? o;
              (s.loadChildren && !s._loadedRoutes && void 0 === s.canLoad) ||
              (s.loadComponent && !s._loadedComponent)
                ? r.push(this.preloadConfig(o, s))
                : (s.children || s._loadedRoutes) &&
                  r.push(this.processRoutes(a, s.children ?? s._loadedRoutes));
            }
            return at(r).pipe(Ps());
          }
          preloadConfig(e, i) {
            return this.preloadingStrategy.preload(i, () => {
              let r;
              r =
                i.loadChildren && void 0 === i.canLoad
                  ? this.loader.loadChildren(e, i)
                  : N(null);
              const s = r.pipe(
                mt((o) =>
                  null === o
                    ? N(void 0)
                    : ((i._loadedRoutes = o.routes),
                      (i._loadedInjector = o.injector),
                      this.processRoutes(o.injector ?? e, o.routes))
                )
              );
              return i.loadComponent && !i._loadedComponent
                ? at([s, this.loader.loadComponent(i)]).pipe(Ps())
                : s;
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Pt), _(am), _(xr), _(YS), _(Fg));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const KS = new C("");
      let Pz = (() => {
        class t {
          constructor(e, i, r = {}) {
            (this.router = e),
              (this.viewportScroller = i),
              (this.options = r),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (r.scrollPositionRestoration =
                r.scrollPositionRestoration || "disabled"),
              (r.anchorScrolling = r.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.router.events.subscribe((e) => {
              e instanceof _g
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = e.navigationTrigger),
                  (this.restoredId = e.restoredState
                    ? e.restoredState.navigationId
                    : 0))
                : e instanceof Or &&
                  ((this.lastId = e.id),
                  this.scheduleScrollEvent(
                    e,
                    this.router.parseUrl(e.urlAfterRedirects).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.router.events.subscribe((e) => {
              e instanceof fS &&
                (e.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(e.position)
                  : e.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(e.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(e, i) {
            this.router.triggerEvent(
              new fS(
                e,
                "popstate" === this.lastSource
                  ? this.store[this.restoredId]
                  : null,
                i
              )
            );
          }
          ngOnDestroy() {
            this.routerEventsSubscription &&
              this.routerEventsSubscription.unsubscribe(),
              this.scrollEventsSubscription &&
                this.scrollEventsSubscription.unsubscribe();
          }
        }
        return (
          (t.ɵfac = function (e) {
            Dr();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ZS = new C("ROUTER_FORROOT_GUARD"),
        XS = new C(""),
        Lz = [
          Ya,
          { provide: nS, useClass: ug },
          { provide: Pt, useFactory: $S },
          cl,
          {
            provide: _s,
            useFactory: function Nz(t) {
              return t.routerState.root;
            },
            deps: [Pt],
          },
          Fg,
        ];
      function Bz() {
        return new Dw("Router", Pt);
      }
      let Fo = (() => {
        class t {
          constructor(e) {}
          static forRoot(e, i) {
            return {
              ngModule: t,
              providers: [
                Lz,
                [],
                JS(e),
                {
                  provide: ZS,
                  useFactory: Gz,
                  deps: [[Pt, new on(), new Nn()]],
                },
                { provide: Rg, useValue: i || {} },
                i?.useHash
                  ? { provide: ds, useClass: w2 }
                  : { provide: ds, useClass: Yw },
                {
                  provide: KS,
                  useFactory: () => {
                    const t = Ge(Pt),
                      n = Ge(VH),
                      e = Ge(Rg);
                    return (
                      e.scrollOffset && n.setOffset(e.scrollOffset),
                      new Pz(t, n, e)
                    );
                  },
                },
                i?.preloadingStrategy ? Qz(i.preloadingStrategy) : [],
                { provide: Dw, multi: !0, useFactory: Bz },
                i?.initialNavigation ? zz(i) : [],
                [
                  { provide: eE, useFactory: Uz },
                  { provide: om, multi: !0, useExisting: eE },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: t, providers: [JS(e)] };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(ZS, 8));
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({})),
          t
        );
      })();
      function Gz(t) {
        return "guarded";
      }
      function JS(t) {
        return [{ provide: Og, multi: !0, useValue: t }];
      }
      function Uz() {
        const t = Ge(gt);
        return (n) => {
          const e = t.get(as);
          if (n !== e.components[0]) return;
          const i = t.get(Pt),
            r = t.get(tE);
          1 === t.get(Lg) && i.initialNavigation(),
            t.get(XS, null, J.Optional)?.setUpPreloading(),
            t.get(KS, null, J.Optional)?.init(),
            i.resetRootComponentType(e.componentTypes[0]),
            r.next(),
            r.complete();
        };
      }
      const eE = new C("");
      function zz(t) {
        return [
          "disabled" === t.initialNavigation
            ? [
                {
                  provide: Wa,
                  multi: !0,
                  useFactory: () => {
                    const t = Ge(Pt);
                    return () => {
                      t.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: Lg, useValue: 2 },
              ]
            : [],
          "enabledBlocking" === t.initialNavigation
            ? [
                { provide: Lg, useValue: 0 },
                {
                  provide: Wa,
                  multi: !0,
                  deps: [gt],
                  useFactory: (t) => {
                    const n = t.get(C2, Promise.resolve(null));
                    let e = !1;
                    return () =>
                      n.then(
                        () =>
                          new Promise((r) => {
                            const s = t.get(Pt),
                              o = t.get(tE);
                            (function i(r) {
                              t.get(Pt)
                                .events.pipe(
                                  ve(
                                    (o) =>
                                      o instanceof Or ||
                                      o instanceof zd ||
                                      o instanceof hS
                                  ),
                                  q(
                                    (o) =>
                                      o instanceof Or ||
                                      (o instanceof zd &&
                                        (0 === o.code || 1 === o.code) &&
                                        null)
                                  ),
                                  ve((o) => null !== o),
                                  ke(1)
                                )
                                .subscribe(() => {
                                  r();
                                });
                            })(() => {
                              r(!0), (e = !0);
                            }),
                              (s.afterPreactivation = () => (
                                r(!0), e || o.closed ? N(void 0) : o
                              )),
                              s.initialNavigation();
                          })
                      );
                  },
                },
              ]
            : [],
        ];
      }
      const tE = new C("", { factory: () => new B() }),
        Lg = new C("", { providedIn: "root", factory: () => 1 });
      function Qz(t) {
        return [
          QS,
          { provide: XS, useExisting: QS },
          { provide: YS, useExisting: t },
        ];
      }
      class nE {}
      class iE {}
      class rr {
        constructor(n) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            n
              ? (this.lazyInit =
                  "string" == typeof n
                    ? () => {
                        (this.headers = new Map()),
                          n.split("\n").forEach((e) => {
                            const i = e.indexOf(":");
                            if (i > 0) {
                              const r = e.slice(0, i),
                                s = r.toLowerCase(),
                                o = e.slice(i + 1).trim();
                              this.maybeSetNormalizedName(r, s),
                                this.headers.has(s)
                                  ? this.headers.get(s).push(o)
                                  : this.headers.set(s, [o]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(n).forEach((e) => {
                            let i = n[e];
                            const r = e.toLowerCase();
                            "string" == typeof i && (i = [i]),
                              i.length > 0 &&
                                (this.headers.set(r, i),
                                this.maybeSetNormalizedName(e, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(n) {
          return this.init(), this.headers.has(n.toLowerCase());
        }
        get(n) {
          this.init();
          const e = this.headers.get(n.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(n) {
          return this.init(), this.headers.get(n.toLowerCase()) || null;
        }
        append(n, e) {
          return this.clone({ name: n, value: e, op: "a" });
        }
        set(n, e) {
          return this.clone({ name: n, value: e, op: "s" });
        }
        delete(n, e) {
          return this.clone({ name: n, value: e, op: "d" });
        }
        maybeSetNormalizedName(n, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, n);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof rr
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((n) => this.applyUpdate(n)),
              (this.lazyUpdate = null)));
        }
        copyFrom(n) {
          n.init(),
            Array.from(n.headers.keys()).forEach((e) => {
              this.headers.set(e, n.headers.get(e)),
                this.normalizedNames.set(e, n.normalizedNames.get(e));
            });
        }
        clone(n) {
          const e = new rr();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof rr
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([n])),
            e
          );
        }
        applyUpdate(n) {
          const e = n.name.toLowerCase();
          switch (n.op) {
            case "a":
            case "s":
              let i = n.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(n.name, e);
              const r = ("a" === n.op ? this.headers.get(e) : void 0) || [];
              r.push(...i), this.headers.set(e, r);
              break;
            case "d":
              const s = n.value;
              if (s) {
                let o = this.headers.get(e);
                if (!o) return;
                (o = o.filter((a) => -1 === s.indexOf(a))),
                  0 === o.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, o);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(n) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              n(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class Kz {
        encodeKey(n) {
          return rE(n);
        }
        encodeValue(n) {
          return rE(n);
        }
        decodeKey(n) {
          return decodeURIComponent(n);
        }
        decodeValue(n) {
          return decodeURIComponent(n);
        }
      }
      const Xz = /%(\d[a-f0-9])/gi,
        Jz = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function rE(t) {
        return encodeURIComponent(t).replace(Xz, (n, e) => Jz[e] ?? n);
      }
      function ru(t) {
        return `${t}`;
      }
      class Pr {
        constructor(n = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = n.encoder || new Kz()),
            n.fromString)
          ) {
            if (n.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function Zz(t, n) {
              const e = new Map();
              return (
                t.length > 0 &&
                  t
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((r) => {
                      const s = r.indexOf("="),
                        [o, a] =
                          -1 == s
                            ? [n.decodeKey(r), ""]
                            : [
                                n.decodeKey(r.slice(0, s)),
                                n.decodeValue(r.slice(s + 1)),
                              ],
                        l = e.get(o) || [];
                      l.push(a), e.set(o, l);
                    }),
                e
              );
            })(n.fromString, this.encoder);
          } else
            n.fromObject
              ? ((this.map = new Map()),
                Object.keys(n.fromObject).forEach((e) => {
                  const i = n.fromObject[e],
                    r = Array.isArray(i) ? i.map(ru) : [ru(i)];
                  this.map.set(e, r);
                }))
              : (this.map = null);
        }
        has(n) {
          return this.init(), this.map.has(n);
        }
        get(n) {
          this.init();
          const e = this.map.get(n);
          return e ? e[0] : null;
        }
        getAll(n) {
          return this.init(), this.map.get(n) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(n, e) {
          return this.clone({ param: n, value: e, op: "a" });
        }
        appendAll(n) {
          const e = [];
          return (
            Object.keys(n).forEach((i) => {
              const r = n[i];
              Array.isArray(r)
                ? r.forEach((s) => {
                    e.push({ param: i, value: s, op: "a" });
                  })
                : e.push({ param: i, value: r, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(n, e) {
          return this.clone({ param: n, value: e, op: "s" });
        }
        delete(n, e) {
          return this.clone({ param: n, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((n) => {
                const e = this.encoder.encodeKey(n);
                return this.map
                  .get(n)
                  .map((i) => e + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((n) => "" !== n)
              .join("&")
          );
        }
        clone(n) {
          const e = new Pr({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(n)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((n) => this.map.set(n, this.cloneFrom.map.get(n))),
              this.updates.forEach((n) => {
                switch (n.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === n.op ? this.map.get(n.param) : void 0) || [];
                    e.push(ru(n.value)), this.map.set(n.param, e);
                    break;
                  case "d":
                    if (void 0 === n.value) {
                      this.map.delete(n.param);
                      break;
                    }
                    {
                      let i = this.map.get(n.param) || [];
                      const r = i.indexOf(ru(n.value));
                      -1 !== r && i.splice(r, 1),
                        i.length > 0
                          ? this.map.set(n.param, i)
                          : this.map.delete(n.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class e3 {
        constructor() {
          this.map = new Map();
        }
        set(n, e) {
          return this.map.set(n, e), this;
        }
        get(n) {
          return (
            this.map.has(n) || this.map.set(n, n.defaultValue()),
            this.map.get(n)
          );
        }
        delete(n) {
          return this.map.delete(n), this;
        }
        has(n) {
          return this.map.has(n);
        }
        keys() {
          return this.map.keys();
        }
      }
      function sE(t) {
        return typeof ArrayBuffer < "u" && t instanceof ArrayBuffer;
      }
      function oE(t) {
        return typeof Blob < "u" && t instanceof Blob;
      }
      function aE(t) {
        return typeof FormData < "u" && t instanceof FormData;
      }
      class pl {
        constructor(n, e, i, r) {
          let s;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = n.toUpperCase()),
            (function t3(t) {
              switch (t) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== i ? i : null), (s = r))
              : (s = i),
            s &&
              ((this.reportProgress = !!s.reportProgress),
              (this.withCredentials = !!s.withCredentials),
              s.responseType && (this.responseType = s.responseType),
              s.headers && (this.headers = s.headers),
              s.context && (this.context = s.context),
              s.params && (this.params = s.params)),
            this.headers || (this.headers = new rr()),
            this.context || (this.context = new e3()),
            this.params)
          ) {
            const o = this.params.toString();
            if (0 === o.length) this.urlWithParams = e;
            else {
              const a = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + o;
            }
          } else (this.params = new Pr()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : sE(this.body) ||
              oE(this.body) ||
              aE(this.body) ||
              (function n3(t) {
                return (
                  typeof URLSearchParams < "u" && t instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof Pr
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || aE(this.body)
            ? null
            : oE(this.body)
            ? this.body.type || null
            : sE(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof Pr
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(n = {}) {
          const e = n.method || this.method,
            i = n.url || this.url,
            r = n.responseType || this.responseType,
            s = void 0 !== n.body ? n.body : this.body,
            o =
              void 0 !== n.withCredentials
                ? n.withCredentials
                : this.withCredentials,
            a =
              void 0 !== n.reportProgress
                ? n.reportProgress
                : this.reportProgress;
          let l = n.headers || this.headers,
            c = n.params || this.params;
          const d = n.context ?? this.context;
          return (
            void 0 !== n.setHeaders &&
              (l = Object.keys(n.setHeaders).reduce(
                (u, f) => u.set(f, n.setHeaders[f]),
                l
              )),
            n.setParams &&
              (c = Object.keys(n.setParams).reduce(
                (u, f) => u.set(f, n.setParams[f]),
                c
              )),
            new pl(e, i, s, {
              params: c,
              headers: l,
              context: d,
              reportProgress: a,
              responseType: r,
              withCredentials: o,
            })
          );
        }
      }
      var Mt = (() => (
        ((Mt = Mt || {})[(Mt.Sent = 0)] = "Sent"),
        (Mt[(Mt.UploadProgress = 1)] = "UploadProgress"),
        (Mt[(Mt.ResponseHeader = 2)] = "ResponseHeader"),
        (Mt[(Mt.DownloadProgress = 3)] = "DownloadProgress"),
        (Mt[(Mt.Response = 4)] = "Response"),
        (Mt[(Mt.User = 5)] = "User"),
        Mt
      ))();
      class Ng {
        constructor(n, e = 200, i = "OK") {
          (this.headers = n.headers || new rr()),
            (this.status = void 0 !== n.status ? n.status : e),
            (this.statusText = n.statusText || i),
            (this.url = n.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class Bg extends Ng {
        constructor(n = {}) {
          super(n), (this.type = Mt.ResponseHeader);
        }
        clone(n = {}) {
          return new Bg({
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class su extends Ng {
        constructor(n = {}) {
          super(n),
            (this.type = Mt.Response),
            (this.body = void 0 !== n.body ? n.body : null);
        }
        clone(n = {}) {
          return new su({
            body: void 0 !== n.body ? n.body : this.body,
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class lE extends Ng {
        constructor(n) {
          super(n, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${n.url || "(unknown url)"}`
                : `Http failure response for ${n.url || "(unknown url)"}: ${
                    n.status
                  } ${n.statusText}`),
            (this.error = n.error || null);
        }
      }
      function Vg(t, n) {
        return {
          body: n,
          headers: t.headers,
          context: t.context,
          observe: t.observe,
          params: t.params,
          reportProgress: t.reportProgress,
          responseType: t.responseType,
          withCredentials: t.withCredentials,
        };
      }
      let Hg = (() => {
        class t {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, r = {}) {
            let s;
            if (e instanceof pl) s = e;
            else {
              let l, c;
              (l = r.headers instanceof rr ? r.headers : new rr(r.headers)),
                r.params &&
                  (c =
                    r.params instanceof Pr
                      ? r.params
                      : new Pr({ fromObject: r.params })),
                (s = new pl(e, i, void 0 !== r.body ? r.body : null, {
                  headers: l,
                  context: r.context,
                  params: c,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || "json",
                  withCredentials: r.withCredentials,
                }));
            }
            const o = N(s).pipe(er((l) => this.handler.handle(l)));
            if (e instanceof pl || "events" === r.observe) return o;
            const a = o.pipe(ve((l) => l instanceof su));
            switch (r.observe || "body") {
              case "body":
                switch (s.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      q((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      q((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      q((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  default:
                    return a.pipe(q((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request("DELETE", e, i);
          }
          get(e, i = {}) {
            return this.request("GET", e, i);
          }
          head(e, i = {}) {
            return this.request("HEAD", e, i);
          }
          jsonp(e, i) {
            return this.request("JSONP", e, {
              params: new Pr().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, i = {}) {
            return this.request("OPTIONS", e, i);
          }
          patch(e, i, r = {}) {
            return this.request("PATCH", e, Vg(r, i));
          }
          post(e, i, r = {}) {
            return this.request("POST", e, Vg(r, i));
          }
          put(e, i, r = {}) {
            return this.request("PUT", e, Vg(r, i));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(nE));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class cE {
        constructor(n, e) {
          (this.next = n), (this.interceptor = e);
        }
        handle(n) {
          return this.interceptor.intercept(n, this.next);
        }
      }
      const ou = new C("HTTP_INTERCEPTORS");
      let r3 = (() => {
        class t {
          intercept(e, i) {
            return i.handle(e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const s3 = /^\)\]\}',?\n/;
      let dE = (() => {
        class t {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ("JSONP" === e.method)
              throw new Error(
                "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
              );
            return new Pe((i) => {
              const r = this.xhrFactory.build();
              if (
                (r.open(e.method, e.urlWithParams),
                e.withCredentials && (r.withCredentials = !0),
                e.headers.forEach((p, m) => r.setRequestHeader(p, m.join(","))),
                e.headers.has("Accept") ||
                  r.setRequestHeader(
                    "Accept",
                    "application/json, text/plain, */*"
                  ),
                !e.headers.has("Content-Type"))
              ) {
                const p = e.detectContentTypeHeader();
                null !== p && r.setRequestHeader("Content-Type", p);
              }
              if (e.responseType) {
                const p = e.responseType.toLowerCase();
                r.responseType = "json" !== p ? p : "text";
              }
              const s = e.serializeBody();
              let o = null;
              const a = () => {
                  if (null !== o) return o;
                  const p = r.statusText || "OK",
                    m = new rr(r.getAllResponseHeaders()),
                    g =
                      (function o3(t) {
                        return "responseURL" in t && t.responseURL
                          ? t.responseURL
                          : /^X-Request-URL:/m.test(t.getAllResponseHeaders())
                          ? t.getResponseHeader("X-Request-URL")
                          : null;
                      })(r) || e.url;
                  return (
                    (o = new Bg({
                      headers: m,
                      status: r.status,
                      statusText: p,
                      url: g,
                    })),
                    o
                  );
                },
                l = () => {
                  let { headers: p, status: m, statusText: g, url: v } = a(),
                    b = null;
                  204 !== m &&
                    (b = typeof r.response > "u" ? r.responseText : r.response),
                    0 === m && (m = b ? 200 : 0);
                  let k = m >= 200 && m < 300;
                  if ("json" === e.responseType && "string" == typeof b) {
                    const w = b;
                    b = b.replace(s3, "");
                    try {
                      b = "" !== b ? JSON.parse(b) : null;
                    } catch (L) {
                      (b = w), k && ((k = !1), (b = { error: L, text: b }));
                    }
                  }
                  k
                    ? (i.next(
                        new su({
                          body: b,
                          headers: p,
                          status: m,
                          statusText: g,
                          url: v || void 0,
                        })
                      ),
                      i.complete())
                    : i.error(
                        new lE({
                          error: b,
                          headers: p,
                          status: m,
                          statusText: g,
                          url: v || void 0,
                        })
                      );
                },
                c = (p) => {
                  const { url: m } = a(),
                    g = new lE({
                      error: p,
                      status: r.status || 0,
                      statusText: r.statusText || "Unknown Error",
                      url: m || void 0,
                    });
                  i.error(g);
                };
              let d = !1;
              const u = (p) => {
                  d || (i.next(a()), (d = !0));
                  let m = { type: Mt.DownloadProgress, loaded: p.loaded };
                  p.lengthComputable && (m.total = p.total),
                    "text" === e.responseType &&
                      !!r.responseText &&
                      (m.partialText = r.responseText),
                    i.next(m);
                },
                f = (p) => {
                  let m = { type: Mt.UploadProgress, loaded: p.loaded };
                  p.lengthComputable && (m.total = p.total), i.next(m);
                };
              return (
                r.addEventListener("load", l),
                r.addEventListener("error", c),
                r.addEventListener("timeout", c),
                r.addEventListener("abort", c),
                e.reportProgress &&
                  (r.addEventListener("progress", u),
                  null !== s &&
                    r.upload &&
                    r.upload.addEventListener("progress", f)),
                r.send(s),
                i.next({ type: Mt.Sent }),
                () => {
                  r.removeEventListener("error", c),
                    r.removeEventListener("abort", c),
                    r.removeEventListener("load", l),
                    r.removeEventListener("timeout", c),
                    e.reportProgress &&
                      (r.removeEventListener("progress", u),
                      null !== s &&
                        r.upload &&
                        r.upload.removeEventListener("progress", f)),
                    r.readyState !== r.DONE && r.abort();
                }
              );
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(mD));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const jg = new C("XSRF_COOKIE_NAME"),
        Gg = new C("XSRF_HEADER_NAME");
      class uE {}
      let a3 = (() => {
          class t {
            constructor(e, i, r) {
              (this.doc = e),
                (this.platform = i),
                (this.cookieName = r),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const e = this.doc.cookie || "";
              return (
                e !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = rD(e, this.cookieName)),
                  (this.lastCookieString = e)),
                this.lastToken
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z), _(dn), _(jg));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ug = (() => {
          class t {
            constructor(e, i) {
              (this.tokenService = e), (this.headerName = i);
            }
            intercept(e, i) {
              const r = e.url.toLowerCase();
              if (
                "GET" === e.method ||
                "HEAD" === e.method ||
                r.startsWith("http://") ||
                r.startsWith("https://")
              )
                return i.handle(e);
              const s = this.tokenService.getToken();
              return (
                null !== s &&
                  !e.headers.has(this.headerName) &&
                  (e = e.clone({ headers: e.headers.set(this.headerName, s) })),
                i.handle(e)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(uE), _(Gg));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        l3 = (() => {
          class t {
            constructor(e, i) {
              (this.backend = e), (this.injector = i), (this.chain = null);
            }
            handle(e) {
              if (null === this.chain) {
                const i = this.injector.get(ou, []);
                this.chain = i.reduceRight(
                  (r, s) => new cE(r, s),
                  this.backend
                );
              }
              return this.chain.handle(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(iE), _(gt));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        c3 = (() => {
          class t {
            static disable() {
              return {
                ngModule: t,
                providers: [{ provide: Ug, useClass: r3 }],
              };
            }
            static withOptions(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.cookieName ? { provide: jg, useValue: e.cookieName } : [],
                  e.headerName ? { provide: Gg, useValue: e.headerName } : [],
                ],
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({
              providers: [
                Ug,
                { provide: ou, useExisting: Ug, multi: !0 },
                { provide: uE, useClass: a3 },
                { provide: jg, useValue: "XSRF-TOKEN" },
                { provide: Gg, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            t
          );
        })(),
        d3 = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({
              providers: [
                Hg,
                { provide: nE, useClass: l3 },
                dE,
                { provide: iE, useExisting: dE },
              ],
              imports: [
                c3.withOptions({
                  cookieName: "XSRF-TOKEN",
                  headerName: "X-XSRF-TOKEN",
                }),
              ],
            })),
            t
          );
        })();
      const u3 = ["addListener", "removeListener"],
        h3 = ["addEventListener", "removeEventListener"],
        f3 = ["on", "off"];
      function Ei(t, n, e, i) {
        if ((we(e) && ((i = e), (e = void 0)), i))
          return Ei(t, n, e).pipe(Hm(i));
        const [r, s] = (function g3(t) {
          return we(t.addEventListener) && we(t.removeEventListener);
        })(t)
          ? h3.map((o) => (a) => t[o](n, a, e))
          : (function p3(t) {
              return we(t.addListener) && we(t.removeListener);
            })(t)
          ? u3.map(hE(t, n))
          : (function m3(t) {
              return we(t.on) && we(t.off);
            })(t)
          ? f3.map(hE(t, n))
          : [];
        if (!r && Lh(t)) return mt((o) => Ei(o, n, e))(Nt(t));
        if (!r) throw new TypeError("Invalid event target");
        return new Pe((o) => {
          const a = (...l) => o.next(1 < l.length ? l : l[0]);
          return r(a), () => s(a);
        });
      }
      function hE(t, n) {
        return (e) => (i) => t[e](n, i);
      }
      const Lr = new Pe(na),
        v3 = { connector: () => new B() };
      function fE(t, n = v3) {
        const { connector: e } = n;
        return Ze((i, r) => {
          const s = e();
          Nt(
            t(
              (function _3(t) {
                return new Pe((n) => t.subscribe(n));
              })(s)
            )
          ).subscribe(r),
            r.add(i.subscribe(s));
        });
      }
      class C3 extends Ve {
        constructor(n, e) {
          super();
        }
        schedule(n, e = 0) {
          return this;
        }
      }
      const au = {
        setInterval(t, n, ...e) {
          const { delegate: i } = au;
          return i?.setInterval
            ? i.setInterval(t, n, ...e)
            : setInterval(t, n, ...e);
        },
        clearInterval(t) {
          const { delegate: n } = au;
          return (n?.clearInterval || clearInterval)(t);
        },
        delegate: void 0,
      };
      class zg extends C3 {
        constructor(n, e) {
          super(n, e),
            (this.scheduler = n),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(n, e = 0) {
          var i;
          if (this.closed) return this;
          this.state = n;
          const r = this.id,
            s = this.scheduler;
          return (
            null != r && (this.id = this.recycleAsyncId(s, r, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id =
              null !== (i = this.id) && void 0 !== i
                ? i
                : this.requestAsyncId(s, this.id, e)),
            this
          );
        }
        requestAsyncId(n, e, i = 0) {
          return au.setInterval(n.flush.bind(n, this), i);
        }
        recycleAsyncId(n, e, i = 0) {
          if (null != i && this.delay === i && !1 === this.pending) return e;
          null != e && au.clearInterval(e);
        }
        execute(n, e) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const i = this._execute(n, e);
          if (i) return i;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(n, e) {
          let r,
            i = !1;
          try {
            this.work(n);
          } catch (s) {
            (i = !0),
              (r = s || new Error("Scheduled action threw falsy error"));
          }
          if (i) return this.unsubscribe(), r;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: n, scheduler: e } = this,
              { actions: i } = e;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              Fs(i, this),
              null != n && (this.id = this.recycleAsyncId(e, n, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const $g = { now: () => ($g.delegate || Date).now(), delegate: void 0 };
      class ml {
        constructor(n, e = ml.now) {
          (this.schedulerActionCtor = n), (this.now = e);
        }
        schedule(n, e = 0, i) {
          return new this.schedulerActionCtor(this, n).schedule(i, e);
        }
      }
      ml.now = $g.now;
      class Wg extends ml {
        constructor(n, e = ml.now) {
          super(n, e), (this.actions = []), (this._active = !1);
        }
        flush(n) {
          const { actions: e } = this;
          if (this._active) return void e.push(n);
          let i;
          this._active = !0;
          do {
            if ((i = n.execute(n.state, n.delay))) break;
          } while ((n = e.shift()));
          if (((this._active = !1), i)) {
            for (; (n = e.shift()); ) n.unsubscribe();
            throw i;
          }
        }
      }
      const lu = new Wg(zg),
        x3 = lu;
      function pE(t, n) {
        return n
          ? (e) =>
              Ir(
                n.pipe(
                  ke(1),
                  (function w3() {
                    return Ze((t, n) => {
                      t.subscribe(Ye(n, na));
                    });
                  })()
                ),
                e.pipe(pE(t))
              )
          : mt((e, i) => Nt(t(e, i)).pipe(ke(1), Ld(e)));
      }
      function mE(t = 0, n, e = x3) {
        let i = -1;
        return (
          null != n && (ny(n) ? (e = n) : (i = n)),
          new Pe((r) => {
            let s = (function D3(t) {
              return t instanceof Date && !isNaN(t);
            })(t)
              ? +t - e.now()
              : t;
            s < 0 && (s = 0);
            let o = 0;
            return e.schedule(function () {
              r.closed ||
                (r.next(o++), 0 <= i ? this.schedule(void 0, i) : r.complete());
            }, s);
          })
        );
      }
      function cu(t, n = lu) {
        const e = mE(t, n);
        return pE(() => e);
      }
      const gl =
        "Service workers are disabled or not supported by this browser";
      class du {
        constructor(n) {
          if (((this.serviceWorker = n), n)) {
            const i = Ei(n, "controllerchange").pipe(q(() => n.controller)),
              s = Ir(
                Ji(() => N(n.controller)),
                i
              );
            (this.worker = s.pipe(ve((d) => !!d))),
              (this.registration = this.worker.pipe(
                ht(() => n.getRegistration())
              ));
            const c = Ei(n, "message")
              .pipe(q((d) => d.data))
              .pipe(ve((d) => d && d.type))
              .pipe(
                (function b3(t) {
                  return t
                    ? (n) => fE(t)(n)
                    : (n) =>
                        (function y3(t, n) {
                          const e = we(t) ? t : () => t;
                          return we(n)
                            ? fE(n, { connector: e })
                            : (i) => new lg(i, e);
                        })(new B())(n);
                })()
              );
            c.connect(), (this.events = c);
          } else
            this.worker =
              this.events =
              this.registration =
                (function M3(t) {
                  return Ji(() => fs(new Error(t)));
                })(gl);
        }
        postMessage(n, e) {
          return this.worker
            .pipe(
              ke(1),
              it((i) => {
                i.postMessage({ action: n, ...e });
              })
            )
            .toPromise()
            .then(() => {});
        }
        postMessageWithOperation(n, e, i) {
          const r = this.waitForOperationCompleted(i),
            s = this.postMessage(n, e);
          return Promise.all([s, r]).then(([, o]) => o);
        }
        generateNonce() {
          return Math.round(1e7 * Math.random());
        }
        eventsOfType(n) {
          let e;
          return (
            (e =
              "string" == typeof n
                ? (i) => i.type === n
                : (i) => n.includes(i.type)),
            this.events.pipe(ve(e))
          );
        }
        nextEventOfType(n) {
          return this.eventsOfType(n).pipe(ke(1));
        }
        waitForOperationCompleted(n) {
          return this.eventsOfType("OPERATION_COMPLETED")
            .pipe(
              ve((e) => e.nonce === n),
              ke(1),
              q((e) => {
                if (void 0 !== e.result) return e.result;
                throw new Error(e.error);
              })
            )
            .toPromise();
        }
        get isEnabled() {
          return !!this.serviceWorker;
        }
      }
      let S3 = (() => {
          class t {
            constructor(e) {
              if (
                ((this.sw = e),
                (this.subscriptionChanges = new B()),
                !e.isEnabled)
              )
                return (
                  (this.messages = Lr),
                  (this.notificationClicks = Lr),
                  void (this.subscription = Lr)
                );
              (this.messages = this.sw
                .eventsOfType("PUSH")
                .pipe(q((r) => r.data))),
                (this.notificationClicks = this.sw
                  .eventsOfType("NOTIFICATION_CLICK")
                  .pipe(q((r) => r.data))),
                (this.pushManager = this.sw.registration.pipe(
                  q((r) => r.pushManager)
                ));
              const i = this.pushManager.pipe(ht((r) => r.getSubscription()));
              this.subscription = yt(i, this.subscriptionChanges);
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            requestSubscription(e) {
              if (!this.sw.isEnabled) return Promise.reject(new Error(gl));
              const i = { userVisibleOnly: !0 };
              let r = this.decodeBase64(
                  e.serverPublicKey.replace(/_/g, "/").replace(/-/g, "+")
                ),
                s = new Uint8Array(new ArrayBuffer(r.length));
              for (let o = 0; o < r.length; o++) s[o] = r.charCodeAt(o);
              return (
                (i.applicationServerKey = s),
                this.pushManager
                  .pipe(
                    ht((o) => o.subscribe(i)),
                    ke(1)
                  )
                  .toPromise()
                  .then((o) => (this.subscriptionChanges.next(o), o))
              );
            }
            unsubscribe() {
              return this.sw.isEnabled
                ? this.subscription
                    .pipe(
                      ke(1),
                      ht((i) => {
                        if (null === i)
                          throw new Error(
                            "Not subscribed to push notifications."
                          );
                        return i.unsubscribe().then((r) => {
                          if (!r) throw new Error("Unsubscribe failed!");
                          this.subscriptionChanges.next(null);
                        });
                      })
                    )
                    .toPromise()
                : Promise.reject(new Error(gl));
            }
            decodeBase64(e) {
              return atob(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(du));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        E3 = (() => {
          class t {
            constructor(e) {
              if (((this.sw = e), !e.isEnabled))
                return (
                  (this.versionUpdates = Lr),
                  (this.available = Lr),
                  (this.activated = Lr),
                  void (this.unrecoverable = Lr)
                );
              (this.versionUpdates = this.sw.eventsOfType([
                "VERSION_DETECTED",
                "VERSION_INSTALLATION_FAILED",
                "VERSION_READY",
                "NO_NEW_VERSION_DETECTED",
              ])),
                (this.available = this.versionUpdates.pipe(
                  ve((i) => "VERSION_READY" === i.type),
                  q((i) => ({
                    type: "UPDATE_AVAILABLE",
                    current: i.currentVersion,
                    available: i.latestVersion,
                  }))
                )),
                (this.activated = this.sw.eventsOfType("UPDATE_ACTIVATED")),
                (this.unrecoverable = this.sw.eventsOfType(
                  "UNRECOVERABLE_STATE"
                ));
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            checkForUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(gl));
              const e = this.sw.generateNonce();
              return this.sw.postMessageWithOperation(
                "CHECK_FOR_UPDATES",
                { nonce: e },
                e
              );
            }
            activateUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(gl));
              const e = this.sw.generateNonce();
              return this.sw.postMessageWithOperation(
                "ACTIVATE_UPDATE",
                { nonce: e },
                e
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(du));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      class qg {}
      const gE = new C("NGSW_REGISTER_SCRIPT");
      function A3(t, n, e, i) {
        return () => {
          if (!Zi(i) || !("serviceWorker" in navigator) || !1 === e.enabled)
            return;
          let s;
          if (
            (navigator.serviceWorker.addEventListener(
              "controllerchange",
              () => {
                null !== navigator.serviceWorker.controller &&
                  navigator.serviceWorker.controller.postMessage({
                    action: "INITIALIZE",
                  });
              }
            ),
            "function" == typeof e.registrationStrategy)
          )
            s = e.registrationStrategy();
          else {
            const [a, ...l] = (
              e.registrationStrategy || "registerWhenStable:30000"
            ).split(":");
            switch (a) {
              case "registerImmediately":
                s = N(null);
                break;
              case "registerWithDelay":
                s = _E(+l[0] || 0);
                break;
              case "registerWhenStable":
                s = l[0] ? yt(vE(t), _E(+l[0])) : vE(t);
                break;
              default:
                throw new Error(
                  `Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`
                );
            }
          }
          t.get(Y).runOutsideAngular(() =>
            s
              .pipe(ke(1))
              .subscribe(() =>
                navigator.serviceWorker
                  .register(n, { scope: e.scope })
                  .catch((a) =>
                    console.error("Service worker registration failed with:", a)
                  )
              )
          );
        };
      }
      function _E(t) {
        return N(null).pipe(cu(t));
      }
      function vE(t) {
        return t.get(as).isStable.pipe(ve((e) => e));
      }
      function k3(t, n) {
        return new du(
          Zi(n) && !1 !== t.enabled ? navigator.serviceWorker : void 0
        );
      }
      let T3 = (() => {
        class t {
          static register(e, i = {}) {
            return {
              ngModule: t,
              providers: [
                { provide: gE, useValue: e },
                { provide: qg, useValue: i },
                { provide: du, useFactory: k3, deps: [qg, dn] },
                {
                  provide: Wa,
                  useFactory: A3,
                  deps: [gt, gE, qg, dn],
                  multi: !0,
                },
              ],
            };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({ providers: [S3, E3] })),
          t
        );
      })();
      function Ai(t) {
        return !!t && (t instanceof Pe || (we(t.lift) && we(t.subscribe)));
      }
      class I3 extends B {
        constructor(n = 1 / 0, e = 1 / 0, i = $g) {
          super(),
            (this._bufferSize = n),
            (this._windowTime = e),
            (this._timestampProvider = i),
            (this._buffer = []),
            (this._infiniteTimeWindow = !0),
            (this._infiniteTimeWindow = e === 1 / 0),
            (this._bufferSize = Math.max(1, n)),
            (this._windowTime = Math.max(1, e));
        }
        next(n) {
          const {
            isStopped: e,
            _buffer: i,
            _infiniteTimeWindow: r,
            _timestampProvider: s,
            _windowTime: o,
          } = this;
          e || (i.push(n), !r && i.push(s.now() + o)),
            this._trimBuffer(),
            super.next(n);
        }
        _subscribe(n) {
          this._throwIfClosed(), this._trimBuffer();
          const e = this._innerSubscribe(n),
            { _infiniteTimeWindow: i, _buffer: r } = this,
            s = r.slice();
          for (let o = 0; o < s.length && !n.closed; o += i ? 1 : 2)
            n.next(s[o]);
          return this._checkFinalizedStatuses(n), e;
        }
        _trimBuffer() {
          const {
              _bufferSize: n,
              _timestampProvider: e,
              _buffer: i,
              _infiniteTimeWindow: r,
            } = this,
            s = (r ? 1 : 2) * n;
          if ((n < 1 / 0 && s < i.length && i.splice(0, i.length - s), !r)) {
            const o = e.now();
            let a = 0;
            for (let l = 1; l < i.length && i[l] <= o; l += 2) a = l;
            a && i.splice(0, a + 1);
          }
        }
      }
      function yE(t, n, e) {
        let i,
          r = !1;
        return (
          t && "object" == typeof t
            ? ({
                bufferSize: i = 1 / 0,
                windowTime: n = 1 / 0,
                refCount: r = !1,
                scheduler: e,
              } = t)
            : (i = t ?? 1 / 0),
          Bh({
            connector: () => new I3(i, n, e),
            resetOnError: !0,
            resetOnComplete: !1,
            resetOnRefCountZero: r,
          })
        );
      }
      class uu {}
      let bE = (() => {
        class t extends uu {
          getTranslation(e) {
            return N({});
          }
        }
        return (
          (t.ɵfac = (function () {
            let n;
            return function (i) {
              return (n || (n = I(t)))(i || t);
            };
          })()),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Yg {}
      let CE = (() => {
        class t {
          handle(e) {
            return e.key;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Qg(t, n) {
        if (t === n) return !0;
        if (null === t || null === n) return !1;
        if (t != t && n != n) return !0;
        let r,
          s,
          o,
          e = typeof t;
        if (e == typeof n && "object" == e) {
          if (!Array.isArray(t)) {
            if (Array.isArray(n)) return !1;
            for (s in ((o = Object.create(null)), t)) {
              if (!Qg(t[s], n[s])) return !1;
              o[s] = !0;
            }
            for (s in n) if (!(s in o) && typeof n[s] < "u") return !1;
            return !0;
          }
          if (!Array.isArray(n)) return !1;
          if ((r = t.length) == n.length) {
            for (s = 0; s < r; s++) if (!Qg(t[s], n[s])) return !1;
            return !0;
          }
        }
        return !1;
      }
      function Un(t) {
        return typeof t < "u" && null !== t;
      }
      function Kg(t) {
        return t && "object" == typeof t && !Array.isArray(t);
      }
      function xE(t, n) {
        let e = Object.assign({}, t);
        return (
          Kg(t) &&
            Kg(n) &&
            Object.keys(n).forEach((i) => {
              Kg(n[i])
                ? i in t
                  ? (e[i] = xE(t[i], n[i]))
                  : Object.assign(e, { [i]: n[i] })
                : Object.assign(e, { [i]: n[i] });
            }),
          e
        );
      }
      class hu {}
      let wE = (() => {
        class t extends hu {
          constructor() {
            super(...arguments),
              (this.templateMatcher = /{{\s?([^{}\s]*)\s?}}/g);
          }
          interpolate(e, i) {
            let r;
            return (
              (r =
                "string" == typeof e
                  ? this.interpolateString(e, i)
                  : "function" == typeof e
                  ? this.interpolateFunction(e, i)
                  : e),
              r
            );
          }
          getValue(e, i) {
            let r = "string" == typeof i ? i.split(".") : [i];
            i = "";
            do {
              (i += r.shift()),
                !Un(e) || !Un(e[i]) || ("object" != typeof e[i] && r.length)
                  ? r.length
                    ? (i += ".")
                    : (e = void 0)
                  : ((e = e[i]), (i = ""));
            } while (r.length);
            return e;
          }
          interpolateFunction(e, i) {
            return e(i);
          }
          interpolateString(e, i) {
            return i
              ? e.replace(this.templateMatcher, (r, s) => {
                  let o = this.getValue(i, s);
                  return Un(o) ? o : r;
                })
              : e;
          }
        }
        return (
          (t.ɵfac = (function () {
            let n;
            return function (i) {
              return (n || (n = I(t)))(i || t);
            };
          })()),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class fu {}
      let DE = (() => {
        class t extends fu {
          compile(e, i) {
            return e;
          }
          compileTranslations(e, i) {
            return e;
          }
        }
        return (
          (t.ɵfac = (function () {
            let n;
            return function (i) {
              return (n || (n = I(t)))(i || t);
            };
          })()),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class ME {
        constructor() {
          (this.currentLang = this.defaultLang),
            (this.translations = {}),
            (this.langs = []),
            (this.onTranslationChange = new W()),
            (this.onLangChange = new W()),
            (this.onDefaultLangChange = new W());
        }
      }
      const Zg = new C("USE_STORE"),
        Xg = new C("USE_DEFAULT_LANG"),
        Jg = new C("DEFAULT_LANGUAGE"),
        e_ = new C("USE_EXTEND");
      let _l = (() => {
          class t {
            constructor(e, i, r, s, o, a = !0, l = !1, c = !1, d) {
              (this.store = e),
                (this.currentLoader = i),
                (this.compiler = r),
                (this.parser = s),
                (this.missingTranslationHandler = o),
                (this.useDefaultLang = a),
                (this.isolate = l),
                (this.extend = c),
                (this.pending = !1),
                (this._onTranslationChange = new W()),
                (this._onLangChange = new W()),
                (this._onDefaultLangChange = new W()),
                (this._langs = []),
                (this._translations = {}),
                (this._translationRequests = {}),
                d && this.setDefaultLang(d);
            }
            get onTranslationChange() {
              return this.isolate
                ? this._onTranslationChange
                : this.store.onTranslationChange;
            }
            get onLangChange() {
              return this.isolate
                ? this._onLangChange
                : this.store.onLangChange;
            }
            get onDefaultLangChange() {
              return this.isolate
                ? this._onDefaultLangChange
                : this.store.onDefaultLangChange;
            }
            get defaultLang() {
              return this.isolate ? this._defaultLang : this.store.defaultLang;
            }
            set defaultLang(e) {
              this.isolate
                ? (this._defaultLang = e)
                : (this.store.defaultLang = e);
            }
            get currentLang() {
              return this.isolate ? this._currentLang : this.store.currentLang;
            }
            set currentLang(e) {
              this.isolate
                ? (this._currentLang = e)
                : (this.store.currentLang = e);
            }
            get langs() {
              return this.isolate ? this._langs : this.store.langs;
            }
            set langs(e) {
              this.isolate ? (this._langs = e) : (this.store.langs = e);
            }
            get translations() {
              return this.isolate
                ? this._translations
                : this.store.translations;
            }
            set translations(e) {
              this.isolate
                ? (this._translations = e)
                : (this.store.translations = e);
            }
            setDefaultLang(e) {
              if (e === this.defaultLang) return;
              let i = this.retrieveTranslations(e);
              typeof i < "u"
                ? (null == this.defaultLang && (this.defaultLang = e),
                  i.pipe(ke(1)).subscribe((r) => {
                    this.changeDefaultLang(e);
                  }))
                : this.changeDefaultLang(e);
            }
            getDefaultLang() {
              return this.defaultLang;
            }
            use(e) {
              if (e === this.currentLang) return N(this.translations[e]);
              let i = this.retrieveTranslations(e);
              return typeof i < "u"
                ? (this.currentLang || (this.currentLang = e),
                  i.pipe(ke(1)).subscribe((r) => {
                    this.changeLang(e);
                  }),
                  i)
                : (this.changeLang(e), N(this.translations[e]));
            }
            retrieveTranslations(e) {
              let i;
              return (
                (typeof this.translations[e] > "u" || this.extend) &&
                  ((this._translationRequests[e] =
                    this._translationRequests[e] || this.getTranslation(e)),
                  (i = this._translationRequests[e])),
                i
              );
            }
            getTranslation(e) {
              this.pending = !0;
              const i = this.currentLoader.getTranslation(e).pipe(yE(1), ke(1));
              return (
                (this.loadingTranslations = i.pipe(
                  q((r) => this.compiler.compileTranslations(r, e)),
                  yE(1),
                  ke(1)
                )),
                this.loadingTranslations.subscribe({
                  next: (r) => {
                    (this.translations[e] =
                      this.extend && this.translations[e]
                        ? { ...r, ...this.translations[e] }
                        : r),
                      this.updateLangs(),
                      (this.pending = !1);
                  },
                  error: (r) => {
                    this.pending = !1;
                  },
                }),
                i
              );
            }
            setTranslation(e, i, r = !1) {
              (i = this.compiler.compileTranslations(i, e)),
                (this.translations[e] =
                  (r || this.extend) && this.translations[e]
                    ? xE(this.translations[e], i)
                    : i),
                this.updateLangs(),
                this.onTranslationChange.emit({
                  lang: e,
                  translations: this.translations[e],
                });
            }
            getLangs() {
              return this.langs;
            }
            addLangs(e) {
              e.forEach((i) => {
                -1 === this.langs.indexOf(i) && this.langs.push(i);
              });
            }
            updateLangs() {
              this.addLangs(Object.keys(this.translations));
            }
            getParsedResult(e, i, r) {
              let s;
              if (i instanceof Array) {
                let o = {},
                  a = !1;
                for (let l of i)
                  (o[l] = this.getParsedResult(e, l, r)), Ai(o[l]) && (a = !0);
                return a
                  ? jm(i.map((c) => (Ai(o[c]) ? o[c] : N(o[c])))).pipe(
                      q((c) => {
                        let d = {};
                        return (
                          c.forEach((u, f) => {
                            d[i[f]] = u;
                          }),
                          d
                        );
                      })
                    )
                  : o;
              }
              if (
                (e &&
                  (s = this.parser.interpolate(this.parser.getValue(e, i), r)),
                typeof s > "u" &&
                  null != this.defaultLang &&
                  this.defaultLang !== this.currentLang &&
                  this.useDefaultLang &&
                  (s = this.parser.interpolate(
                    this.parser.getValue(
                      this.translations[this.defaultLang],
                      i
                    ),
                    r
                  )),
                typeof s > "u")
              ) {
                let o = { key: i, translateService: this };
                typeof r < "u" && (o.interpolateParams = r),
                  (s = this.missingTranslationHandler.handle(o));
              }
              return typeof s < "u" ? s : i;
            }
            get(e, i) {
              if (!Un(e) || !e.length)
                throw new Error('Parameter "key" required');
              if (this.pending)
                return this.loadingTranslations.pipe(
                  er((r) =>
                    Ai((r = this.getParsedResult(r, e, i))) ? r : N(r)
                  )
                );
              {
                let r = this.getParsedResult(
                  this.translations[this.currentLang],
                  e,
                  i
                );
                return Ai(r) ? r : N(r);
              }
            }
            getStreamOnTranslationChange(e, i) {
              if (!Un(e) || !e.length)
                throw new Error('Parameter "key" required');
              return Ir(
                Ji(() => this.get(e, i)),
                this.onTranslationChange.pipe(
                  ht((r) => {
                    const s = this.getParsedResult(r.translations, e, i);
                    return "function" == typeof s.subscribe ? s : N(s);
                  })
                )
              );
            }
            stream(e, i) {
              if (!Un(e) || !e.length)
                throw new Error('Parameter "key" required');
              return Ir(
                Ji(() => this.get(e, i)),
                this.onLangChange.pipe(
                  ht((r) => {
                    const s = this.getParsedResult(r.translations, e, i);
                    return Ai(s) ? s : N(s);
                  })
                )
              );
            }
            instant(e, i) {
              if (!Un(e) || !e.length)
                throw new Error('Parameter "key" required');
              let r = this.getParsedResult(
                this.translations[this.currentLang],
                e,
                i
              );
              if (Ai(r)) {
                if (e instanceof Array) {
                  let s = {};
                  return (
                    e.forEach((o, a) => {
                      s[e[a]] = e[a];
                    }),
                    s
                  );
                }
                return e;
              }
              return r;
            }
            set(e, i, r = this.currentLang) {
              (this.translations[r][e] = this.compiler.compile(i, r)),
                this.updateLangs(),
                this.onTranslationChange.emit({
                  lang: r,
                  translations: this.translations[r],
                });
            }
            changeLang(e) {
              (this.currentLang = e),
                this.onLangChange.emit({
                  lang: e,
                  translations: this.translations[e],
                }),
                null == this.defaultLang && this.changeDefaultLang(e);
            }
            changeDefaultLang(e) {
              (this.defaultLang = e),
                this.onDefaultLangChange.emit({
                  lang: e,
                  translations: this.translations[e],
                });
            }
            reloadLang(e) {
              return this.resetLang(e), this.getTranslation(e);
            }
            resetLang(e) {
              (this._translationRequests[e] = void 0),
                (this.translations[e] = void 0);
            }
            getBrowserLang() {
              if (typeof window > "u" || typeof window.navigator > "u") return;
              let e = window.navigator.languages
                ? window.navigator.languages[0]
                : null;
              return (
                (e =
                  e ||
                  window.navigator.language ||
                  window.navigator.browserLanguage ||
                  window.navigator.userLanguage),
                typeof e > "u"
                  ? void 0
                  : (-1 !== e.indexOf("-") && (e = e.split("-")[0]),
                    -1 !== e.indexOf("_") && (e = e.split("_")[0]),
                    e)
              );
            }
            getBrowserCultureLang() {
              if (typeof window > "u" || typeof window.navigator > "u") return;
              let e = window.navigator.languages
                ? window.navigator.languages[0]
                : null;
              return (
                (e =
                  e ||
                  window.navigator.language ||
                  window.navigator.browserLanguage ||
                  window.navigator.userLanguage),
                e
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                _(ME),
                _(uu),
                _(fu),
                _(hu),
                _(Yg),
                _(Xg),
                _(Zg),
                _(e_),
                _(Jg)
              );
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        SE = (() => {
          class t {
            constructor(e, i, r) {
              (this.translateService = e),
                (this.element = i),
                (this._ref = r),
                this.onTranslationChangeSub ||
                  (this.onTranslationChangeSub =
                    this.translateService.onTranslationChange.subscribe((s) => {
                      s.lang === this.translateService.currentLang &&
                        this.checkNodes(!0, s.translations);
                    })),
                this.onLangChangeSub ||
                  (this.onLangChangeSub =
                    this.translateService.onLangChange.subscribe((s) => {
                      this.checkNodes(!0, s.translations);
                    })),
                this.onDefaultLangChangeSub ||
                  (this.onDefaultLangChangeSub =
                    this.translateService.onDefaultLangChange.subscribe((s) => {
                      this.checkNodes(!0);
                    }));
            }
            set translate(e) {
              e && ((this.key = e), this.checkNodes());
            }
            set translateParams(e) {
              Qg(this.currentParams, e) ||
                ((this.currentParams = e), this.checkNodes(!0));
            }
            ngAfterViewChecked() {
              this.checkNodes();
            }
            checkNodes(e = !1, i) {
              let r = this.element.nativeElement.childNodes;
              r.length ||
                (this.setContent(this.element.nativeElement, this.key),
                (r = this.element.nativeElement.childNodes));
              for (let s = 0; s < r.length; ++s) {
                let o = r[s];
                if (3 === o.nodeType) {
                  let a;
                  if ((e && (o.lastKey = null), Un(o.lookupKey)))
                    a = o.lookupKey;
                  else if (this.key) a = this.key;
                  else {
                    let l = this.getContent(o),
                      c = l.trim();
                    c.length &&
                      ((o.lookupKey = c),
                      l !== o.currentValue
                        ? ((a = c),
                          (o.originalContent = l || o.originalContent))
                        : o.originalContent
                        ? (a = o.originalContent.trim())
                        : l !== o.currentValue &&
                          ((a = c),
                          (o.originalContent = l || o.originalContent)));
                  }
                  this.updateValue(a, o, i);
                }
              }
            }
            updateValue(e, i, r) {
              if (e) {
                if (i.lastKey === e && this.lastParams === this.currentParams)
                  return;
                this.lastParams = this.currentParams;
                let s = (o) => {
                  o !== e && (i.lastKey = e),
                    i.originalContent ||
                      (i.originalContent = this.getContent(i)),
                    (i.currentValue = Un(o) ? o : i.originalContent || e),
                    this.setContent(
                      i,
                      this.key
                        ? i.currentValue
                        : i.originalContent.replace(e, i.currentValue)
                    ),
                    this._ref.markForCheck();
                };
                if (Un(r)) {
                  let o = this.translateService.getParsedResult(
                    r,
                    e,
                    this.currentParams
                  );
                  Ai(o) ? o.subscribe({ next: s }) : s(o);
                } else
                  this.translateService.get(e, this.currentParams).subscribe(s);
              }
            }
            getContent(e) {
              return Un(e.textContent) ? e.textContent : e.data;
            }
            setContent(e, i) {
              Un(e.textContent) ? (e.textContent = i) : (e.data = i);
            }
            ngOnDestroy() {
              this.onLangChangeSub && this.onLangChangeSub.unsubscribe(),
                this.onDefaultLangChangeSub &&
                  this.onDefaultLangChangeSub.unsubscribe(),
                this.onTranslationChangeSub &&
                  this.onTranslationChangeSub.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(_l), h(T), h(Ue));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "translate", ""],
                ["", "ngx-translate", ""],
              ],
              inputs: {
                translate: "translate",
                translateParams: "translateParams",
              },
            })),
            t
          );
        })(),
        vl = (() => {
          class t {
            static forRoot(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: uu, useClass: bE },
                  e.compiler || { provide: fu, useClass: DE },
                  e.parser || { provide: hu, useClass: wE },
                  e.missingTranslationHandler || { provide: Yg, useClass: CE },
                  ME,
                  { provide: Zg, useValue: e.isolate },
                  { provide: Xg, useValue: e.useDefaultLang },
                  { provide: e_, useValue: e.extend },
                  { provide: Jg, useValue: e.defaultLanguage },
                  _l,
                ],
              };
            }
            static forChild(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: uu, useClass: bE },
                  e.compiler || { provide: fu, useClass: DE },
                  e.parser || { provide: hu, useClass: wE },
                  e.missingTranslationHandler || { provide: Yg, useClass: CE },
                  { provide: Zg, useValue: e.isolate },
                  { provide: Xg, useValue: e.useDefaultLang },
                  { provide: e_, useValue: e.extend },
                  { provide: Jg, useValue: e.defaultLanguage },
                  _l,
                ],
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })();
      class EE {}
      const sr = "*";
      function ft(t, n) {
        return { type: 7, name: t, definitions: n, options: {} };
      }
      function Re(t, n = null) {
        return { type: 4, styles: n, timings: t };
      }
      function AE(t, n = null) {
        return { type: 3, steps: t, options: n };
      }
      function kE(t, n = null) {
        return { type: 2, steps: t, options: n };
      }
      function j(t) {
        return { type: 6, styles: t, offset: null };
      }
      function pe(t, n, e) {
        return { type: 0, name: t, styles: n, options: e };
      }
      function Ee(t, n, e = null) {
        return { type: 1, expr: t, animation: n, options: e };
      }
      function pu(t = null) {
        return { type: 9, options: t };
      }
      function mu(t, n, e = null) {
        return { type: 11, selector: t, animation: n, options: e };
      }
      function TE(t) {
        Promise.resolve(null).then(t);
      }
      class yl {
        constructor(n = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = n + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          TE(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((n) => n()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(n) {
          this._position = this.totalTime ? n * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(n) {
          const e = "start" == n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class IE {
        constructor(n) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = n);
          let e = 0,
            i = 0,
            r = 0;
          const s = this.players.length;
          0 == s
            ? TE(() => this._onFinish())
            : this.players.forEach((o) => {
                o.onDone(() => {
                  ++e == s && this._onFinish();
                }),
                  o.onDestroy(() => {
                    ++i == s && this._onDestroy();
                  }),
                  o.onStart(() => {
                    ++r == s && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (o, a) => Math.max(o, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((n) => n.init());
        }
        onStart(n) {
          this._onStartFns.push(n);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((n) => n()),
            (this._onStartFns = []));
        }
        onDone(n) {
          this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((n) => n.play());
        }
        pause() {
          this.players.forEach((n) => n.pause());
        }
        restart() {
          this.players.forEach((n) => n.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((n) => n.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((n) => n.destroy()),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((n) => n.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(n) {
          const e = n * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const n = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != n ? n.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((n) => {
            n.beforeDestroy && n.beforeDestroy();
          });
        }
        triggerCallback(n) {
          const e = "start" == n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      function RE(t) {
        return new M(3e3, !1);
      }
      function f$() {
        return typeof window < "u" && typeof window.document < "u";
      }
      function n_() {
        return (
          typeof process < "u" &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function Nr(t) {
        switch (t.length) {
          case 0:
            return new yl();
          case 1:
            return t[0];
          default:
            return new IE(t);
        }
      }
      function OE(t, n, e, i, r = new Map(), s = new Map()) {
        const o = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((d) => {
            const u = d.get("offset"),
              f = u == l,
              p = (f && c) || new Map();
            d.forEach((m, g) => {
              let v = g,
                b = m;
              if ("offset" !== g)
                switch (((v = n.normalizePropertyName(v, o)), b)) {
                  case "!":
                    b = r.get(g);
                    break;
                  case sr:
                    b = s.get(g);
                    break;
                  default:
                    b = n.normalizeStyleValue(g, v, b, o);
                }
              p.set(v, b);
            }),
              f || a.push(p),
              (c = p),
              (l = u);
          }),
          o.length)
        )
          throw (function t$(t) {
            return new M(3502, !1);
          })();
        return a;
      }
      function i_(t, n, e, i) {
        switch (n) {
          case "start":
            t.onStart(() => i(e && r_(e, "start", t)));
            break;
          case "done":
            t.onDone(() => i(e && r_(e, "done", t)));
            break;
          case "destroy":
            t.onDestroy(() => i(e && r_(e, "destroy", t)));
        }
      }
      function r_(t, n, e) {
        const s = s_(
            t.element,
            t.triggerName,
            t.fromState,
            t.toState,
            n || t.phaseName,
            e.totalTime ?? t.totalTime,
            !!e.disabled
          ),
          o = t._data;
        return null != o && (s._data = o), s;
      }
      function s_(t, n, e, i, r = "", s = 0, o) {
        return {
          element: t,
          triggerName: n,
          fromState: e,
          toState: i,
          phaseName: r,
          totalTime: s,
          disabled: !!o,
        };
      }
      function wn(t, n, e) {
        let i = t.get(n);
        return i || t.set(n, (i = e)), i;
      }
      function FE(t) {
        const n = t.indexOf(":");
        return [t.substring(1, n), t.slice(n + 1)];
      }
      let o_ = (t, n) => !1,
        PE = (t, n, e) => [],
        LE = null;
      function a_(t) {
        const n = t.parentNode || t.host;
        return n === LE ? null : n;
      }
      (n_() || typeof Element < "u") &&
        (f$()
          ? ((LE = (() => document.documentElement)()),
            (o_ = (t, n) => {
              for (; n; ) {
                if (n === t) return !0;
                n = a_(n);
              }
              return !1;
            }))
          : (o_ = (t, n) => t.contains(n)),
        (PE = (t, n, e) => {
          if (e) return Array.from(t.querySelectorAll(n));
          const i = t.querySelector(n);
          return i ? [i] : [];
        }));
      let ys = null,
        NE = !1;
      const BE = o_,
        VE = PE;
      let HE = (() => {
          class t {
            validateStyleProperty(e) {
              return (function m$(t) {
                ys ||
                  ((ys =
                    (function g$() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (NE = !!ys.style && "WebkitAppearance" in ys.style));
                let n = !0;
                return (
                  ys.style &&
                    !(function p$(t) {
                      return "ebkit" == t.substring(1, 6);
                    })(t) &&
                    ((n = t in ys.style),
                    !n &&
                      NE &&
                      (n =
                        "Webkit" + t.charAt(0).toUpperCase() + t.slice(1) in
                        ys.style)),
                  n
                );
              })(e);
            }
            matchesElement(e, i) {
              return !1;
            }
            containsElement(e, i) {
              return BE(e, i);
            }
            getParentElement(e) {
              return a_(e);
            }
            query(e, i, r) {
              return VE(e, i, r);
            }
            computeStyle(e, i, r) {
              return r || "";
            }
            animate(e, i, r, s, o, a = [], l) {
              return new yl(r, s);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        l_ = (() => {
          class t {}
          return (t.NOOP = new HE()), t;
        })();
      const c_ = "ng-enter",
        gu = "ng-leave",
        _u = "ng-trigger",
        vu = ".ng-trigger",
        GE = "ng-animating",
        d_ = ".ng-animating";
      function Br(t) {
        if ("number" == typeof t) return t;
        const n = t.match(/^(-?[\.\d]+)(m?s)/);
        return !n || n.length < 2 ? 0 : u_(parseFloat(n[1]), n[2]);
      }
      function u_(t, n) {
        return "s" === n ? 1e3 * t : t;
      }
      function yu(t, n, e) {
        return t.hasOwnProperty("duration")
          ? t
          : (function y$(t, n, e) {
              let r,
                s = 0,
                o = "";
              if ("string" == typeof t) {
                const a = t.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return n.push(RE()), { duration: 0, delay: 0, easing: "" };
                r = u_(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (s = u_(parseFloat(l), a[4]));
                const c = a[5];
                c && (o = c);
              } else r = t;
              if (!e) {
                let a = !1,
                  l = n.length;
                r < 0 &&
                  (n.push(
                    (function O3() {
                      return new M(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  s < 0 &&
                    (n.push(
                      (function F3() {
                        return new M(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && n.splice(l, 0, RE());
              }
              return { duration: r, delay: s, easing: o };
            })(t, n, e);
      }
      function bl(t, n = {}) {
        return (
          Object.keys(t).forEach((e) => {
            n[e] = t[e];
          }),
          n
        );
      }
      function UE(t) {
        const n = new Map();
        return (
          Object.keys(t).forEach((e) => {
            n.set(e, t[e]);
          }),
          n
        );
      }
      function Vr(t, n = new Map(), e) {
        if (e) for (let [i, r] of e) n.set(i, r);
        for (let [i, r] of t) n.set(i, r);
        return n;
      }
      function $E(t, n, e) {
        return e ? n + ":" + e + ";" : "";
      }
      function WE(t) {
        let n = "";
        for (let e = 0; e < t.style.length; e++) {
          const i = t.style.item(e);
          n += $E(0, i, t.style.getPropertyValue(i));
        }
        for (const e in t.style)
          t.style.hasOwnProperty(e) &&
            !e.startsWith("_") &&
            (n += $E(0, w$(e), t.style[e]));
        t.setAttribute("style", n);
      }
      function ki(t, n, e) {
        t.style &&
          (n.forEach((i, r) => {
            const s = f_(r);
            e && !e.has(r) && e.set(r, t.style[s]), (t.style[s] = i);
          }),
          n_() && WE(t));
      }
      function bs(t, n) {
        t.style &&
          (n.forEach((e, i) => {
            const r = f_(i);
            t.style[r] = "";
          }),
          n_() && WE(t));
      }
      function Cl(t) {
        return Array.isArray(t) ? (1 == t.length ? t[0] : kE(t)) : t;
      }
      const h_ = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function qE(t) {
        let n = [];
        if ("string" == typeof t) {
          let e;
          for (; (e = h_.exec(t)); ) n.push(e[1]);
          h_.lastIndex = 0;
        }
        return n;
      }
      function bu(t, n, e) {
        const i = t.toString(),
          r = i.replace(h_, (s, o) => {
            let a = n[o];
            return (
              null == a &&
                (e.push(
                  (function L3(t) {
                    return new M(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return r == i ? t : r;
      }
      function Cu(t) {
        const n = [];
        let e = t.next();
        for (; !e.done; ) n.push(e.value), (e = t.next());
        return n;
      }
      const x$ = /-+([a-z0-9])/g;
      function f_(t) {
        return t.replace(x$, (...n) => n[1].toUpperCase());
      }
      function w$(t) {
        return t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function Dn(t, n, e) {
        switch (n.type) {
          case 7:
            return t.visitTrigger(n, e);
          case 0:
            return t.visitState(n, e);
          case 1:
            return t.visitTransition(n, e);
          case 2:
            return t.visitSequence(n, e);
          case 3:
            return t.visitGroup(n, e);
          case 4:
            return t.visitAnimate(n, e);
          case 5:
            return t.visitKeyframes(n, e);
          case 6:
            return t.visitStyle(n, e);
          case 8:
            return t.visitReference(n, e);
          case 9:
            return t.visitAnimateChild(n, e);
          case 10:
            return t.visitAnimateRef(n, e);
          case 11:
            return t.visitQuery(n, e);
          case 12:
            return t.visitStagger(n, e);
          default:
            throw (function N3(t) {
              return new M(3004, !1);
            })();
        }
      }
      function YE(t, n) {
        return window.getComputedStyle(t)[n];
      }
      function k$(t, n) {
        const e = [];
        return (
          "string" == typeof t
            ? t.split(/\s*,\s*/).forEach((i) =>
                (function T$(t, n, e) {
                  if (":" == t[0]) {
                    const l = (function I$(t, n) {
                      switch (t) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            n.push(
                              (function Z3(t) {
                                return new M(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(t, e);
                    if ("function" == typeof l) return void n.push(l);
                    t = l;
                  }
                  const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        (function K3(t) {
                          return new M(3015, !1);
                        })()
                      ),
                      n
                    );
                  const r = i[1],
                    s = i[2],
                    o = i[3];
                  n.push(QE(r, o));
                  "<" == s[0] && !("*" == r && "*" == o) && n.push(QE(o, r));
                })(i, e, n)
              )
            : e.push(t),
          e
        );
      }
      const Mu = new Set(["true", "1"]),
        Su = new Set(["false", "0"]);
      function QE(t, n) {
        const e = Mu.has(t) || Su.has(t),
          i = Mu.has(n) || Su.has(n);
        return (r, s) => {
          let o = "*" == t || t == r,
            a = "*" == n || n == s;
          return (
            !o && e && "boolean" == typeof r && (o = r ? Mu.has(t) : Su.has(t)),
            !a && i && "boolean" == typeof s && (a = s ? Mu.has(n) : Su.has(n)),
            o && a
          );
        };
      }
      const R$ = new RegExp("s*:selfs*,?", "g");
      function p_(t, n, e, i) {
        return new O$(t).build(n, e, i);
      }
      class O$ {
        constructor(n) {
          this._driver = n;
        }
        build(n, e, i) {
          const r = new L$(e);
          return this._resetContextStyleTimingState(r), Dn(this, Cl(n), r);
        }
        _resetContextStyleTimingState(n) {
          (n.currentQuerySelector = ""),
            (n.collectedStyles = new Map()),
            n.collectedStyles.set("", new Map()),
            (n.currentTime = 0);
        }
        visitTrigger(n, e) {
          let i = (e.queryCount = 0),
            r = (e.depCount = 0);
          const s = [],
            o = [];
          return (
            "@" == n.name.charAt(0) &&
              e.errors.push(
                (function V3() {
                  return new M(3006, !1);
                })()
              ),
            n.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((d) => {
                    (l.name = d), s.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (i += l.queryCount), (r += l.depCount), o.push(l);
              } else
                e.errors.push(
                  (function H3() {
                    return new M(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: n.name,
              states: s,
              transitions: o,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(n, e) {
          const i = this.visitStyle(n.styles, e),
            r = (n.options && n.options.params) || null;
          if (i.containsDynamicStyles) {
            const s = new Set(),
              o = r || {};
            i.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  qE(l).forEach((c) => {
                    o.hasOwnProperty(c) || s.add(c);
                  });
                });
            }),
              s.size &&
                (Cu(s.values()),
                e.errors.push(
                  (function j3(t, n) {
                    return new M(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: n.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(n, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = Dn(this, Cl(n.animation), e);
          return {
            type: 1,
            matchers: k$(n.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: Cs(n.options),
          };
        }
        visitSequence(n, e) {
          return {
            type: 2,
            steps: n.steps.map((i) => Dn(this, i, e)),
            options: Cs(n.options),
          };
        }
        visitGroup(n, e) {
          const i = e.currentTime;
          let r = 0;
          const s = n.steps.map((o) => {
            e.currentTime = i;
            const a = Dn(this, o, e);
            return (r = Math.max(r, e.currentTime)), a;
          });
          return (
            (e.currentTime = r), { type: 3, steps: s, options: Cs(n.options) }
          );
        }
        visitAnimate(n, e) {
          const i = (function B$(t, n) {
            if (t.hasOwnProperty("duration")) return t;
            if ("number" == typeof t) return m_(yu(t, n).duration, 0, "");
            const e = t;
            if (
              e
                .split(/\s+/)
                .some((s) => "{" == s.charAt(0) && "{" == s.charAt(1))
            ) {
              const s = m_(0, 0, "");
              return (s.dynamic = !0), (s.strValue = e), s;
            }
            const r = yu(e, n);
            return m_(r.duration, r.delay, r.easing);
          })(n.timings, e.errors);
          e.currentAnimateTimings = i;
          let r,
            s = n.styles ? n.styles : j({});
          if (5 == s.type) r = this.visitKeyframes(s, e);
          else {
            let o = n.styles,
              a = !1;
            if (!o) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (o = j(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(o, e);
            (l.isEmptyStep = a), (r = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(n, e) {
          const i = this._makeStyleAst(n, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(n, e) {
          const i = [],
            r = Array.isArray(n.styles) ? n.styles : [n.styles];
          for (let a of r)
            "string" == typeof a
              ? a === sr
                ? i.push(a)
                : e.errors.push(new M(3002, !1))
              : i.push(UE(a));
          let s = !1,
            o = null;
          return (
            i.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((o = a.get("easing")), a.delete("easing")),
                !s)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    s = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: o,
              offset: n.offset,
              containsDynamicStyles: s,
              options: null,
            }
          );
        }
        _validateStyleAst(n, e) {
          const i = e.currentAnimateTimings;
          let r = e.currentTime,
            s = e.currentTime;
          i && s > 0 && (s -= i.duration + i.delay),
            n.styles.forEach((o) => {
              "string" != typeof o &&
                o.forEach((a, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    d = c.get(l);
                  let u = !0;
                  d &&
                    (s != r &&
                      s >= d.startTime &&
                      r <= d.endTime &&
                      (e.errors.push(
                        (function U3(t, n, e, i, r) {
                          return new M(3010, !1);
                        })()
                      ),
                      (u = !1)),
                    (s = d.startTime)),
                    u && c.set(l, { startTime: s, endTime: r }),
                    e.options &&
                      (function C$(t, n, e) {
                        const i = n.params || {},
                          r = qE(t);
                        r.length &&
                          r.forEach((s) => {
                            i.hasOwnProperty(s) ||
                              e.push(
                                (function P3(t) {
                                  return new M(3001, !1);
                                })()
                              );
                          });
                      })(a, e.options, e.errors);
                });
            });
        }
        visitKeyframes(n, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function z3() {
                  return new M(3011, !1);
                })()
              ),
              i
            );
          let s = 0;
          const o = [];
          let a = !1,
            l = !1,
            c = 0;
          const d = n.steps.map((b) => {
            const k = this._makeStyleAst(b, e);
            let w =
                null != k.offset
                  ? k.offset
                  : (function N$(t) {
                      if ("string" == typeof t) return null;
                      let n = null;
                      if (Array.isArray(t))
                        t.forEach((e) => {
                          if (e instanceof Map && e.has("offset")) {
                            const i = e;
                            (n = parseFloat(i.get("offset"))),
                              i.delete("offset");
                          }
                        });
                      else if (t instanceof Map && t.has("offset")) {
                        const e = t;
                        (n = parseFloat(e.get("offset"))), e.delete("offset");
                      }
                      return n;
                    })(k.styles),
              L = 0;
            return (
              null != w && (s++, (L = k.offset = w)),
              (l = l || L < 0 || L > 1),
              (a = a || L < c),
              (c = L),
              o.push(L),
              k
            );
          });
          l &&
            e.errors.push(
              (function $3() {
                return new M(3012, !1);
              })()
            ),
            a &&
              e.errors.push(
                (function W3() {
                  return new M(3200, !1);
                })()
              );
          const u = n.steps.length;
          let f = 0;
          s > 0 && s < u
            ? e.errors.push(
                (function q3() {
                  return new M(3202, !1);
                })()
              )
            : 0 == s && (f = 1 / (u - 1));
          const p = u - 1,
            m = e.currentTime,
            g = e.currentAnimateTimings,
            v = g.duration;
          return (
            d.forEach((b, k) => {
              const w = f > 0 ? (k == p ? 1 : f * k) : o[k],
                L = w * v;
              (e.currentTime = m + g.delay + L),
                (g.duration = L),
                this._validateStyleAst(b, e),
                (b.offset = w),
                i.styles.push(b);
            }),
            i
          );
        }
        visitReference(n, e) {
          return {
            type: 8,
            animation: Dn(this, Cl(n.animation), e),
            options: Cs(n.options),
          };
        }
        visitAnimateChild(n, e) {
          return e.depCount++, { type: 9, options: Cs(n.options) };
        }
        visitAnimateRef(n, e) {
          return {
            type: 10,
            animation: this.visitReference(n.animation, e),
            options: Cs(n.options),
          };
        }
        visitQuery(n, e) {
          const i = e.currentQuerySelector,
            r = n.options || {};
          e.queryCount++, (e.currentQuery = n);
          const [s, o] = (function F$(t) {
            const n = !!t.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              n && (t = t.replace(R$, "")),
              (t = t
                .replace(/@\*/g, vu)
                .replace(/@\w+/g, (e) => vu + "-" + e.slice(1))
                .replace(/:animating/g, d_)),
              [t, n]
            );
          })(n.selector);
          (e.currentQuerySelector = i.length ? i + " " + s : s),
            wn(e.collectedStyles, e.currentQuerySelector, new Map());
          const a = Dn(this, Cl(n.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: s,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: o,
              animation: a,
              originalSelector: n.selector,
              options: Cs(n.options),
            }
          );
        }
        visitStagger(n, e) {
          e.currentQuery ||
            e.errors.push(
              (function Y3() {
                return new M(3013, !1);
              })()
            );
          const i =
            "full" === n.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : yu(n.timings, e.errors, !0);
          return {
            type: 12,
            animation: Dn(this, Cl(n.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class L$ {
        constructor(n) {
          (this.errors = n),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function Cs(t) {
        return (
          t
            ? (t = bl(t)).params &&
              (t.params = (function P$(t) {
                return t ? bl(t) : null;
              })(t.params))
            : (t = {}),
          t
        );
      }
      function m_(t, n, e) {
        return { duration: t, delay: n, easing: e };
      }
      function g_(t, n, e, i, r, s, o = null, a = !1) {
        return {
          type: 1,
          element: t,
          keyframes: n,
          preStyleProps: e,
          postStyleProps: i,
          duration: r,
          delay: s,
          totalTime: r + s,
          easing: o,
          subTimeline: a,
        };
      }
      class Eu {
        constructor() {
          this._map = new Map();
        }
        get(n) {
          return this._map.get(n) || [];
        }
        append(n, e) {
          let i = this._map.get(n);
          i || this._map.set(n, (i = [])), i.push(...e);
        }
        has(n) {
          return this._map.has(n);
        }
        clear() {
          this._map.clear();
        }
      }
      const j$ = new RegExp(":enter", "g"),
        U$ = new RegExp(":leave", "g");
      function __(t, n, e, i, r, s = new Map(), o = new Map(), a, l, c = []) {
        return new z$().buildKeyframes(t, n, e, i, r, s, o, a, l, c);
      }
      class z$ {
        buildKeyframes(n, e, i, r, s, o, a, l, c, d = []) {
          c = c || new Eu();
          const u = new v_(n, e, c, r, s, d, []);
          u.options = l;
          const f = l.delay ? Br(l.delay) : 0;
          u.currentTimeline.delayNextStep(f),
            u.currentTimeline.setStyles([o], null, u.errors, l),
            Dn(this, i, u);
          const p = u.timelines.filter((m) => m.containsAnimation());
          if (p.length && a.size) {
            let m;
            for (let g = p.length - 1; g >= 0; g--) {
              const v = p[g];
              if (v.element === e) {
                m = v;
                break;
              }
            }
            m &&
              !m.allowOnlyTimelineStyles() &&
              m.setStyles([a], null, u.errors, l);
          }
          return p.length
            ? p.map((m) => m.buildKeyframes())
            : [g_(e, [], [], [], 0, f, "", !1)];
        }
        visitTrigger(n, e) {}
        visitState(n, e) {}
        visitTransition(n, e) {}
        visitAnimateChild(n, e) {
          const i = e.subInstructions.get(e.element);
          if (i) {
            const r = e.createSubContext(n.options),
              s = e.currentTimeline.currentTime,
              o = this._visitSubInstructions(i, r, r.options);
            s != o && e.transformIntoNewTimeline(o);
          }
          e.previousNode = n;
        }
        visitAnimateRef(n, e) {
          const i = e.createSubContext(n.options);
          i.transformIntoNewTimeline(),
            this.visitReference(n.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = n);
        }
        _visitSubInstructions(n, e, i) {
          let s = e.currentTimeline.currentTime;
          const o = null != i.duration ? Br(i.duration) : null,
            a = null != i.delay ? Br(i.delay) : null;
          return (
            0 !== o &&
              n.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, o, a);
                s = Math.max(s, c.duration + c.delay);
              }),
            s
          );
        }
        visitReference(n, e) {
          e.updateOptions(n.options, !0),
            Dn(this, n.animation, e),
            (e.previousNode = n);
        }
        visitSequence(n, e) {
          const i = e.subContextCount;
          let r = e;
          const s = n.options;
          if (
            s &&
            (s.params || s.delay) &&
            ((r = e.createSubContext(s)),
            r.transformIntoNewTimeline(),
            null != s.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = Au));
            const o = Br(s.delay);
            r.delayNextStep(o);
          }
          n.steps.length &&
            (n.steps.forEach((o) => Dn(this, o, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (e.previousNode = n);
        }
        visitGroup(n, e) {
          const i = [];
          let r = e.currentTimeline.currentTime;
          const s = n.options && n.options.delay ? Br(n.options.delay) : 0;
          n.steps.forEach((o) => {
            const a = e.createSubContext(n.options);
            s && a.delayNextStep(s),
              Dn(this, o, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((o) => e.currentTimeline.mergeTimelineCollectedStyles(o)),
            e.transformIntoNewTimeline(r),
            (e.previousNode = n);
        }
        _visitTiming(n, e) {
          if (n.dynamic) {
            const i = n.strValue;
            return yu(e.params ? bu(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: n.duration, delay: n.delay, easing: n.easing };
        }
        visitAnimate(n, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(n.timings, e)),
            r = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), r.snapshotCurrentStyles());
          const s = n.style;
          5 == s.type
            ? this.visitKeyframes(s, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(s, e),
              r.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = n);
        }
        visitStyle(n, e) {
          const i = e.currentTimeline,
            r = e.currentAnimateTimings;
          !r && i.hasCurrentStyleProperties() && i.forwardFrame();
          const s = (r && r.easing) || n.easing;
          n.isEmptyStep
            ? i.applyEmptyStep(s)
            : i.setStyles(n.styles, s, e.errors, e.options),
            (e.previousNode = n);
        }
        visitKeyframes(n, e) {
          const i = e.currentAnimateTimings,
            r = e.currentTimeline.duration,
            s = i.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = i.easing),
            n.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * s),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(r + s),
            (e.previousNode = n);
        }
        visitQuery(n, e) {
          const i = e.currentTimeline.currentTime,
            r = n.options || {},
            s = r.delay ? Br(r.delay) : 0;
          s &&
            (6 === e.previousNode.type ||
              (0 == i && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = Au));
          let o = i;
          const a = e.invokeQuery(
            n.selector,
            n.originalSelector,
            n.limit,
            n.includeSelf,
            !!r.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, d) => {
            e.currentQueryIndex = d;
            const u = e.createSubContext(n.options, c);
            s && u.delayNextStep(s),
              c === e.element && (l = u.currentTimeline),
              Dn(this, n.animation, u),
              u.currentTimeline.applyStylesToKeyframe(),
              (o = Math.max(o, u.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(o),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = n);
        }
        visitStagger(n, e) {
          const i = e.parentContext,
            r = e.currentTimeline,
            s = n.timings,
            o = Math.abs(s.duration),
            a = o * (e.currentQueryTotal - 1);
          let l = o * e.currentQueryIndex;
          switch (s.duration < 0 ? "reverse" : s.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const d = e.currentTimeline;
          l && d.delayNextStep(l);
          const u = d.currentTime;
          Dn(this, n.animation, e),
            (e.previousNode = n),
            (i.currentStaggerTime =
              r.currentTime - u + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const Au = {};
      class v_ {
        constructor(n, e, i, r, s, o, a, l) {
          (this._driver = n),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = s),
            (this.errors = o),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Au),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new ku(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(n, e) {
          if (!n) return;
          const i = n;
          let r = this.options;
          null != i.duration && (r.duration = Br(i.duration)),
            null != i.delay && (r.delay = Br(i.delay));
          const s = i.params;
          if (s) {
            let o = r.params;
            o || (o = this.options.params = {}),
              Object.keys(s).forEach((a) => {
                (!e || !o.hasOwnProperty(a)) &&
                  (o[a] = bu(s[a], o, this.errors));
              });
          }
        }
        _copyOptions() {
          const n = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (n.params = {});
              Object.keys(e).forEach((r) => {
                i[r] = e[r];
              });
            }
          }
          return n;
        }
        createSubContext(n = null, e, i) {
          const r = e || this.element,
            s = new v_(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (s.previousNode = this.previousNode),
            (s.currentAnimateTimings = this.currentAnimateTimings),
            (s.options = this._copyOptions()),
            s.updateOptions(n),
            (s.currentQueryIndex = this.currentQueryIndex),
            (s.currentQueryTotal = this.currentQueryTotal),
            (s.parentContext = this),
            this.subContextCount++,
            s
          );
        }
        transformIntoNewTimeline(n) {
          return (
            (this.previousNode = Au),
            (this.currentTimeline = this.currentTimeline.fork(this.element, n)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(n, e, i) {
          const r = {
              duration: e ?? n.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + n.delay,
              easing: "",
            },
            s = new $$(
              this._driver,
              n.element,
              n.keyframes,
              n.preStyleProps,
              n.postStyleProps,
              r,
              n.stretchStartingKeyframe
            );
          return this.timelines.push(s), r;
        }
        incrementTime(n) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + n);
        }
        delayNextStep(n) {
          n > 0 && this.currentTimeline.delayNextStep(n);
        }
        invokeQuery(n, e, i, r, s, o) {
          let a = [];
          if ((r && a.push(this.element), n.length > 0)) {
            n = (n = n.replace(j$, "." + this._enterClassName)).replace(
              U$,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, n, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !s &&
              0 == a.length &&
              o.push(
                (function Q3(t) {
                  return new M(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class ku {
        constructor(n, e, i, r) {
          (this._driver = n),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(n) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + n),
              e && this.snapshotCurrentStyles())
            : (this.startTime += n);
        }
        fork(n, e) {
          return (
            this.applyStylesToKeyframe(),
            new ku(
              this._driver,
              n,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(n) {
          this.applyStylesToKeyframe(),
            (this.duration = n),
            this._loadKeyframe();
        }
        _updateStyle(n, e) {
          this._localTimelineStyles.set(n, e),
            this._globalTimelineStyles.set(n, e),
            this._styleSummary.set(n, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(n) {
          n && this._previousKeyframe.set("easing", n);
          for (let [e, i] of this._globalTimelineStyles)
            this._backFill.set(e, i || sr), this._currentKeyframe.set(e, sr);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(n, e, i, r) {
          e && this._previousKeyframe.set("easing", e);
          const s = (r && r.params) || {},
            o = (function W$(t, n) {
              const e = new Map();
              let i;
              return (
                t.forEach((r) => {
                  if ("*" === r) {
                    i = i || n.keys();
                    for (let s of i) e.set(s, sr);
                  } else Vr(r, e);
                }),
                e
              );
            })(n, this._globalTimelineStyles);
          for (let [a, l] of o) {
            const c = bu(l, s, i);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? sr),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((n, e) => {
              this._currentKeyframe.set(e, n);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((n, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, n);
            }));
        }
        snapshotCurrentStyles() {
          for (let [n, e] of this._localTimelineStyles)
            this._pendingStyles.set(n, e), this._updateStyle(n, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const n = [];
          for (let e in this._currentKeyframe) n.push(e);
          return n;
        }
        mergeTimelineCollectedStyles(n) {
          n._styleSummary.forEach((e, i) => {
            const r = this._styleSummary.get(i);
            (!r || e.time > r.time) && this._updateStyle(i, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const n = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, l) => {
            const c = Vr(a, new Map(), this._backFill);
            c.forEach((d, u) => {
              "!" === d ? n.add(u) : d === sr && e.add(u);
            }),
              i || c.set("offset", l / this.duration),
              r.push(c);
          });
          const s = n.size ? Cu(n.values()) : [],
            o = e.size ? Cu(e.values()) : [];
          if (i) {
            const a = r[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (r = [a, l]);
          }
          return g_(
            this.element,
            r,
            s,
            o,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class $$ extends ku {
        constructor(n, e, i, r, s, o, a = !1) {
          super(n, e, o.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = s),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: o.duration,
              delay: o.delay,
              easing: o.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let n = this.keyframes,
            { delay: e, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const s = [],
              o = i + e,
              a = e / o,
              l = Vr(n[0]);
            l.set("offset", 0), s.push(l);
            const c = Vr(n[0]);
            c.set("offset", XE(a)), s.push(c);
            const d = n.length - 1;
            for (let u = 1; u <= d; u++) {
              let f = Vr(n[u]);
              const p = f.get("offset");
              f.set("offset", XE((e + p * i) / o)), s.push(f);
            }
            (i = o), (e = 0), (r = ""), (n = s);
          }
          return g_(
            this.element,
            n,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            r,
            !0
          );
        }
      }
      function XE(t, n = 3) {
        const e = Math.pow(10, n - 1);
        return Math.round(t * e) / e;
      }
      class y_ {}
      const q$ = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class Y$ extends y_ {
        normalizePropertyName(n, e) {
          return f_(n);
        }
        normalizeStyleValue(n, e, i, r) {
          let s = "";
          const o = i.toString().trim();
          if (q$.has(e) && 0 !== i && "0" !== i)
            if ("number" == typeof i) s = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(
                  (function B3(t, n) {
                    return new M(3005, !1);
                  })()
                );
            }
          return o + s;
        }
      }
      function JE(t, n, e, i, r, s, o, a, l, c, d, u, f) {
        return {
          type: 0,
          element: t,
          triggerName: n,
          isRemovalTransition: r,
          fromState: e,
          fromStyles: s,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: d,
          totalTime: u,
          errors: f,
        };
      }
      const b_ = {};
      class eA {
        constructor(n, e, i) {
          (this._triggerName = n), (this.ast = e), (this._stateStyles = i);
        }
        match(n, e, i, r) {
          return (function Q$(t, n, e, i, r) {
            return t.some((s) => s(n, e, i, r));
          })(this.ast.matchers, n, e, i, r);
        }
        buildStyles(n, e, i) {
          let r = this._stateStyles.get("*");
          return (
            void 0 !== n && (r = this._stateStyles.get(n?.toString()) || r),
            r ? r.buildStyles(e, i) : new Map()
          );
        }
        build(n, e, i, r, s, o, a, l, c, d) {
          const u = [],
            f = (this.ast.options && this.ast.options.params) || b_,
            m = this.buildStyles(i, (a && a.params) || b_, u),
            g = (l && l.params) || b_,
            v = this.buildStyles(r, g, u),
            b = new Set(),
            k = new Map(),
            w = new Map(),
            L = "void" === r,
            oe = { params: K$(g, f), delay: this.ast.options?.delay },
            Ae = d ? [] : __(n, e, this.ast.animation, s, o, m, v, oe, c, u);
          let st = 0;
          if (
            (Ae.forEach((Tn) => {
              st = Math.max(Tn.duration + Tn.delay, st);
            }),
            u.length)
          )
            return JE(e, this._triggerName, i, r, L, m, v, [], [], k, w, st, u);
          Ae.forEach((Tn) => {
            const In = Tn.element,
              Xo = wn(k, In, new Set());
            Tn.preStyleProps.forEach((di) => Xo.add(di));
            const mr = wn(w, In, new Set());
            Tn.postStyleProps.forEach((di) => mr.add(di)),
              In !== e && b.add(In);
          });
          const kn = Cu(b.values());
          return JE(e, this._triggerName, i, r, L, m, v, Ae, kn, k, w, st);
        }
      }
      function K$(t, n) {
        const e = bl(n);
        for (const i in t) t.hasOwnProperty(i) && null != t[i] && (e[i] = t[i]);
        return e;
      }
      class Z$ {
        constructor(n, e, i) {
          (this.styles = n), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(n, e) {
          const i = new Map(),
            r = bl(this.defaultParams);
          return (
            Object.keys(n).forEach((s) => {
              const o = n[s];
              null !== o && (r[s] = o);
            }),
            this.styles.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((o, a) => {
                  o && (o = bu(o, r, e));
                  const l = this.normalizer.normalizePropertyName(a, e);
                  (o = this.normalizer.normalizeStyleValue(a, l, o, e)),
                    i.set(l, o);
                });
            }),
            i
          );
        }
      }
      class J$ {
        constructor(n, e, i) {
          (this.name = n),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((r) => {
              this.states.set(
                r.name,
                new Z$(r.style, (r.options && r.options.params) || {}, i)
              );
            }),
            tA(this.states, "true", "1"),
            tA(this.states, "false", "0"),
            e.transitions.forEach((r) => {
              this.transitionFactories.push(new eA(n, r, this.states));
            }),
            (this.fallbackTransition = (function e5(t, n, e) {
              return new eA(
                t,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(o, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                n
              );
            })(n, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(n, e, i, r) {
          return (
            this.transitionFactories.find((o) => o.match(n, e, i, r)) || null
          );
        }
        matchStyles(n, e, i) {
          return this.fallbackTransition.buildStyles(n, e, i);
        }
      }
      function tA(t, n, e) {
        t.has(n)
          ? t.has(e) || t.set(e, t.get(n))
          : t.has(e) && t.set(n, t.get(e));
      }
      const t5 = new Eu();
      class n5 {
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(n, e) {
          const i = [],
            s = p_(this._driver, e, i, []);
          if (i.length)
            throw (function n$(t) {
              return new M(3503, !1);
            })();
          this._animations.set(n, s);
        }
        _buildPlayer(n, e, i) {
          const r = n.element,
            s = OE(0, this._normalizer, 0, n.keyframes, e, i);
          return this._driver.animate(
            r,
            s,
            n.duration,
            n.delay,
            n.easing,
            [],
            !0
          );
        }
        create(n, e, i = {}) {
          const r = [],
            s = this._animations.get(n);
          let o;
          const a = new Map();
          if (
            (s
              ? ((o = __(
                  this._driver,
                  e,
                  s,
                  c_,
                  gu,
                  new Map(),
                  new Map(),
                  i,
                  t5,
                  r
                )),
                o.forEach((d) => {
                  const u = wn(a, d.element, new Map());
                  d.postStyleProps.forEach((f) => u.set(f, null));
                }))
              : (r.push(
                  (function i$() {
                    return new M(3300, !1);
                  })()
                ),
                (o = [])),
            r.length)
          )
            throw (function r$(t) {
              return new M(3504, !1);
            })();
          a.forEach((d, u) => {
            d.forEach((f, p) => {
              d.set(p, this._driver.computeStyle(u, p, sr));
            });
          });
          const c = Nr(
            o.map((d) => {
              const u = a.get(d.element);
              return this._buildPlayer(d, new Map(), u);
            })
          );
          return (
            this._playersById.set(n, c),
            c.onDestroy(() => this.destroy(n)),
            this.players.push(c),
            c
          );
        }
        destroy(n) {
          const e = this._getPlayer(n);
          e.destroy(), this._playersById.delete(n);
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(n) {
          const e = this._playersById.get(n);
          if (!e)
            throw (function s$(t) {
              return new M(3301, !1);
            })();
          return e;
        }
        listen(n, e, i, r) {
          const s = s_(e, "", "", "");
          return i_(this._getPlayer(n), i, s, r), () => {};
        }
        command(n, e, i, r) {
          if ("register" == i) return void this.register(n, r[0]);
          if ("create" == i) return void this.create(n, e, r[0] || {});
          const s = this._getPlayer(n);
          switch (i) {
            case "play":
              s.play();
              break;
            case "pause":
              s.pause();
              break;
            case "reset":
              s.reset();
              break;
            case "restart":
              s.restart();
              break;
            case "finish":
              s.finish();
              break;
            case "init":
              s.init();
              break;
            case "setPosition":
              s.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(n);
          }
        }
      }
      const nA = "ng-animate-queued",
        C_ = "ng-animate-disabled",
        l5 = [],
        iA = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        c5 = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        zn = "__ng_removed";
      class x_ {
        constructor(n, e = "") {
          this.namespaceId = e;
          const i = n && n.hasOwnProperty("value");
          if (
            ((this.value = (function f5(t) {
              return t ?? null;
            })(i ? n.value : n)),
            i)
          ) {
            const s = bl(n);
            delete s.value, (this.options = s);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(n) {
          const e = n.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((r) => {
              null == i[r] && (i[r] = e[r]);
            });
          }
        }
      }
      const xl = "void",
        w_ = new x_(xl);
      class d5 {
        constructor(n, e, i) {
          (this.id = n),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + n),
            $n(e, this._hostClassName);
        }
        listen(n, e, i, r) {
          if (!this._triggers.has(e))
            throw (function o$(t, n) {
              return new M(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function a$(t) {
              return new M(3303, !1);
            })();
          if (
            !(function p5(t) {
              return "start" == t || "done" == t;
            })(i)
          )
            throw (function l$(t, n) {
              return new M(3400, !1);
            })();
          const s = wn(this._elementListeners, n, []),
            o = { name: e, phase: i, callback: r };
          s.push(o);
          const a = wn(this._engine.statesByElement, n, new Map());
          return (
            a.has(e) || ($n(n, _u), $n(n, _u + "-" + e), a.set(e, w_)),
            () => {
              this._engine.afterFlush(() => {
                const l = s.indexOf(o);
                l >= 0 && s.splice(l, 1), this._triggers.has(e) || a.delete(e);
              });
            }
          );
        }
        register(n, e) {
          return !this._triggers.has(n) && (this._triggers.set(n, e), !0);
        }
        _getTrigger(n) {
          const e = this._triggers.get(n);
          if (!e)
            throw (function c$(t) {
              return new M(3401, !1);
            })();
          return e;
        }
        trigger(n, e, i, r = !0) {
          const s = this._getTrigger(e),
            o = new D_(this.id, e, n);
          let a = this._engine.statesByElement.get(n);
          a ||
            ($n(n, _u),
            $n(n, _u + "-" + e),
            this._engine.statesByElement.set(n, (a = new Map())));
          let l = a.get(e);
          const c = new x_(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(e, c),
            l || (l = w_),
            c.value !== xl && l.value === c.value)
          ) {
            if (
              !(function _5(t, n) {
                const e = Object.keys(t),
                  i = Object.keys(n);
                if (e.length != i.length) return !1;
                for (let r = 0; r < e.length; r++) {
                  const s = e[r];
                  if (!n.hasOwnProperty(s) || t[s] !== n[s]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const g = [],
                v = s.matchStyles(l.value, l.params, g),
                b = s.matchStyles(c.value, c.params, g);
              g.length
                ? this._engine.reportError(g)
                : this._engine.afterFlush(() => {
                    bs(n, v), ki(n, b);
                  });
            }
            return;
          }
          const f = wn(this._engine.playersByElement, n, []);
          f.forEach((g) => {
            g.namespaceId == this.id &&
              g.triggerName == e &&
              g.queued &&
              g.destroy();
          });
          let p = s.matchTransition(l.value, c.value, n, c.params),
            m = !1;
          if (!p) {
            if (!r) return;
            (p = s.fallbackTransition), (m = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: n,
              triggerName: e,
              transition: p,
              fromState: l,
              toState: c,
              player: o,
              isFallbackTransition: m,
            }),
            m ||
              ($n(n, nA),
              o.onStart(() => {
                Po(n, nA);
              })),
            o.onDone(() => {
              let g = this.players.indexOf(o);
              g >= 0 && this.players.splice(g, 1);
              const v = this._engine.playersByElement.get(n);
              if (v) {
                let b = v.indexOf(o);
                b >= 0 && v.splice(b, 1);
              }
            }),
            this.players.push(o),
            f.push(o),
            o
          );
        }
        deregister(n) {
          this._triggers.delete(n),
            this._engine.statesByElement.forEach((e) => e.delete(n)),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((r) => r.name != n)
              );
            });
        }
        clearElementCache(n) {
          this._engine.statesByElement.delete(n),
            this._elementListeners.delete(n);
          const e = this._engine.playersByElement.get(n);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(n));
        }
        _signalRemovalForInnerTriggers(n, e) {
          const i = this._engine.driver.query(n, vu, !0);
          i.forEach((r) => {
            if (r[zn]) return;
            const s = this._engine.fetchNamespacesByElement(r);
            s.size
              ? s.forEach((o) => o.triggerLeaveAnimation(r, e, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(n, e, i, r) {
          const s = this._engine.statesByElement.get(n),
            o = new Map();
          if (s) {
            const a = [];
            if (
              (s.forEach((l, c) => {
                if ((o.set(c, l.value), this._triggers.has(c))) {
                  const d = this.trigger(n, c, xl, r);
                  d && a.push(d);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, n, !0, e, o),
                i && Nr(a).onDone(() => this._engine.processLeaveNode(n)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(n) {
          const e = this._elementListeners.get(n),
            i = this._engine.statesByElement.get(n);
          if (e && i) {
            const r = new Set();
            e.forEach((s) => {
              const o = s.name;
              if (r.has(o)) return;
              r.add(o);
              const l = this._triggers.get(o).fallbackTransition,
                c = i.get(o) || w_,
                d = new x_(xl),
                u = new D_(this.id, o, n);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: n,
                  triggerName: o,
                  transition: l,
                  fromState: c,
                  toState: d,
                  player: u,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(n, e) {
          const i = this._engine;
          if (
            (n.childElementCount && this._signalRemovalForInnerTriggers(n, e),
            this.triggerLeaveAnimation(n, e, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const s = i.players.length ? i.playersByQueriedElement.get(n) : [];
            if (s && s.length) r = !0;
            else {
              let o = n;
              for (; (o = o.parentNode); )
                if (i.statesByElement.get(o)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(n), r))
            i.markElementAsRemoved(this.id, n, !1, e);
          else {
            const s = n[zn];
            (!s || s === iA) &&
              (i.afterFlush(() => this.clearElementCache(n)),
              i.destroyInnerAnimations(n),
              i._onRemovalComplete(n, e));
          }
        }
        insertNode(n, e) {
          $n(n, this._hostClassName);
        }
        drainQueuedTransitions(n) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const s = i.element,
                o = this._elementListeners.get(s);
              o &&
                o.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = s_(
                      s,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = n), i_(i.player, a.phase, l, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, r) => {
              const s = i.transition.ast.depCount,
                o = r.transition.ast.depCount;
              return 0 == s || 0 == o
                ? s - o
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(n) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, n);
        }
        elementContainsData(n) {
          let e = !1;
          return (
            this._elementListeners.has(n) && (e = !0),
            (e = !!this._queue.find((i) => i.element === n) || e),
            e
          );
        }
      }
      class u5 {
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, s) => {});
        }
        _onRemovalComplete(n, e) {
          this.onRemovalComplete(n, e);
        }
        get queuedPlayers() {
          const n = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && n.push(i);
              });
            }),
            n
          );
        }
        createNamespace(n, e) {
          const i = new d5(n, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[n] = i)
          );
        }
        _balanceNamespaceList(n, e) {
          const i = this._namespaceList,
            r = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let o = !1,
              a = this.driver.getParentElement(e);
            for (; a; ) {
              const l = r.get(a);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, n), (o = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            o || i.unshift(n);
          } else i.push(n);
          return r.set(e, n), n;
        }
        register(n, e) {
          let i = this._namespaceLookup[n];
          return i || (i = this.createNamespace(n, e)), i;
        }
        registerTrigger(n, e, i) {
          let r = this._namespaceLookup[n];
          r && r.register(e, i) && this.totalAnimations++;
        }
        destroy(n, e) {
          if (!n) return;
          const i = this._fetchNamespace(n);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(i.hostElement),
              delete this._namespaceLookup[n];
            const r = this._namespaceList.indexOf(i);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => i.destroy(e));
        }
        _fetchNamespace(n) {
          return this._namespaceLookup[n];
        }
        fetchNamespacesByElement(n) {
          const e = new Set(),
            i = this.statesByElement.get(n);
          if (i)
            for (let r of i.values())
              if (r.namespaceId) {
                const s = this._fetchNamespace(r.namespaceId);
                s && e.add(s);
              }
          return e;
        }
        trigger(n, e, i, r) {
          if (Tu(e)) {
            const s = this._fetchNamespace(n);
            if (s) return s.trigger(e, i, r), !0;
          }
          return !1;
        }
        insertNode(n, e, i, r) {
          if (!Tu(e)) return;
          const s = e[zn];
          if (s && s.setForRemoval) {
            (s.setForRemoval = !1), (s.setForMove = !0);
            const o = this.collectedLeaveElements.indexOf(e);
            o >= 0 && this.collectedLeaveElements.splice(o, 1);
          }
          if (n) {
            const o = this._fetchNamespace(n);
            o && o.insertNode(e, i);
          }
          r && this.collectEnterElement(e);
        }
        collectEnterElement(n) {
          this.collectedEnterElements.push(n);
        }
        markElementAsDisabled(n, e) {
          e
            ? this.disabledNodes.has(n) ||
              (this.disabledNodes.add(n), $n(n, C_))
            : this.disabledNodes.has(n) &&
              (this.disabledNodes.delete(n), Po(n, C_));
        }
        removeNode(n, e, i, r) {
          if (Tu(e)) {
            const s = n ? this._fetchNamespace(n) : null;
            if (
              (s ? s.removeNode(e, r) : this.markElementAsRemoved(n, e, !1, r),
              i)
            ) {
              const o = this.namespacesByHostElement.get(e);
              o && o.id !== n && o.removeNode(e, r);
            }
          } else this._onRemovalComplete(e, r);
        }
        markElementAsRemoved(n, e, i, r, s) {
          this.collectedLeaveElements.push(e),
            (e[zn] = {
              namespaceId: n,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: s,
            });
        }
        listen(n, e, i, r, s) {
          return Tu(e) ? this._fetchNamespace(n).listen(e, i, r, s) : () => {};
        }
        _buildInstruction(n, e, i, r, s) {
          return n.transition.build(
            this.driver,
            n.element,
            n.fromState.value,
            n.toState.value,
            i,
            r,
            n.fromState.options,
            n.toState.options,
            e,
            s
          );
        }
        destroyInnerAnimations(n) {
          let e = this.driver.query(n, vu, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(n, d_, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(n) {
          const e = this.playersByElement.get(n);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(n) {
          const e = this.playersByQueriedElement.get(n);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((n) => {
            if (this.players.length) return Nr(this.players).onDone(() => n());
            n();
          });
        }
        processLeaveNode(n) {
          const e = n[zn];
          if (e && e.setForRemoval) {
            if (((n[zn] = iA), e.namespaceId)) {
              this.destroyInnerAnimations(n);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(n);
            }
            this._onRemovalComplete(n, e.setForRemoval);
          }
          n.classList?.contains(C_) && this.markElementAsDisabled(n, !1),
            this.driver.query(n, ".ng-animate-disabled", !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(n = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              $n(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, n);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? Nr(e).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(n) {
          throw (function d$(t) {
            return new M(3402, !1);
          })();
        }
        _flushAnimations(n, e) {
          const i = new Eu(),
            r = [],
            s = new Map(),
            o = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            d = new Set();
          this.disabledNodes.forEach((z) => {
            d.add(z);
            const X = this.driver.query(z, ".ng-animate-queued", !0);
            for (let ie = 0; ie < X.length; ie++) d.add(X[ie]);
          });
          const u = this.bodyNode,
            f = Array.from(this.statesByElement.keys()),
            p = oA(f, this.collectedEnterElements),
            m = new Map();
          let g = 0;
          p.forEach((z, X) => {
            const ie = c_ + g++;
            m.set(X, ie), z.forEach((Oe) => $n(Oe, ie));
          });
          const v = [],
            b = new Set(),
            k = new Set();
          for (let z = 0; z < this.collectedLeaveElements.length; z++) {
            const X = this.collectedLeaveElements[z],
              ie = X[zn];
            ie &&
              ie.setForRemoval &&
              (v.push(X),
              b.add(X),
              ie.hasAnimation
                ? this.driver
                    .query(X, ".ng-star-inserted", !0)
                    .forEach((Oe) => b.add(Oe))
                : k.add(X));
          }
          const w = new Map(),
            L = oA(f, Array.from(b));
          L.forEach((z, X) => {
            const ie = gu + g++;
            w.set(X, ie), z.forEach((Oe) => $n(Oe, ie));
          }),
            n.push(() => {
              p.forEach((z, X) => {
                const ie = m.get(X);
                z.forEach((Oe) => Po(Oe, ie));
              }),
                L.forEach((z, X) => {
                  const ie = w.get(X);
                  z.forEach((Oe) => Po(Oe, ie));
                }),
                v.forEach((z) => {
                  this.processLeaveNode(z);
                });
            });
          const oe = [],
            Ae = [];
          for (let z = this._namespaceList.length - 1; z >= 0; z--)
            this._namespaceList[z].drainQueuedTransitions(e).forEach((ie) => {
              const Oe = ie.player,
                Lt = ie.element;
              if ((oe.push(Oe), this.collectedEnterElements.length)) {
                const Wt = Lt[zn];
                if (Wt && Wt.setForMove) {
                  if (
                    Wt.previousTriggersValues &&
                    Wt.previousTriggersValues.has(ie.triggerName)
                  ) {
                    const Os = Wt.previousTriggersValues.get(ie.triggerName),
                      Yn = this.statesByElement.get(ie.element);
                    if (Yn && Yn.has(ie.triggerName)) {
                      const Sh = Yn.get(ie.triggerName);
                      (Sh.value = Os), Yn.set(ie.triggerName, Sh);
                    }
                  }
                  return void Oe.destroy();
                }
              }
              const Pi = !u || !this.driver.containsElement(u, Lt),
                Rn = w.get(Lt),
                zr = m.get(Lt),
                ot = this._buildInstruction(ie, i, zr, Rn, Pi);
              if (ot.errors && ot.errors.length) return void Ae.push(ot);
              if (Pi)
                return (
                  Oe.onStart(() => bs(Lt, ot.fromStyles)),
                  Oe.onDestroy(() => ki(Lt, ot.toStyles)),
                  void r.push(Oe)
                );
              if (ie.isFallbackTransition)
                return (
                  Oe.onStart(() => bs(Lt, ot.fromStyles)),
                  Oe.onDestroy(() => ki(Lt, ot.toStyles)),
                  void r.push(Oe)
                );
              const qI = [];
              ot.timelines.forEach((Wt) => {
                (Wt.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Wt.element) || qI.push(Wt);
              }),
                (ot.timelines = qI),
                i.append(Lt, ot.timelines),
                o.push({ instruction: ot, player: Oe, element: Lt }),
                ot.queriedElements.forEach((Wt) => wn(a, Wt, []).push(Oe)),
                ot.preStyleProps.forEach((Wt, Os) => {
                  if (Wt.size) {
                    let Yn = l.get(Os);
                    Yn || l.set(Os, (Yn = new Set())),
                      Wt.forEach((Sh, Ov) => Yn.add(Ov));
                  }
                }),
                ot.postStyleProps.forEach((Wt, Os) => {
                  let Yn = c.get(Os);
                  Yn || c.set(Os, (Yn = new Set())),
                    Wt.forEach((Sh, Ov) => Yn.add(Ov));
                });
            });
          if (Ae.length) {
            const z = [];
            Ae.forEach((X) => {
              z.push(
                (function u$(t, n) {
                  return new M(3505, !1);
                })()
              );
            }),
              oe.forEach((X) => X.destroy()),
              this.reportError(z);
          }
          const st = new Map(),
            kn = new Map();
          o.forEach((z) => {
            const X = z.element;
            i.has(X) &&
              (kn.set(X, X),
              this._beforeAnimationBuild(
                z.player.namespaceId,
                z.instruction,
                st
              ));
          }),
            r.forEach((z) => {
              const X = z.element;
              this._getPreviousPlayers(
                X,
                !1,
                z.namespaceId,
                z.triggerName,
                null
              ).forEach((Oe) => {
                wn(st, X, []).push(Oe), Oe.destroy();
              });
            });
          const Tn = v.filter((z) => lA(z, l, c)),
            In = new Map();
          sA(In, this.driver, k, c, sr).forEach((z) => {
            lA(z, l, c) && Tn.push(z);
          });
          const mr = new Map();
          p.forEach((z, X) => {
            sA(mr, this.driver, new Set(z), l, "!");
          }),
            Tn.forEach((z) => {
              const X = In.get(z),
                ie = mr.get(z);
              In.set(
                z,
                new Map([
                  ...Array.from(X?.entries() ?? []),
                  ...Array.from(ie?.entries() ?? []),
                ])
              );
            });
          const di = [],
            Jo = [],
            ea = {};
          o.forEach((z) => {
            const { element: X, player: ie, instruction: Oe } = z;
            if (i.has(X)) {
              if (d.has(X))
                return (
                  ie.onDestroy(() => ki(X, Oe.toStyles)),
                  (ie.disabled = !0),
                  ie.overrideTotalTime(Oe.totalTime),
                  void r.push(ie)
                );
              let Lt = ea;
              if (kn.size > 1) {
                let Rn = X;
                const zr = [];
                for (; (Rn = Rn.parentNode); ) {
                  const ot = kn.get(Rn);
                  if (ot) {
                    Lt = ot;
                    break;
                  }
                  zr.push(Rn);
                }
                zr.forEach((ot) => kn.set(ot, Lt));
              }
              const Pi = this._buildAnimation(
                ie.namespaceId,
                Oe,
                st,
                s,
                mr,
                In
              );
              if ((ie.setRealPlayer(Pi), Lt === ea)) di.push(ie);
              else {
                const Rn = this.playersByElement.get(Lt);
                Rn && Rn.length && (ie.parentPlayer = Nr(Rn)), r.push(ie);
              }
            } else
              bs(X, Oe.fromStyles),
                ie.onDestroy(() => ki(X, Oe.toStyles)),
                Jo.push(ie),
                d.has(X) && r.push(ie);
          }),
            Jo.forEach((z) => {
              const X = s.get(z.element);
              if (X && X.length) {
                const ie = Nr(X);
                z.setRealPlayer(ie);
              }
            }),
            r.forEach((z) => {
              z.parentPlayer ? z.syncPlayerEvents(z.parentPlayer) : z.destroy();
            });
          for (let z = 0; z < v.length; z++) {
            const X = v[z],
              ie = X[zn];
            if ((Po(X, gu), ie && ie.hasAnimation)) continue;
            let Oe = [];
            if (a.size) {
              let Pi = a.get(X);
              Pi && Pi.length && Oe.push(...Pi);
              let Rn = this.driver.query(X, d_, !0);
              for (let zr = 0; zr < Rn.length; zr++) {
                let ot = a.get(Rn[zr]);
                ot && ot.length && Oe.push(...ot);
              }
            }
            const Lt = Oe.filter((Pi) => !Pi.destroyed);
            Lt.length ? m5(this, X, Lt) : this.processLeaveNode(X);
          }
          return (
            (v.length = 0),
            di.forEach((z) => {
              this.players.push(z),
                z.onDone(() => {
                  z.destroy();
                  const X = this.players.indexOf(z);
                  this.players.splice(X, 1);
                }),
                z.play();
            }),
            di
          );
        }
        elementContainsData(n, e) {
          let i = !1;
          const r = e[zn];
          return (
            r && r.setForRemoval && (i = !0),
            this.playersByElement.has(e) && (i = !0),
            this.playersByQueriedElement.has(e) && (i = !0),
            this.statesByElement.has(e) && (i = !0),
            this._fetchNamespace(n).elementContainsData(e) || i
          );
        }
        afterFlush(n) {
          this._flushFns.push(n);
        }
        afterFlushAnimationsDone(n) {
          this._whenQuietFns.push(n);
        }
        _getPreviousPlayers(n, e, i, r, s) {
          let o = [];
          if (e) {
            const a = this.playersByQueriedElement.get(n);
            a && (o = a);
          } else {
            const a = this.playersByElement.get(n);
            if (a) {
              const l = !s || s == xl;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || o.push(c);
              });
            }
          }
          return (
            (i || r) &&
              (o = o.filter(
                (a) => !((i && i != a.namespaceId) || (r && r != a.triggerName))
              )),
            o
          );
        }
        _beforeAnimationBuild(n, e, i) {
          const s = e.element,
            o = e.isRemovalTransition ? void 0 : n,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              d = c !== s,
              u = wn(i, c, []);
            this._getPreviousPlayers(c, d, o, a, e.toState).forEach((p) => {
              const m = p.getRealPlayer();
              m.beforeDestroy && m.beforeDestroy(), p.destroy(), u.push(p);
            });
          }
          bs(s, e.fromStyles);
        }
        _buildAnimation(n, e, i, r, s, o) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            d = new Set(),
            u = new Set(),
            f = e.timelines.map((m) => {
              const g = m.element;
              d.add(g);
              const v = g[zn];
              if (v && v.removedBeforeQueried)
                return new yl(m.duration, m.delay);
              const b = g !== l,
                k = (function g5(t) {
                  const n = [];
                  return aA(t, n), n;
                })((i.get(g) || l5).map((st) => st.getRealPlayer())).filter(
                  (st) => !!st.element && st.element === g
                ),
                w = s.get(g),
                L = o.get(g),
                oe = OE(0, this._normalizer, 0, m.keyframes, w, L),
                Ae = this._buildPlayer(m, oe, k);
              if ((m.subTimeline && r && u.add(g), b)) {
                const st = new D_(n, a, g);
                st.setRealPlayer(Ae), c.push(st);
              }
              return Ae;
            });
          c.forEach((m) => {
            wn(this.playersByQueriedElement, m.element, []).push(m),
              m.onDone(() =>
                (function h5(t, n, e) {
                  let i = t.get(n);
                  if (i) {
                    if (i.length) {
                      const r = i.indexOf(e);
                      i.splice(r, 1);
                    }
                    0 == i.length && t.delete(n);
                  }
                  return i;
                })(this.playersByQueriedElement, m.element, m)
              );
          }),
            d.forEach((m) => $n(m, GE));
          const p = Nr(f);
          return (
            p.onDestroy(() => {
              d.forEach((m) => Po(m, GE)), ki(l, e.toStyles);
            }),
            u.forEach((m) => {
              wn(r, m, []).push(p);
            }),
            p
          );
        }
        _buildPlayer(n, e, i) {
          return e.length > 0
            ? this.driver.animate(
                n.element,
                e,
                n.duration,
                n.delay,
                n.easing,
                i
              )
            : new yl(n.duration, n.delay);
        }
      }
      class D_ {
        constructor(n, e, i) {
          (this.namespaceId = n),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new yl()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(n) {
          this._containsRealPlayer ||
            ((this._player = n),
            this._queuedCallbacks.forEach((e, i) => {
              e.forEach((r) => i_(n, i, void 0, r));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(n.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(n) {
          this.totalTime = n;
        }
        syncPlayerEvents(n) {
          const e = this._player;
          e.triggerCallback && n.onStart(() => e.triggerCallback("start")),
            n.onDone(() => this.finish()),
            n.onDestroy(() => this.destroy());
        }
        _queueEvent(n, e) {
          wn(this._queuedCallbacks, n, []).push(e);
        }
        onDone(n) {
          this.queued && this._queueEvent("done", n), this._player.onDone(n);
        }
        onStart(n) {
          this.queued && this._queueEvent("start", n), this._player.onStart(n);
        }
        onDestroy(n) {
          this.queued && this._queueEvent("destroy", n),
            this._player.onDestroy(n);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(n) {
          this.queued || this._player.setPosition(n);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(n) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(n);
        }
      }
      function Tu(t) {
        return t && 1 === t.nodeType;
      }
      function rA(t, n) {
        const e = t.style.display;
        return (t.style.display = n ?? "none"), e;
      }
      function sA(t, n, e, i, r) {
        const s = [];
        e.forEach((l) => s.push(rA(l)));
        const o = [];
        i.forEach((l, c) => {
          const d = new Map();
          l.forEach((u) => {
            const f = n.computeStyle(c, u, r);
            d.set(u, f), (!f || 0 == f.length) && ((c[zn] = c5), o.push(c));
          }),
            t.set(c, d);
        });
        let a = 0;
        return e.forEach((l) => rA(l, s[a++])), o;
      }
      function oA(t, n) {
        const e = new Map();
        if ((t.forEach((a) => e.set(a, [])), 0 == n.length)) return e;
        const r = new Set(n),
          s = new Map();
        function o(a) {
          if (!a) return 1;
          let l = s.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : r.has(c) ? 1 : o(c)), s.set(a, l), l;
        }
        return (
          n.forEach((a) => {
            const l = o(a);
            1 !== l && e.get(l).push(a);
          }),
          e
        );
      }
      function $n(t, n) {
        t.classList?.add(n);
      }
      function Po(t, n) {
        t.classList?.remove(n);
      }
      function m5(t, n, e) {
        Nr(e).onDone(() => t.processLeaveNode(n));
      }
      function aA(t, n) {
        for (let e = 0; e < t.length; e++) {
          const i = t[e];
          i instanceof IE ? aA(i.players, n) : n.push(i);
        }
      }
      function lA(t, n, e) {
        const i = e.get(t);
        if (!i) return !1;
        let r = n.get(t);
        return r ? i.forEach((s) => r.add(s)) : n.set(t, i), e.delete(t), !0;
      }
      class Iu {
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, s) => {}),
            (this._transitionEngine = new u5(n, e, i)),
            (this._timelineEngine = new n5(n, e, i)),
            (this._transitionEngine.onRemovalComplete = (r, s) =>
              this.onRemovalComplete(r, s));
        }
        registerTrigger(n, e, i, r, s) {
          const o = n + "-" + r;
          let a = this._triggerCache[o];
          if (!a) {
            const l = [],
              d = p_(this._driver, s, l, []);
            if (l.length)
              throw (function e$(t, n) {
                return new M(3404, !1);
              })();
            (a = (function X$(t, n, e) {
              return new J$(t, n, e);
            })(r, d, this._normalizer)),
              (this._triggerCache[o] = a);
          }
          this._transitionEngine.registerTrigger(e, r, a);
        }
        register(n, e) {
          this._transitionEngine.register(n, e);
        }
        destroy(n, e) {
          this._transitionEngine.destroy(n, e);
        }
        onInsert(n, e, i, r) {
          this._transitionEngine.insertNode(n, e, i, r);
        }
        onRemove(n, e, i, r) {
          this._transitionEngine.removeNode(n, e, r || !1, i);
        }
        disableAnimations(n, e) {
          this._transitionEngine.markElementAsDisabled(n, e);
        }
        process(n, e, i, r) {
          if ("@" == i.charAt(0)) {
            const [s, o] = FE(i);
            this._timelineEngine.command(s, e, o, r);
          } else this._transitionEngine.trigger(n, e, i, r);
        }
        listen(n, e, i, r, s) {
          if ("@" == i.charAt(0)) {
            const [o, a] = FE(i);
            return this._timelineEngine.listen(o, e, a, s);
          }
          return this._transitionEngine.listen(n, e, i, r, s);
        }
        flush(n = -1) {
          this._transitionEngine.flush(n);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let y5 = (() => {
        class t {
          constructor(e, i, r) {
            (this._element = e),
              (this._startStyles = i),
              (this._endStyles = r),
              (this._state = 0);
            let s = t.initialStylesByElement.get(e);
            s || t.initialStylesByElement.set(e, (s = new Map())),
              (this._initialStyles = s);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                ki(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (ki(this._element, this._initialStyles),
                this._endStyles &&
                  (ki(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (t.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (bs(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (bs(this._element, this._endStyles),
                  (this._endStyles = null)),
                ki(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (t.initialStylesByElement = new WeakMap()), t;
      })();
      function M_(t) {
        let n = null;
        return (
          t.forEach((e, i) => {
            (function b5(t) {
              return "display" === t || "position" === t;
            })(i) && ((n = n || new Map()), n.set(i, e));
          }),
          n
        );
      }
      class cA {
        constructor(n, e, i, r) {
          (this.element = n),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const n = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            n,
            this.options
          )),
            (this._finalKeyframe = n.length ? n[n.length - 1] : new Map()),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(n) {
          const e = [];
          return (
            n.forEach((i) => {
              e.push(Object.fromEntries(i));
            }),
            e
          );
        }
        _triggerWebAnimation(n, e, i) {
          return n.animate(this._convertKeyframesToObject(e), i);
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((n) => n()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        setPosition(n) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = n * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const n = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, r) => {
              "offset" !== r &&
                n.set(r, this._finished ? i : YE(this.element, r));
            }),
            (this.currentSnapshot = n);
        }
        triggerCallback(n) {
          const e = "start" === n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class C5 {
        validateStyleProperty(n) {
          return !0;
        }
        validateAnimatableStyleProperty(n) {
          return !0;
        }
        matchesElement(n, e) {
          return !1;
        }
        containsElement(n, e) {
          return BE(n, e);
        }
        getParentElement(n) {
          return a_(n);
        }
        query(n, e, i) {
          return VE(n, e, i);
        }
        computeStyle(n, e, i) {
          return window.getComputedStyle(n)[e];
        }
        animate(n, e, i, r, s, o = []) {
          const l = {
            duration: i,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          s && (l.easing = s);
          const c = new Map(),
            d = o.filter((p) => p instanceof cA);
          (function D$(t, n) {
            return 0 === t || 0 === n;
          })(i, r) &&
            d.forEach((p) => {
              p.currentSnapshot.forEach((m, g) => c.set(g, m));
            });
          let u = (function b$(t) {
            return t.length
              ? t[0] instanceof Map
                ? t
                : t.map((n) => UE(n))
              : [];
          })(e).map((p) => Vr(p));
          u = (function M$(t, n, e) {
            if (e.size && n.length) {
              let i = n[0],
                r = [];
              if (
                (e.forEach((s, o) => {
                  i.has(o) || r.push(o), i.set(o, s);
                }),
                r.length)
              )
                for (let s = 1; s < n.length; s++) {
                  let o = n[s];
                  r.forEach((a) => o.set(a, YE(t, a)));
                }
            }
            return n;
          })(n, u, c);
          const f = (function v5(t, n) {
            let e = null,
              i = null;
            return (
              Array.isArray(n) && n.length
                ? ((e = M_(n[0])), n.length > 1 && (i = M_(n[n.length - 1])))
                : n instanceof Map && (e = M_(n)),
              e || i ? new y5(t, e, i) : null
            );
          })(n, u);
          return new cA(n, u, l, f);
        }
      }
      let x5 = (() => {
        class t extends EE {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: Kn.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(e) ? kE(e) : e;
            return (
              dA(this._renderer, null, i, "register", [r]),
              new w5(i, this._renderer)
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Ma), _(Z));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class w5 extends class R3 {} {
        constructor(n, e) {
          super(), (this._id = n), (this._renderer = e);
        }
        create(n, e) {
          return new D5(this._id, n, e || {}, this._renderer);
        }
      }
      class D5 {
        constructor(n, e, i, r) {
          (this.id = n),
            (this.element = e),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(n, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${n}`, e);
        }
        _command(n, ...e) {
          return dA(this._renderer, this.element, this.id, n, e);
        }
        onDone(n) {
          this._listen("done", n);
        }
        onStart(n) {
          this._listen("start", n);
        }
        onDestroy(n) {
          this._listen("destroy", n);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(n) {
          this._command("setPosition", n);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function dA(t, n, e, i, r) {
        return t.setProperty(n, `@@${e}:${i}`, r);
      }
      const uA = "@.disabled";
      let M5 = (() => {
        class t {
          constructor(e, i, r) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (i.onRemovalComplete = (s, o) => {
                const a = o?.parentNode(s);
                a && o.removeChild(a, s);
              });
          }
          createRenderer(e, i) {
            const s = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let d = this._rendererCache.get(s);
              return (
                d ||
                  ((d = new hA("", s, this.engine)),
                  this._rendererCache.set(s, d)),
                d
              );
            }
            const o = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (d) => {
              Array.isArray(d)
                ? d.forEach(l)
                : this.engine.registerTrigger(o, a, e, d.name, d);
            };
            return i.data.animation.forEach(l), new S5(this, a, s, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, r) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((s) => {
                        const [o, a] = s;
                        o(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Ma), _(Iu), _(Y));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class hA {
        constructor(n, e, i) {
          (this.namespaceId = n),
            (this.delegate = e),
            (this.engine = i),
            (this.destroyNode = this.delegate.destroyNode
              ? (r) => e.destroyNode(r)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(n, e) {
          return this.delegate.createElement(n, e);
        }
        createComment(n) {
          return this.delegate.createComment(n);
        }
        createText(n) {
          return this.delegate.createText(n);
        }
        appendChild(n, e) {
          this.delegate.appendChild(n, e),
            this.engine.onInsert(this.namespaceId, e, n, !1);
        }
        insertBefore(n, e, i, r = !0) {
          this.delegate.insertBefore(n, e, i),
            this.engine.onInsert(this.namespaceId, e, n, r);
        }
        removeChild(n, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, i);
        }
        selectRootElement(n, e) {
          return this.delegate.selectRootElement(n, e);
        }
        parentNode(n) {
          return this.delegate.parentNode(n);
        }
        nextSibling(n) {
          return this.delegate.nextSibling(n);
        }
        setAttribute(n, e, i, r) {
          this.delegate.setAttribute(n, e, i, r);
        }
        removeAttribute(n, e, i) {
          this.delegate.removeAttribute(n, e, i);
        }
        addClass(n, e) {
          this.delegate.addClass(n, e);
        }
        removeClass(n, e) {
          this.delegate.removeClass(n, e);
        }
        setStyle(n, e, i, r) {
          this.delegate.setStyle(n, e, i, r);
        }
        removeStyle(n, e, i) {
          this.delegate.removeStyle(n, e, i);
        }
        setProperty(n, e, i) {
          "@" == e.charAt(0) && e == uA
            ? this.disableAnimations(n, !!i)
            : this.delegate.setProperty(n, e, i);
        }
        setValue(n, e) {
          this.delegate.setValue(n, e);
        }
        listen(n, e, i) {
          return this.delegate.listen(n, e, i);
        }
        disableAnimations(n, e) {
          this.engine.disableAnimations(n, e);
        }
      }
      class S5 extends hA {
        constructor(n, e, i, r) {
          super(e, i, r), (this.factory = n), (this.namespaceId = e);
        }
        setProperty(n, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == uA
              ? this.disableAnimations(n, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, n, e.slice(1), i)
            : this.delegate.setProperty(n, e, i);
        }
        listen(n, e, i) {
          if ("@" == e.charAt(0)) {
            const r = (function E5(t) {
              switch (t) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return t;
              }
            })(n);
            let s = e.slice(1),
              o = "";
            return (
              "@" != s.charAt(0) &&
                ([s, o] = (function A5(t) {
                  const n = t.indexOf(".");
                  return [t.substring(0, n), t.slice(n + 1)];
                })(s)),
              this.engine.listen(this.namespaceId, r, s, o, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(n, e, i);
        }
      }
      const fA = [
          { provide: EE, useClass: x5 },
          {
            provide: y_,
            useFactory: function T5() {
              return new Y$();
            },
          },
          {
            provide: Iu,
            useClass: (() => {
              class t extends Iu {
                constructor(e, i, r, s) {
                  super(e.body, i, r);
                }
                ngOnDestroy() {
                  this.flush();
                }
              }
              return (
                (t.ɵfac = function (e) {
                  return new (e || t)(_(Z), _(l_), _(y_), _(as));
                }),
                (t.ɵprov = D({ token: t, factory: t.ɵfac })),
                t
              );
            })(),
          },
          {
            provide: Ma,
            useFactory: function I5(t, n, e) {
              return new M5(t, n, e);
            },
            deps: [yd, Iu, Y],
          },
        ],
        S_ = [
          { provide: l_, useFactory: () => new C5() },
          { provide: en, useValue: "BrowserAnimations" },
          ...fA,
        ],
        pA = [
          { provide: l_, useClass: HE },
          { provide: en, useValue: "NoopAnimations" },
          ...fA,
        ];
      let E_,
        R5 = (() => {
          class t {
            static withConfig(e) {
              return { ngModule: t, providers: e.disableAnimations ? pA : S_ };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: S_, imports: [ID] })),
            t
          );
        })();
      try {
        E_ = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        E_ = !1;
      }
      let wl,
        Ou,
        xs,
        A_,
        Vt = (() => {
          class t {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? Zi(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !E_) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(dn));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      function Hr(t) {
        return (function O5() {
          if (null == wl && typeof window < "u")
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (wl = !0) })
              );
            } finally {
              wl = wl || !1;
            }
          return wl;
        })()
          ? t
          : !!t.capture;
      }
      function gA() {
        if (null == xs) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (xs = !1), xs;
          if ("scrollBehavior" in document.documentElement.style) xs = !0;
          else {
            const t = Element.prototype.scrollTo;
            xs = !!t && !/\{\s*\[native code\]\s*\}/.test(t.toString());
          }
        }
        return xs;
      }
      function Dl() {
        if ("object" != typeof document || !document) return 0;
        if (null == Ou) {
          const t = document.createElement("div"),
            n = t.style;
          (t.dir = "rtl"),
            (n.width = "1px"),
            (n.overflow = "auto"),
            (n.visibility = "hidden"),
            (n.pointerEvents = "none"),
            (n.position = "absolute");
          const e = document.createElement("div"),
            i = e.style;
          (i.width = "2px"),
            (i.height = "1px"),
            t.appendChild(e),
            document.body.appendChild(t),
            (Ou = 0),
            0 === t.scrollLeft &&
              ((t.scrollLeft = 1), (Ou = 0 === t.scrollLeft ? 1 : 2)),
            t.remove();
        }
        return Ou;
      }
      function _A(t) {
        if (
          (function F5() {
            if (null == A_) {
              const t = typeof document < "u" ? document.head : null;
              A_ = !(!t || (!t.createShadowRoot && !t.attachShadow));
            }
            return A_;
          })()
        ) {
          const n = t.getRootNode ? t.getRootNode() : null;
          if (typeof ShadowRoot < "u" && ShadowRoot && n instanceof ShadowRoot)
            return n;
        }
        return null;
      }
      function k_() {
        let t =
          typeof document < "u" && document ? document.activeElement : null;
        for (; t && t.shadowRoot; ) {
          const n = t.shadowRoot.activeElement;
          if (n === t) break;
          t = n;
        }
        return t;
      }
      function jr(t) {
        return t.composedPath ? t.composedPath()[0] : t.target;
      }
      function T_() {
        return (
          (typeof __karma__ < "u" && !!__karma__) ||
          (typeof jasmine < "u" && !!jasmine) ||
          (typeof jest < "u" && !!jest) ||
          (typeof Mocha < "u" && !!Mocha)
        );
      }
      function Mn(t, ...n) {
        return n.length
          ? n.some((e) => t[e])
          : t.altKey || t.shiftKey || t.ctrlKey || t.metaKey;
      }
      function Nu(t, n = lu) {
        return Ze((e, i) => {
          let r = null,
            s = null,
            o = null;
          const a = () => {
            if (r) {
              r.unsubscribe(), (r = null);
              const c = s;
              (s = null), i.next(c);
            }
          };
          function l() {
            const c = o + t,
              d = n.now();
            if (d < c) return (r = this.schedule(void 0, c - d)), void i.add(r);
            a();
          }
          e.subscribe(
            Ye(
              i,
              (c) => {
                (s = c), (o = n.now()), r || ((r = n.schedule(l, t)), i.add(r));
              },
              () => {
                a(), i.complete();
              },
              void 0,
              () => {
                s = r = null;
              }
            )
          );
        });
      }
      function CA(t) {
        return ve((n, e) => t <= e);
      }
      function xA(t, n = gr) {
        return (
          (t = t ?? W5),
          Ze((e, i) => {
            let r,
              s = !0;
            e.subscribe(
              Ye(i, (o) => {
                const a = n(o);
                (s || !t(r, a)) && ((s = !1), (r = a), i.next(o));
              })
            );
          })
        );
      }
      function W5(t, n) {
        return t === n;
      }
      function ye(t) {
        return Ze((n, e) => {
          Nt(t).subscribe(Ye(e, () => e.complete(), na)),
            !e.closed && n.subscribe(e);
        });
      }
      function $(t) {
        return null != t && "false" != `${t}`;
      }
      function $t(t, n = 0) {
        return (function q5(t) {
          return !isNaN(parseFloat(t)) && !isNaN(Number(t));
        })(t)
          ? Number(t)
          : n;
      }
      function Bu(t) {
        return Array.isArray(t) ? t : [t];
      }
      function St(t) {
        return null == t ? "" : "string" == typeof t ? t : `${t}px`;
      }
      function ws(t) {
        return t instanceof T ? t.nativeElement : t;
      }
      let wA = (() => {
          class t {
            create(e) {
              return typeof MutationObserver > "u"
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        Ml = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [wA] })),
            t
          );
        })();
      const MA = new Set();
      let Ho,
        Q5 = (() => {
          class t {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : Z5);
            }
            matchMedia(e) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function K5(t) {
                    if (!MA.has(t))
                      try {
                        Ho ||
                          ((Ho = document.createElement("style")),
                          Ho.setAttribute("type", "text/css"),
                          document.head.appendChild(Ho)),
                          Ho.sheet &&
                            (Ho.sheet.insertRule(`@media ${t} {body{ }}`, 0),
                            MA.add(t));
                      } catch (n) {
                        console.error(n);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Vt));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      function Z5(t) {
        return {
          matches: "all" === t || "" === t,
          media: t,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let SA = (() => {
        class t {
          constructor(e, i) {
            (this._mediaMatcher = e),
              (this._zone = i),
              (this._queries = new Map()),
              (this._destroySubject = new B());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return EA(Bu(e)).some((r) => this._registerQuery(r).mql.matches);
          }
          observe(e) {
            let s = og(EA(Bu(e)).map((o) => this._registerQuery(o).observable));
            return (
              (s = Ir(s.pipe(ke(1)), s.pipe(CA(1), Nu(0)))),
              s.pipe(
                q((o) => {
                  const a = { matches: !1, breakpoints: {} };
                  return (
                    o.forEach(({ matches: l, query: c }) => {
                      (a.matches = a.matches || l), (a.breakpoints[c] = l);
                    }),
                    a
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const i = this._mediaMatcher.matchMedia(e),
              s = {
                observable: new Pe((o) => {
                  const a = (l) => this._zone.run(() => o.next(l));
                  return (
                    i.addListener(a),
                    () => {
                      i.removeListener(a);
                    }
                  );
                }).pipe(
                  xn(i),
                  q(({ matches: o }) => ({ query: e, matches: o })),
                  ye(this._destroySubject)
                ),
                mql: i,
              };
            return this._queries.set(e, s), s;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Q5), _(Y));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function EA(t) {
        return t
          .map((n) => n.split(","))
          .reduce((n, e) => n.concat(e))
          .map((n) => n.trim());
      }
      class F_ extends class e8 {
        constructor(n) {
          (this._items = n),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new B()),
            (this._typeaheadSubscription = Ve.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new B()),
            (this.change = new B()),
            n instanceof os &&
              n.changes.subscribe((e) => {
                if (this._activeItem) {
                  const r = e.toArray().indexOf(this._activeItem);
                  r > -1 &&
                    r !== this._activeItemIndex &&
                    (this._activeItemIndex = r);
                }
              });
        }
        skipPredicate(n) {
          return (this._skipPredicateFn = n), this;
        }
        withWrap(n = !0) {
          return (this._wrap = n), this;
        }
        withVerticalOrientation(n = !0) {
          return (this._vertical = n), this;
        }
        withHorizontalOrientation(n) {
          return (this._horizontal = n), this;
        }
        withAllowedModifierKeys(n) {
          return (this._allowedModifierKeys = n), this;
        }
        withTypeAhead(n = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                it((e) => this._pressedLetters.push(e)),
                Nu(n),
                ve(() => this._pressedLetters.length > 0),
                q(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const i = this._getItemsArray();
                for (let r = 1; r < i.length + 1; r++) {
                  const s = (this._activeItemIndex + r) % i.length,
                    o = i[s];
                  if (
                    !this._skipPredicateFn(o) &&
                    0 === o.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(s);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(n = !0) {
          return (this._homeAndEnd = n), this;
        }
        setActiveItem(n) {
          const e = this._activeItem;
          this.updateActiveItem(n),
            this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(n) {
          const e = n.keyCode,
            r = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (s) => !n[s] || this._allowedModifierKeys.indexOf(s) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && r) {
                this.setNextItemActive();
                break;
              }
              return;
            case 38:
              if (this._vertical && r) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && r) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && r) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && r) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (r || Mn(n, "shiftKey")) &&
                (n.key && 1 === n.key.length
                  ? this._letterKeyStream.next(n.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), n.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(n) {
          const e = this._getItemsArray(),
            i = "number" == typeof n ? n : e.indexOf(n);
          (this._activeItem = e[i] ?? null), (this._activeItemIndex = i);
        }
        _setActiveItemByDelta(n) {
          this._wrap
            ? this._setActiveInWrapMode(n)
            : this._setActiveInDefaultMode(n);
        }
        _setActiveInWrapMode(n) {
          const e = this._getItemsArray();
          for (let i = 1; i <= e.length; i++) {
            const r = (this._activeItemIndex + n * i + e.length) % e.length;
            if (!this._skipPredicateFn(e[r])) return void this.setActiveItem(r);
          }
        }
        _setActiveInDefaultMode(n) {
          this._setActiveItemByIndex(this._activeItemIndex + n, n);
        }
        _setActiveItemByIndex(n, e) {
          const i = this._getItemsArray();
          if (i[n]) {
            for (; this._skipPredicateFn(i[n]); ) if (!i[(n += e)]) return;
            this.setActiveItem(n);
          }
        }
        _getItemsArray() {
          return this._items instanceof os
            ? this._items.toArray()
            : this._items;
        }
      } {
        constructor() {
          super(...arguments), (this._origin = "program");
        }
        setFocusOrigin(n) {
          return (this._origin = n), this;
        }
        setActiveItem(n) {
          super.setActiveItem(n),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let Sl = (() => {
        class t {
          constructor(e) {
            this._platform = e;
          }
          isDisabled(e) {
            return e.hasAttribute("disabled");
          }
          isVisible(e) {
            return (
              (function n8(t) {
                return !!(
                  t.offsetWidth ||
                  t.offsetHeight ||
                  ("function" == typeof t.getClientRects &&
                    t.getClientRects().length)
                );
              })(e) && "visible" === getComputedStyle(e).visibility
            );
          }
          isTabbable(e) {
            if (!this._platform.isBrowser) return !1;
            const i = (function t8(t) {
              try {
                return t.frameElement;
              } catch {
                return null;
              }
            })(
              (function u8(t) {
                return (
                  (t.ownerDocument && t.ownerDocument.defaultView) || window
                );
              })(e)
            );
            if (i && (-1 === RA(i) || !this.isVisible(i))) return !1;
            let r = e.nodeName.toLowerCase(),
              s = RA(e);
            return e.hasAttribute("contenteditable")
              ? -1 !== s
              : !(
                  "iframe" === r ||
                  "object" === r ||
                  (this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function c8(t) {
                      let n = t.nodeName.toLowerCase(),
                        e = "input" === n && t.type;
                      return (
                        "text" === e ||
                        "password" === e ||
                        "select" === n ||
                        "textarea" === n
                      );
                    })(e))
                ) &&
                  ("audio" === r
                    ? !!e.hasAttribute("controls") && -1 !== s
                    : "video" === r
                    ? -1 !== s &&
                      (null !== s ||
                        this._platform.FIREFOX ||
                        e.hasAttribute("controls"))
                    : e.tabIndex >= 0);
          }
          isFocusable(e, i) {
            return (
              (function d8(t) {
                return (
                  !(function s8(t) {
                    return (
                      (function a8(t) {
                        return "input" == t.nodeName.toLowerCase();
                      })(t) && "hidden" == t.type
                    );
                  })(t) &&
                  ((function r8(t) {
                    let n = t.nodeName.toLowerCase();
                    return (
                      "input" === n ||
                      "select" === n ||
                      "button" === n ||
                      "textarea" === n
                    );
                  })(t) ||
                    (function o8(t) {
                      return (
                        (function l8(t) {
                          return "a" == t.nodeName.toLowerCase();
                        })(t) && t.hasAttribute("href")
                      );
                    })(t) ||
                    t.hasAttribute("contenteditable") ||
                    IA(t))
                );
              })(e) &&
              !this.isDisabled(e) &&
              (i?.ignoreVisibility || this.isVisible(e))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Vt));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function IA(t) {
        if (!t.hasAttribute("tabindex") || void 0 === t.tabIndex) return !1;
        let n = t.getAttribute("tabindex");
        return !(!n || isNaN(parseInt(n, 10)));
      }
      function RA(t) {
        if (!IA(t)) return null;
        const n = parseInt(t.getAttribute("tabindex") || "", 10);
        return isNaN(n) ? -1 : n;
      }
      class h8 {
        constructor(n, e, i, r, s = !1) {
          (this._element = n),
            (this._checker = e),
            (this._ngZone = i),
            (this._document = r),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            s || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(n) {
          (this._enabled = n),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(n, this._startAnchor),
              this._toggleAnchorTabIndex(n, this._endAnchor));
        }
        destroy() {
          const n = this._startAnchor,
            e = this._endAnchor;
          n &&
            (n.removeEventListener("focus", this.startAnchorListener),
            n.remove()),
            e &&
              (e.removeEventListener("focus", this.endAnchorListener),
              e.remove()),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady(n) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement(n)));
          });
        }
        focusFirstTabbableElementWhenReady(n) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement(n)));
          });
        }
        focusLastTabbableElementWhenReady(n) {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement(n)));
          });
        }
        _getRegionBoundary(n) {
          const e = this._element.querySelectorAll(
            `[cdk-focus-region-${n}], [cdkFocusRegion${n}], [cdk-focus-${n}]`
          );
          return "start" == n
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement(n) {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (e) {
            if (!this._checker.isFocusable(e)) {
              const i = this._getFirstTabbableElement(e);
              return i?.focus(n), !!i;
            }
            return e.focus(n), !0;
          }
          return this.focusFirstTabbableElement(n);
        }
        focusFirstTabbableElement(n) {
          const e = this._getRegionBoundary("start");
          return e && e.focus(n), !!e;
        }
        focusLastTabbableElement(n) {
          const e = this._getRegionBoundary("end");
          return e && e.focus(n), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(n) {
          if (this._checker.isFocusable(n) && this._checker.isTabbable(n))
            return n;
          const e = n.children;
          for (let i = 0; i < e.length; i++) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _getLastTabbableElement(n) {
          if (this._checker.isFocusable(n) && this._checker.isTabbable(n))
            return n;
          const e = n.children;
          for (let i = e.length - 1; i >= 0; i--) {
            const r =
              e[i].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(e[i])
                : null;
            if (r) return r;
          }
          return null;
        }
        _createAnchor() {
          const n = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, n),
            n.classList.add("cdk-visually-hidden"),
            n.classList.add("cdk-focus-trap-anchor"),
            n.setAttribute("aria-hidden", "true"),
            n
          );
        }
        _toggleAnchorTabIndex(n, e) {
          n ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex");
        }
        toggleAnchors(n) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(n, this._startAnchor),
            this._toggleAnchorTabIndex(n, this._endAnchor));
        }
        _executeOnStable(n) {
          this._ngZone.isStable
            ? n()
            : this._ngZone.onStable.pipe(ke(1)).subscribe(n);
        }
      }
      let Vu = (() => {
        class t {
          constructor(e, i, r) {
            (this._checker = e), (this._ngZone = i), (this._document = r);
          }
          create(e, i = !1) {
            return new h8(e, this._checker, this._ngZone, this._document, i);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Sl), _(Y), _(Z));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function P_(t) {
        return 0 === t.buttons || (0 === t.offsetX && 0 === t.offsetY);
      }
      function L_(t) {
        const n =
          (t.touches && t.touches[0]) ||
          (t.changedTouches && t.changedTouches[0]);
        return !(
          !n ||
          -1 !== n.identifier ||
          (null != n.radiusX && 1 !== n.radiusX) ||
          (null != n.radiusY && 1 !== n.radiusY)
        );
      }
      const f8 = new C("cdk-input-modality-detector-options"),
        p8 = { ignoreKeys: [18, 17, 224, 91, 16] },
        jo = Hr({ passive: !0, capture: !0 });
      let m8 = (() => {
        class t {
          constructor(e, i, r, s) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new nn(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (o) => {
                this._options?.ignoreKeys?.some((a) => a === o.keyCode) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = jr(o)));
              }),
              (this._onMousedown = (o) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(P_(o) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = jr(o)));
              }),
              (this._onTouchstart = (o) => {
                L_(o)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = jr(o)));
              }),
              (this._options = { ...p8, ...s }),
              (this.modalityDetected = this._modality.pipe(CA(1))),
              (this.modalityChanged = this.modalityDetected.pipe(xA())),
              e.isBrowser &&
                i.runOutsideAngular(() => {
                  r.addEventListener("keydown", this._onKeydown, jo),
                    r.addEventListener("mousedown", this._onMousedown, jo),
                    r.addEventListener("touchstart", this._onTouchstart, jo);
                });
          }
          get mostRecentModality() {
            return this._modality.value;
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener("keydown", this._onKeydown, jo),
                document.removeEventListener(
                  "mousedown",
                  this._onMousedown,
                  jo
                ),
                document.removeEventListener(
                  "touchstart",
                  this._onTouchstart,
                  jo
                ));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Vt), _(Y), _(Z), _(f8, 8));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const _8 = new C("cdk-focus-monitor-default-options"),
        Hu = Hr({ passive: !0, capture: !0 });
      let Sn = (() => {
        class t {
          constructor(e, i, r, s, o) {
            (this._ngZone = e),
              (this._platform = i),
              (this._inputModalityDetector = r),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new B()),
              (this._rootNodeFocusAndBlurListener = (a) => {
                for (let c = jr(a); c; c = c.parentElement)
                  "focus" === a.type ? this._onFocus(a, c) : this._onBlur(a, c);
              }),
              (this._document = s),
              (this._detectionMode = o?.detectionMode || 0);
          }
          monitor(e, i = !1) {
            const r = ws(e);
            if (!this._platform.isBrowser || 1 !== r.nodeType) return N(null);
            const s = _A(r) || this._getDocument(),
              o = this._elementInfo.get(r);
            if (o) return i && (o.checkChildren = !0), o.subject;
            const a = { checkChildren: i, subject: new B(), rootNode: s };
            return (
              this._elementInfo.set(r, a),
              this._registerGlobalListeners(a),
              a.subject
            );
          }
          stopMonitoring(e) {
            const i = ws(e),
              r = this._elementInfo.get(i);
            r &&
              (r.subject.complete(),
              this._setClasses(i),
              this._elementInfo.delete(i),
              this._removeGlobalListeners(r));
          }
          focusVia(e, i, r) {
            const s = ws(e);
            s === this._getDocument().activeElement
              ? this._getClosestElementsInfo(s).forEach(([a, l]) =>
                  this._originChanged(a, i, l)
                )
              : (this._setOrigin(i),
                "function" == typeof s.focus && s.focus(r));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, i) => this.stopMonitoring(i));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : e && this._isLastInteractionFromInputLabel(e)
              ? "mouse"
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!e?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(e, i) {
            e.classList.toggle("cdk-focused", !!i),
              e.classList.toggle("cdk-touch-focused", "touch" === i),
              e.classList.toggle("cdk-keyboard-focused", "keyboard" === i),
              e.classList.toggle("cdk-mouse-focused", "mouse" === i),
              e.classList.toggle("cdk-program-focused", "program" === i);
          }
          _setOrigin(e, i = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && i),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, i) {
            const r = this._elementInfo.get(i),
              s = jr(e);
            !r ||
              (!r.checkChildren && i !== s) ||
              this._originChanged(i, this._getFocusOrigin(s), r);
          }
          _onBlur(e, i) {
            const r = this._elementInfo.get(i);
            !r ||
              (r.checkChildren &&
                e.relatedTarget instanceof Node &&
                i.contains(e.relatedTarget)) ||
              (this._setClasses(i), this._emitOrigin(r, null));
          }
          _emitOrigin(e, i) {
            e.subject.observers.length &&
              this._ngZone.run(() => e.subject.next(i));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const i = e.rootNode,
              r = this._rootNodeFocusListenerCount.get(i) || 0;
            r ||
              this._ngZone.runOutsideAngular(() => {
                i.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  Hu
                ),
                  i.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    Hu
                  );
              }),
              this._rootNodeFocusListenerCount.set(i, r + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(ye(this._stopInputModalityDetector))
                  .subscribe((s) => {
                    this._setOrigin(s, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const i = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(i)) {
              const r = this._rootNodeFocusListenerCount.get(i);
              r > 1
                ? this._rootNodeFocusListenerCount.set(i, r - 1)
                : (i.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    Hu
                  ),
                  i.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    Hu
                  ),
                  this._rootNodeFocusListenerCount.delete(i));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, i, r) {
            this._setClasses(e, i),
              this._emitOrigin(r, i),
              (this._lastFocusOrigin = i);
          }
          _getClosestElementsInfo(e) {
            const i = [];
            return (
              this._elementInfo.forEach((r, s) => {
                (s === e || (r.checkChildren && s.contains(e))) &&
                  i.push([s, r]);
              }),
              i
            );
          }
          _isLastInteractionFromInputLabel(e) {
            const { _mostRecentTarget: i, mostRecentModality: r } =
              this._inputModalityDetector;
            if (
              "mouse" !== r ||
              !i ||
              i === e ||
              ("INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName) ||
              e.disabled
            )
              return !1;
            const s = e.labels;
            if (s)
              for (let o = 0; o < s.length; o++)
                if (s[o].contains(i)) return !0;
            return !1;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Y), _(Vt), _(m8), _(Z, 8), _(_8, 8));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const FA = "cdk-high-contrast-black-on-white",
        PA = "cdk-high-contrast-white-on-black",
        N_ = "cdk-high-contrast-active";
      let LA = (() => {
          class t {
            constructor(e, i) {
              (this._platform = e),
                (this._document = i),
                (this._breakpointSubscription = Ge(SA)
                  .observe("(forced-colors: active)")
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const i = this._document.defaultView || window,
                r = i && i.getComputedStyle ? i.getComputedStyle(e) : null,
                s = ((r && r.backgroundColor) || "").replace(/ /g, "");
              switch ((e.remove(), s)) {
                case "rgb(0,0,0)":
                  return 2;
                case "rgb(255,255,255)":
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove(N_, FA, PA), (this._hasCheckedHighContrastMode = !0);
                const i = this.getHighContrastMode();
                1 === i ? e.add(N_, FA) : 2 === i && e.add(N_, PA);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Vt), _(Z));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        Go = (() => {
          class t {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(LA));
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Ml] })),
            t
          );
        })();
      const v8 = new C("cdk-dir-doc", {
          providedIn: "root",
          factory: function y8() {
            return Ge(Z);
          },
        }),
        b8 =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let En = (() => {
          class t {
            constructor(e) {
              if (((this.value = "ltr"), (this.change = new W()), e)) {
                const r = e.documentElement ? e.documentElement.dir : null;
                this.value = (function C8(t) {
                  const n = t?.toLowerCase() || "";
                  return "auto" === n &&
                    typeof navigator < "u" &&
                    navigator?.language
                    ? b8.test(navigator.language)
                      ? "rtl"
                      : "ltr"
                    : "rtl" === n
                    ? "rtl"
                    : "ltr";
                })((e.body ? e.body.dir : null) || r || "ltr");
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(v8, 8));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        Ds = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })();
      const M8 = new C("mat-sanity-checks", {
        providedIn: "root",
        factory: function D8() {
          return !0;
        },
      });
      let U = (() => {
        class t {
          constructor(e, i, r) {
            (this._sanityChecks = i),
              (this._document = r),
              (this._hasDoneGlobalChecks = !1),
              e._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(e) {
            return (
              !T_() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[e])
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(LA), _(M8, 8), _(Z));
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({ imports: [Ds, Ds] })),
          t
        );
      })();
      function Ms(t) {
        return class extends t {
          constructor(...n) {
            super(...n), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(n) {
            this._disabled = $(n);
          }
        };
      }
      function Gr(t, n) {
        return class extends t {
          constructor(...e) {
            super(...e), (this.defaultColor = n), (this.color = n);
          }
          get color() {
            return this._color;
          }
          set color(e) {
            const i = e || this.defaultColor;
            i !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              i && this._elementRef.nativeElement.classList.add(`mat-${i}`),
              (this._color = i));
          }
        };
      }
      function li(t) {
        return class extends t {
          constructor(...n) {
            super(...n), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(n) {
            this._disableRipple = $(n);
          }
        };
      }
      const E8 = new C("MAT_DATE_LOCALE", {
        providedIn: "root",
        factory: function A8() {
          return Ge(wi);
        },
      });
      class Ti {
        constructor() {
          (this._localeChanges = new B()),
            (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(n) {
          return this.isDateInstance(n) && this.isValid(n) ? n : null;
        }
        deserialize(n) {
          return null == n || (this.isDateInstance(n) && this.isValid(n))
            ? n
            : this.invalid();
        }
        setLocale(n) {
          (this.locale = n), this._localeChanges.next();
        }
        compareDate(n, e) {
          return (
            this.getYear(n) - this.getYear(e) ||
            this.getMonth(n) - this.getMonth(e) ||
            this.getDate(n) - this.getDate(e)
          );
        }
        sameDate(n, e) {
          if (n && e) {
            let i = this.isValid(n),
              r = this.isValid(e);
            return i && r ? !this.compareDate(n, e) : i == r;
          }
          return n == e;
        }
        clampDate(n, e, i) {
          return e && this.compareDate(n, e) < 0
            ? e
            : i && this.compareDate(n, i) > 0
            ? i
            : n;
        }
      }
      const B_ = new C("mat-date-formats"),
        k8 =
          /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function V_(t, n) {
        const e = Array(t);
        for (let i = 0; i < t; i++) e[i] = n(i);
        return e;
      }
      let T8 = (() => {
        class t extends Ti {
          constructor(e, i) {
            super(), (this.useUtcForDisplay = !1), super.setLocale(e);
          }
          getYear(e) {
            return e.getFullYear();
          }
          getMonth(e) {
            return e.getMonth();
          }
          getDate(e) {
            return e.getDate();
          }
          getDayOfWeek(e) {
            return e.getDay();
          }
          getMonthNames(e) {
            const i = new Intl.DateTimeFormat(this.locale, {
              month: e,
              timeZone: "utc",
            });
            return V_(12, (r) => this._format(i, new Date(2017, r, 1)));
          }
          getDateNames() {
            const e = new Intl.DateTimeFormat(this.locale, {
              day: "numeric",
              timeZone: "utc",
            });
            return V_(31, (i) => this._format(e, new Date(2017, 0, i + 1)));
          }
          getDayOfWeekNames(e) {
            const i = new Intl.DateTimeFormat(this.locale, {
              weekday: e,
              timeZone: "utc",
            });
            return V_(7, (r) => this._format(i, new Date(2017, 0, r + 1)));
          }
          getYearName(e) {
            const i = new Intl.DateTimeFormat(this.locale, {
              year: "numeric",
              timeZone: "utc",
            });
            return this._format(i, e);
          }
          getFirstDayOfWeek() {
            return 0;
          }
          getNumDaysInMonth(e) {
            return this.getDate(
              this._createDateWithOverflow(
                this.getYear(e),
                this.getMonth(e) + 1,
                0
              )
            );
          }
          clone(e) {
            return new Date(e.getTime());
          }
          createDate(e, i, r) {
            let s = this._createDateWithOverflow(e, i, r);
            return s.getMonth(), s;
          }
          today() {
            return new Date();
          }
          parse(e, i) {
            return "number" == typeof e
              ? new Date(e)
              : e
              ? new Date(Date.parse(e))
              : null;
          }
          format(e, i) {
            if (!this.isValid(e))
              throw Error("NativeDateAdapter: Cannot format invalid date.");
            const r = new Intl.DateTimeFormat(this.locale, {
              ...i,
              timeZone: "utc",
            });
            return this._format(r, e);
          }
          addCalendarYears(e, i) {
            return this.addCalendarMonths(e, 12 * i);
          }
          addCalendarMonths(e, i) {
            let r = this._createDateWithOverflow(
              this.getYear(e),
              this.getMonth(e) + i,
              this.getDate(e)
            );
            return (
              this.getMonth(r) != (((this.getMonth(e) + i) % 12) + 12) % 12 &&
                (r = this._createDateWithOverflow(
                  this.getYear(r),
                  this.getMonth(r),
                  0
                )),
              r
            );
          }
          addCalendarDays(e, i) {
            return this._createDateWithOverflow(
              this.getYear(e),
              this.getMonth(e),
              this.getDate(e) + i
            );
          }
          toIso8601(e) {
            return [
              e.getUTCFullYear(),
              this._2digit(e.getUTCMonth() + 1),
              this._2digit(e.getUTCDate()),
            ].join("-");
          }
          deserialize(e) {
            if ("string" == typeof e) {
              if (!e) return null;
              if (k8.test(e)) {
                let i = new Date(e);
                if (this.isValid(i)) return i;
              }
            }
            return super.deserialize(e);
          }
          isDateInstance(e) {
            return e instanceof Date;
          }
          isValid(e) {
            return !isNaN(e.getTime());
          }
          invalid() {
            return new Date(NaN);
          }
          _createDateWithOverflow(e, i, r) {
            const s = new Date();
            return s.setFullYear(e, i, r), s.setHours(0, 0, 0, 0), s;
          }
          _2digit(e) {
            return ("00" + e).slice(-2);
          }
          _format(e, i) {
            const r = new Date();
            return (
              r.setUTCFullYear(i.getFullYear(), i.getMonth(), i.getDate()),
              r.setUTCHours(
                i.getHours(),
                i.getMinutes(),
                i.getSeconds(),
                i.getMilliseconds()
              ),
              e.format(r)
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(E8, 8), _(Vt));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const I8 = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: "numeric", month: "numeric", day: "numeric" },
          monthYearLabel: { year: "numeric", month: "short" },
          dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
          monthYearA11yLabel: { year: "numeric", month: "long" },
        },
      };
      let R8 = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [{ provide: Ti, useClass: T8 }] })),
            t
          );
        })(),
        VA = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({
              providers: [{ provide: B_, useValue: I8 }],
              imports: [R8],
            })),
            t
          );
        })(),
        ju = (() => {
          class t {
            isErrorState(e, i) {
              return !!(e && e.invalid && (e.touched || (i && i.submitted)));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        HA = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "mat-line", ""],
                ["", "matLine", ""],
              ],
              hostAttrs: [1, "mat-line"],
            })),
            t
          );
        })();
      function El(t, n, e) {
        t.nativeElement.classList.toggle(n, e);
      }
      let Al = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({ imports: [U, U] })),
          t
        );
      })();
      class O8 {
        constructor(n, e, i, r = !1) {
          (this._renderer = n),
            (this.element = e),
            (this.config = i),
            (this._animationForciblyDisabledThroughCss = r),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const GA = { enterDuration: 225, exitDuration: 150 },
        H_ = Hr({ passive: !0 }),
        UA = ["mousedown", "touchstart"],
        zA = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class $A {
        constructor(n, e, i, r) {
          (this._target = n),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = ws(i));
        }
        fadeInRipple(n, e, i = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            s = { ...GA, ...i.animation };
          i.centered &&
            ((n = r.left + r.width / 2), (e = r.top + r.height / 2));
          const o =
              i.radius ||
              (function P8(t, n, e) {
                const i = Math.max(Math.abs(t - e.left), Math.abs(t - e.right)),
                  r = Math.max(Math.abs(n - e.top), Math.abs(n - e.bottom));
                return Math.sqrt(i * i + r * r);
              })(n, e, r),
            a = n - r.left,
            l = e - r.top,
            c = s.enterDuration,
            d = document.createElement("div");
          d.classList.add("mat-ripple-element"),
            (d.style.left = a - o + "px"),
            (d.style.top = l - o + "px"),
            (d.style.height = 2 * o + "px"),
            (d.style.width = 2 * o + "px"),
            null != i.color && (d.style.backgroundColor = i.color),
            (d.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(d);
          const u = window.getComputedStyle(d),
            p = u.transitionDuration,
            m = "none" === u.transitionProperty || "0s" === p || "0s, 0s" === p,
            g = new O8(this, d, i, m);
          (d.style.transform = "scale3d(1, 1, 1)"),
            (g.state = 0),
            i.persistent || (this._mostRecentTransientRipple = g);
          let v = null;
          return (
            !m &&
              (c || s.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const b = () => this._finishRippleTransition(g),
                  k = () => this._destroyRipple(g);
                d.addEventListener("transitionend", b),
                  d.addEventListener("transitioncancel", k),
                  (v = { onTransitionEnd: b, onTransitionCancel: k });
              }),
            this._activeRipples.set(g, v),
            (m || !c) && this._finishRippleTransition(g),
            g
          );
        }
        fadeOutRipple(n) {
          if (2 === n.state || 3 === n.state) return;
          const e = n.element,
            i = { ...GA, ...n.config.animation };
          (e.style.transitionDuration = `${i.exitDuration}ms`),
            (e.style.opacity = "0"),
            (n.state = 2),
            (n._animationForciblyDisabledThroughCss || !i.exitDuration) &&
              this._finishRippleTransition(n);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((n) => n.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((n) => {
            n.config.persistent || n.fadeOut();
          });
        }
        setupTriggerEvents(n) {
          const e = ws(n);
          !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            this._registerEvents(UA));
        }
        handleEvent(n) {
          "mousedown" === n.type
            ? this._onMousedown(n)
            : "touchstart" === n.type
            ? this._onTouchStart(n)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(zA),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(n) {
          0 === n.state
            ? this._startFadeOutTransition(n)
            : 2 === n.state && this._destroyRipple(n);
        }
        _startFadeOutTransition(n) {
          const e = n === this._mostRecentTransientRipple,
            { persistent: i } = n.config;
          (n.state = 1), !i && (!e || !this._isPointerDown) && n.fadeOut();
        }
        _destroyRipple(n) {
          const e = this._activeRipples.get(n) ?? null;
          this._activeRipples.delete(n),
            this._activeRipples.size || (this._containerRect = null),
            n === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (n.state = 3),
            null !== e &&
              (n.element.removeEventListener(
                "transitionend",
                e.onTransitionEnd
              ),
              n.element.removeEventListener(
                "transitioncancel",
                e.onTransitionCancel
              )),
            n.element.remove();
        }
        _onMousedown(n) {
          const e = P_(n),
            i =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !i &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(n.clientX, n.clientY, this._target.rippleConfig));
        }
        _onTouchStart(n) {
          if (!this._target.rippleDisabled && !L_(n)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = n.changedTouches;
            for (let i = 0; i < e.length; i++)
              this.fadeInRipple(
                e[i].clientX,
                e[i].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          !this._isPointerDown ||
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((n) => {
              !n.config.persistent &&
                (1 === n.state ||
                  (n.config.terminateOnPointerUp && 0 === n.state)) &&
                n.fadeOut();
            }));
        }
        _registerEvents(n) {
          this._ngZone.runOutsideAngular(() => {
            n.forEach((e) => {
              this._triggerElement.addEventListener(e, this, H_);
            });
          });
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (UA.forEach((n) => {
              this._triggerElement.removeEventListener(n, this, H_);
            }),
            this._pointerUpEventsRegistered &&
              zA.forEach((n) => {
                this._triggerElement.removeEventListener(n, this, H_);
              }));
        }
      }
      const WA = new C("mat-ripple-global-options");
      let Ii = (() => {
          class t {
            constructor(e, i, r, s, o) {
              (this._elementRef = e),
                (this._animationMode = o),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = s || {}),
                (this._rippleRenderer = new $A(this, i, e, r));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...("NoopAnimations" === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, i = 0, r) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(e, i, {
                    ...this.rippleConfig,
                    ...r,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...e,
                  });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Y), h(Vt), h(WA, 8), h(en, 8));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e && Se("mat-ripple-unbounded", i.unbounded);
              },
              inputs: {
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                radius: ["matRippleRadius", "radius"],
                animation: ["matRippleAnimation", "animation"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
              },
              exportAs: ["matRipple"],
            })),
            t
          );
        })(),
        Wn = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U, U] })),
            t
          );
        })(),
        Gu = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U] })),
            t
          );
        })(),
        kl = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Wn, nt, U, Gu] })),
            t
          );
        })();
      const Tl = {
        schedule(t) {
          let n = requestAnimationFrame,
            e = cancelAnimationFrame;
          const { delegate: i } = Tl;
          i && ((n = i.requestAnimationFrame), (e = i.cancelAnimationFrame));
          const r = n((s) => {
            (e = void 0), t(s);
          });
          return new Ve(() => e?.(r));
        },
        requestAnimationFrame(...t) {
          const { delegate: n } = Tl;
          return (n?.requestAnimationFrame || requestAnimationFrame)(...t);
        },
        cancelAnimationFrame(...t) {
          const { delegate: n } = Tl;
          return (n?.cancelAnimationFrame || cancelAnimationFrame)(...t);
        },
        delegate: void 0,
      };
      new (class j8 extends Wg {
        flush(n) {
          this._active = !0;
          const e = this._scheduled;
          this._scheduled = void 0;
          const { actions: i } = this;
          let r;
          n = n || i.shift();
          do {
            if ((r = n.execute(n.state, n.delay))) break;
          } while ((n = i[0]) && n.id === e && i.shift());
          if (((this._active = !1), r)) {
            for (; (n = i[0]) && n.id === e && i.shift(); ) n.unsubscribe();
            throw r;
          }
        }
      })(
        class H8 extends zg {
          constructor(n, e) {
            super(n, e), (this.scheduler = n), (this.work = e);
          }
          requestAsyncId(n, e, i = 0) {
            return null !== i && i > 0
              ? super.requestAsyncId(n, e, i)
              : (n.actions.push(this),
                n._scheduled ||
                  (n._scheduled = Tl.requestAnimationFrame(() =>
                    n.flush(void 0)
                  )));
          }
          recycleAsyncId(n, e, i = 0) {
            var r;
            if (null != i ? i > 0 : this.delay > 0)
              return super.recycleAsyncId(n, e, i);
            const { actions: s } = n;
            null != e &&
              (null === (r = s[s.length - 1]) || void 0 === r
                ? void 0
                : r.id) !== e &&
              (Tl.cancelAnimationFrame(e), (n._scheduled = void 0));
          }
        }
      );
      let j_,
        U8 = 1;
      const Uu = {};
      function qA(t) {
        return t in Uu && (delete Uu[t], !0);
      }
      const z8 = {
          setImmediate(t) {
            const n = U8++;
            return (
              (Uu[n] = !0),
              j_ || (j_ = Promise.resolve()),
              j_.then(() => qA(n) && t()),
              n
            );
          },
          clearImmediate(t) {
            qA(t);
          },
        },
        { setImmediate: $8, clearImmediate: W8 } = z8,
        zu = {
          setImmediate(...t) {
            const { delegate: n } = zu;
            return (n?.setImmediate || $8)(...t);
          },
          clearImmediate(t) {
            const { delegate: n } = zu;
            return (n?.clearImmediate || W8)(t);
          },
          delegate: void 0,
        },
        G_ = new (class Y8 extends Wg {
          flush(n) {
            this._active = !0;
            const e = this._scheduled;
            this._scheduled = void 0;
            const { actions: i } = this;
            let r;
            n = n || i.shift();
            do {
              if ((r = n.execute(n.state, n.delay))) break;
            } while ((n = i[0]) && n.id === e && i.shift());
            if (((this._active = !1), r)) {
              for (; (n = i[0]) && n.id === e && i.shift(); ) n.unsubscribe();
              throw r;
            }
          }
        })(
          class q8 extends zg {
            constructor(n, e) {
              super(n, e), (this.scheduler = n), (this.work = e);
            }
            requestAsyncId(n, e, i = 0) {
              return null !== i && i > 0
                ? super.requestAsyncId(n, e, i)
                : (n.actions.push(this),
                  n._scheduled ||
                    (n._scheduled = zu.setImmediate(n.flush.bind(n, void 0))));
            }
            recycleAsyncId(n, e, i = 0) {
              var r;
              if (null != i ? i > 0 : this.delay > 0)
                return super.recycleAsyncId(n, e, i);
              const { actions: s } = n;
              null != e &&
                (null === (r = s[s.length - 1]) || void 0 === r
                  ? void 0
                  : r.id) !== e &&
                (zu.clearImmediate(e),
                n._scheduled === e && (n._scheduled = void 0));
            }
          }
        );
      function YA(t, n = lu) {
        return (function Q8(t) {
          return Ze((n, e) => {
            let i = !1,
              r = null,
              s = null,
              o = !1;
            const a = () => {
                if ((s?.unsubscribe(), (s = null), i)) {
                  i = !1;
                  const c = r;
                  (r = null), e.next(c);
                }
                o && e.complete();
              },
              l = () => {
                (s = null), o && e.complete();
              };
            n.subscribe(
              Ye(
                e,
                (c) => {
                  (i = !0), (r = c), s || Nt(t(c)).subscribe((s = Ye(e, a, l)));
                },
                () => {
                  (o = !0), (!i || !s || s.closed) && e.complete();
                }
              )
            );
          });
        })(() => mE(t, n));
      }
      let $u = (() => {
          class t {
            constructor(e, i, r) {
              (this._ngZone = e),
                (this._platform = i),
                (this._scrolled = new B()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const i = this.scrollContainers.get(e);
              i && (i.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new Pe((i) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      e > 0
                        ? this._scrolled.pipe(YA(e)).subscribe(i)
                        : this._scrolled.subscribe(i);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : N();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, i) => this.deregister(i)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, i) {
              const r = this.getAncestorScrollContainers(e);
              return this.scrolled(i).pipe(ve((s) => !s || r.indexOf(s) > -1));
            }
            getAncestorScrollContainers(e) {
              const i = [];
              return (
                this.scrollContainers.forEach((r, s) => {
                  this._scrollableContainsElement(s, e) && i.push(s);
                }),
                i
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, i) {
              let r = ws(i),
                s = e.getElementRef().nativeElement;
              do {
                if (r == s) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                Ei(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Y), _(Vt), _(Z, 8));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        Il = (() => {
          class t {
            constructor(e, i, r, s) {
              (this.elementRef = e),
                (this.scrollDispatcher = i),
                (this.ngZone = r),
                (this.dir = s),
                (this._destroyed = new B()),
                (this._elementScrolled = new Pe((o) =>
                  this.ngZone.runOutsideAngular(() =>
                    Ei(this.elementRef.nativeElement, "scroll")
                      .pipe(ye(this._destroyed))
                      .subscribe(o)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(e) {
              const i = this.elementRef.nativeElement,
                r = this.dir && "rtl" == this.dir.value;
              null == e.left && (e.left = r ? e.end : e.start),
                null == e.right && (e.right = r ? e.start : e.end),
                null != e.bottom &&
                  (e.top = i.scrollHeight - i.clientHeight - e.bottom),
                r && 0 != Dl()
                  ? (null != e.left &&
                      (e.right = i.scrollWidth - i.clientWidth - e.left),
                    2 == Dl()
                      ? (e.left = e.right)
                      : 1 == Dl() && (e.left = e.right ? -e.right : e.right))
                  : null != e.right &&
                    (e.left = i.scrollWidth - i.clientWidth - e.right),
                this._applyScrollToOptions(e);
            }
            _applyScrollToOptions(e) {
              const i = this.elementRef.nativeElement;
              gA()
                ? i.scrollTo(e)
                : (null != e.top && (i.scrollTop = e.top),
                  null != e.left && (i.scrollLeft = e.left));
            }
            measureScrollOffset(e) {
              const i = "left",
                r = "right",
                s = this.elementRef.nativeElement;
              if ("top" == e) return s.scrollTop;
              if ("bottom" == e)
                return s.scrollHeight - s.clientHeight - s.scrollTop;
              const o = this.dir && "rtl" == this.dir.value;
              return (
                "start" == e ? (e = o ? r : i) : "end" == e && (e = o ? i : r),
                o && 2 == Dl()
                  ? e == i
                    ? s.scrollWidth - s.clientWidth - s.scrollLeft
                    : s.scrollLeft
                  : o && 1 == Dl()
                  ? e == i
                    ? s.scrollLeft + s.scrollWidth - s.clientWidth
                    : -s.scrollLeft
                  : e == i
                  ? s.scrollLeft
                  : s.scrollWidth - s.clientWidth - s.scrollLeft
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h($u), h(Y), h(En, 8));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "cdk-scrollable", ""],
                ["", "cdkScrollable", ""],
              ],
            })),
            t
          );
        })(),
        zo = (() => {
          class t {
            constructor(e, i, r) {
              (this._platform = e),
                (this._change = new B()),
                (this._changeListener = (s) => {
                  this._change.next(s);
                }),
                (this._document = r),
                i.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const s = this._getWindow();
                    s.addEventListener("resize", this._changeListener),
                      s.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: i, height: r } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + r,
                right: e.left + i,
                height: r,
                width: i,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                i = this._getWindow(),
                r = e.documentElement,
                s = r.getBoundingClientRect();
              return {
                top:
                  -s.top || e.body.scrollTop || i.scrollY || r.scrollTop || 0,
                left:
                  -s.left ||
                  e.body.scrollLeft ||
                  i.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(YA(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Vt), _(Y), _(Z, 8));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        or = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })(),
        Wu = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Ds, or, Ds, or] })),
            t
          );
        })();
      class U_ {
        attach(n) {
          return (this._attachedHost = n), n.attach(this);
        }
        detach() {
          let n = this._attachedHost;
          null != n && ((this._attachedHost = null), n.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(n) {
          this._attachedHost = n;
        }
      }
      class z_ extends U_ {
        constructor(n, e, i, r) {
          super(),
            (this.component = n),
            (this.viewContainerRef = e),
            (this.injector = i),
            (this.componentFactoryResolver = r);
        }
      }
      class qu extends U_ {
        constructor(n, e, i, r) {
          super(),
            (this.templateRef = n),
            (this.viewContainerRef = e),
            (this.context = i),
            (this.injector = r);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(n, e = this.context) {
          return (this.context = e), super.attach(n);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class X8 extends U_ {
        constructor(n) {
          super(), (this.element = n instanceof T ? n.nativeElement : n);
        }
      }
      class $_ {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(n) {
          return n instanceof z_
            ? ((this._attachedPortal = n), this.attachComponentPortal(n))
            : n instanceof qu
            ? ((this._attachedPortal = n), this.attachTemplatePortal(n))
            : this.attachDomPortal && n instanceof X8
            ? ((this._attachedPortal = n), this.attachDomPortal(n))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(n) {
          this._disposeFn = n;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class J8 extends $_ {
        constructor(n, e, i, r, s) {
          super(),
            (this.outletElement = n),
            (this._componentFactoryResolver = e),
            (this._appRef = i),
            (this._defaultInjector = r),
            (this.attachDomPortal = (o) => {
              const a = o.element,
                l = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(l, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = o),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(a, l);
                });
            }),
            (this._document = s);
        }
        attachComponentPortal(n) {
          const i = (
            n.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(n.component);
          let r;
          return (
            n.viewContainerRef
              ? ((r = n.viewContainerRef.createComponent(
                  i,
                  n.viewContainerRef.length,
                  n.injector || n.viewContainerRef.injector
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = i.create(n.injector || this._defaultInjector || gt.NULL)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(r.hostView),
                    r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = n),
            r
          );
        }
        attachTemplatePortal(n) {
          let e = n.viewContainerRef,
            i = e.createEmbeddedView(n.templateRef, n.context, {
              injector: n.injector,
            });
          return (
            i.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            i.detectChanges(),
            this.setDisposeFn(() => {
              let r = e.indexOf(i);
              -1 !== r && e.remove(r);
            }),
            (this._attachedPortal = n),
            i
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(n) {
          return n.hostView.rootNodes[0];
        }
      }
      let W_ = (() => {
          class t extends $_ {
            constructor(e, i, r) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = i),
                (this._isInitialized = !1),
                (this.attached = new W()),
                (this.attachDomPortal = (s) => {
                  const o = s.element,
                    a = this._document.createComment("dom-portal");
                  s.setAttachedHost(this),
                    o.parentNode.insertBefore(a, o),
                    this._getRootNode().appendChild(o),
                    (this._attachedPortal = s),
                    super.setDisposeFn(() => {
                      a.parentNode && a.parentNode.replaceChild(o, a);
                    });
                }),
                (this._document = r);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedPortal = null),
                (this._attachedRef = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const i =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                s = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                o = i.createComponent(s, i.length, e.injector || i.injector);
              return (
                i !== this._viewContainerRef &&
                  this._getRootNode().appendChild(o.hostView.rootNodes[0]),
                super.setDisposeFn(() => o.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = o),
                this.attached.emit(o),
                o
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const i = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context,
                { injector: e.injector }
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(es), h(_t), h(Z));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [x],
            })),
            t
          );
        })(),
        Ri = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })();
      const QA = gA();
      class e4 {
        constructor(n, e) {
          (this._viewportRuler = n),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const n = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = n.style.left || ""),
              (this._previousHTMLStyles.top = n.style.top || ""),
              (n.style.left = St(-this._previousScrollPosition.left)),
              (n.style.top = St(-this._previousScrollPosition.top)),
              n.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const n = this._document.documentElement,
              i = n.style,
              r = this._document.body.style,
              s = i.scrollBehavior || "",
              o = r.scrollBehavior || "";
            (this._isEnabled = !1),
              (i.left = this._previousHTMLStyles.left),
              (i.top = this._previousHTMLStyles.top),
              n.classList.remove("cdk-global-scrollblock"),
              QA && (i.scrollBehavior = r.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              QA && ((i.scrollBehavior = s), (r.scrollBehavior = o));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            i = this._viewportRuler.getViewportSize();
          return e.scrollHeight > i.height || e.scrollWidth > i.width;
        }
      }
      class t4 {
        constructor(n, e, i, r) {
          (this._scrollDispatcher = n),
            (this._ngZone = e),
            (this._viewportRuler = i),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(n) {
          this._overlayRef = n;
        }
        enable() {
          if (this._scrollSubscription) return;
          const n = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = n.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = n.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class KA {
        enable() {}
        disable() {}
        attach() {}
      }
      function q_(t, n) {
        return n.some(
          (e) =>
            t.bottom < e.top ||
            t.top > e.bottom ||
            t.right < e.left ||
            t.left > e.right
        );
      }
      function ZA(t, n) {
        return n.some(
          (e) =>
            t.top < e.top ||
            t.bottom > e.bottom ||
            t.left < e.left ||
            t.right > e.right
        );
      }
      class n4 {
        constructor(n, e, i, r) {
          (this._scrollDispatcher = n),
            (this._viewportRuler = e),
            (this._ngZone = i),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(n) {
          this._overlayRef = n;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: i, height: r } =
                      this._viewportRuler.getViewportSize();
                  q_(e, [
                    {
                      width: i,
                      height: r,
                      bottom: r,
                      right: i,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let r4 = (() => {
        class t {
          constructor(e, i, r, s) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = i),
              (this._ngZone = r),
              (this.noop = () => new KA()),
              (this.close = (o) =>
                new t4(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  o
                )),
              (this.block = () => new e4(this._viewportRuler, this._document)),
              (this.reposition = (o) =>
                new n4(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  o
                )),
              (this._document = s);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_($u), _(zo), _(Y), _(Z));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      class Yu {
        constructor(n) {
          if (
            ((this.scrollStrategy = new KA()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            n)
          ) {
            const e = Object.keys(n);
            for (const i of e) void 0 !== n[i] && (this[i] = n[i]);
          }
        }
      }
      class s4 {
        constructor(n, e) {
          (this.connectionPair = n), (this.scrollableViewProperties = e);
        }
      }
      let XA = (() => {
          class t {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const i = this._attachedOverlays.indexOf(e);
              i > -1 && this._attachedOverlays.splice(i, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        o4 = (() => {
          class t extends XA {
            constructor(e, i) {
              super(e),
                (this._ngZone = i),
                (this._keydownListener = (r) => {
                  const s = this._attachedOverlays;
                  for (let o = s.length - 1; o > -1; o--)
                    if (s[o]._keydownEvents.observers.length > 0) {
                      const a = s[o]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => a.next(r))
                        : a.next(r);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          "keydown",
                          this._keydownListener
                        )
                      )
                    : this._document.body.addEventListener(
                        "keydown",
                        this._keydownListener
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z), _(Y, 8));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        a4 = (() => {
          class t extends XA {
            constructor(e, i, r) {
              super(e),
                (this._platform = i),
                (this._ngZone = r),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (s) => {
                  this._pointerDownEventTarget = jr(s);
                }),
                (this._clickListener = (s) => {
                  const o = jr(s),
                    a =
                      "click" === s.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : o;
                  this._pointerDownEventTarget = null;
                  const l = this._attachedOverlays.slice();
                  for (let c = l.length - 1; c > -1; c--) {
                    const d = l[c];
                    if (
                      d._outsidePointerEvents.observers.length < 1 ||
                      !d.hasAttached()
                    )
                      continue;
                    if (
                      d.overlayElement.contains(o) ||
                      d.overlayElement.contains(a)
                    )
                      break;
                    const u = d._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => u.next(s))
                      : u.next(s);
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const i = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(i)
                    )
                  : this._addEventListeners(i),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = i.style.cursor),
                    (i.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(e) {
              e.addEventListener("pointerdown", this._pointerDownListener, !0),
                e.addEventListener("click", this._clickListener, !0),
                e.addEventListener("auxclick", this._clickListener, !0),
                e.addEventListener("contextmenu", this._clickListener, !0);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z), _(Vt), _(Y, 8));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        Qu = (() => {
          class t {
            constructor(e, i) {
              (this._platform = i), (this._document = e);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const e = "cdk-overlay-container";
              if (this._platform.isBrowser || T_()) {
                const r = this._document.querySelectorAll(
                  `.${e}[platform="server"], .${e}[platform="test"]`
                );
                for (let s = 0; s < r.length; s++) r[s].remove();
              }
              const i = this._document.createElement("div");
              i.classList.add(e),
                T_()
                  ? i.setAttribute("platform", "test")
                  : this._platform.isBrowser ||
                    i.setAttribute("platform", "server"),
                this._document.body.appendChild(i),
                (this._containerElement = i);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Z), _(Vt));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      class Rl {
        constructor(n, e, i, r, s, o, a, l, c, d = !1) {
          (this._portalOutlet = n),
            (this._host = e),
            (this._pane = i),
            (this._config = r),
            (this._ngZone = s),
            (this._keyboardDispatcher = o),
            (this._document = a),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._animationsDisabled = d),
            (this._backdropElement = null),
            (this._backdropClick = new B()),
            (this._attachments = new B()),
            (this._detachments = new B()),
            (this._locationChanges = Ve.EMPTY),
            (this._backdropClickHandler = (u) => this._backdropClick.next(u)),
            (this._backdropTransitionendHandler = (u) => {
              this._disposeBackdrop(u.target);
            }),
            (this._keydownEvents = new B()),
            (this._outsidePointerEvents = new B()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(n) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const e = this._portalOutlet.attach(n);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(ke(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            "function" == typeof e?.onDestroy &&
              e.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach())
                  );
              }),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const n = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            n
          );
        }
        dispose() {
          const n = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            n && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(n) {
          n !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = n),
            this.hasAttached() && (n.attach(this), this.updatePosition()));
        }
        updateSize(n) {
          (this._config = { ...this._config, ...n }), this._updateElementSize();
        }
        setDirection(n) {
          (this._config = { ...this._config, direction: n }),
            this._updateElementDirection();
        }
        addPanelClass(n) {
          this._pane && this._toggleClasses(this._pane, n, !0);
        }
        removePanelClass(n) {
          this._pane && this._toggleClasses(this._pane, n, !1);
        }
        getDirection() {
          const n = this._config.direction;
          return n ? ("string" == typeof n ? n : n.value) : "ltr";
        }
        updateScrollStrategy(n) {
          n !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = n),
            this.hasAttached() && (n.attach(this), n.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const n = this._pane.style;
          (n.width = St(this._config.width)),
            (n.height = St(this._config.height)),
            (n.minWidth = St(this._config.minWidth)),
            (n.minHeight = St(this._config.minHeight)),
            (n.maxWidth = St(this._config.maxWidth)),
            (n.maxHeight = St(this._config.maxHeight));
        }
        _togglePointerEvents(n) {
          this._pane.style.pointerEvents = n ? "" : "none";
        }
        _attachBackdrop() {
          const n = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                "cdk-overlay-backdrop-noop-animation"
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < "u"
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(n);
                  });
                })
              : this._backdropElement.classList.add(n);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const n = this._backdropElement;
          if (n) {
            if (this._animationsDisabled) return void this._disposeBackdrop(n);
            n.classList.remove("cdk-overlay-backdrop-showing"),
              this._ngZone.runOutsideAngular(() => {
                n.addEventListener(
                  "transitionend",
                  this._backdropTransitionendHandler
                );
              }),
              (n.style.pointerEvents = "none"),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(n);
                }, 500)
              ));
          }
        }
        _toggleClasses(n, e, i) {
          const r = Bu(e || []).filter((s) => !!s);
          r.length && (i ? n.classList.add(...r) : n.classList.remove(...r));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const n = this._ngZone.onStable
              .pipe(ye(yt(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  n.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const n = this._scrollStrategy;
          n && (n.disable(), n.detach && n.detach());
        }
        _disposeBackdrop(n) {
          n &&
            (n.removeEventListener("click", this._backdropClickHandler),
            n.removeEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            ),
            n.remove(),
            this._backdropElement === n && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const JA = "cdk-overlay-connected-position-bounding-box",
        l4 = /([A-Za-z%]+)$/;
      class c4 {
        constructor(n, e, i, r, s) {
          (this._viewportRuler = e),
            (this._document = i),
            (this._platform = r),
            (this._overlayContainer = s),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new B()),
            (this._resizeSubscription = Ve.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(n);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(n) {
          this._validatePositions(),
            n.hostElement.classList.add(JA),
            (this._overlayRef = n),
            (this._boundingBox = n.hostElement),
            (this._pane = n.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const n = this._originRect,
            e = this._overlayRect,
            i = this._viewportRect,
            r = this._containerRect,
            s = [];
          let o;
          for (let a of this._preferredPositions) {
            let l = this._getOriginPoint(n, r, a),
              c = this._getOverlayPoint(l, e, a),
              d = this._getOverlayFit(c, e, i, a);
            if (d.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(a, l);
            this._canFitWithFlexibleDimensions(d, c, i)
              ? s.push({
                  position: a,
                  origin: l,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(l, a),
                })
              : (!o || o.overlayFit.visibleArea < d.visibleArea) &&
                (o = {
                  overlayFit: d,
                  overlayPoint: c,
                  originPoint: l,
                  position: a,
                  overlayRect: e,
                });
          }
          if (s.length) {
            let a = null,
              l = -1;
            for (const c of s) {
              const d =
                c.boundingBoxRect.width *
                c.boundingBoxRect.height *
                (c.position.weight || 1);
              d > l && ((l = d), (a = c));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(a.position, a.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(o.position, o.originPoint)
            );
          this._applyPosition(o.position, o.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Ss(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(JA),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const n = this._lastPosition;
          if (n) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              n
            );
            this._applyPosition(n, e);
          } else this.apply();
        }
        withScrollableContainers(n) {
          return (this._scrollables = n), this;
        }
        withPositions(n) {
          return (
            (this._preferredPositions = n),
            -1 === n.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(n) {
          return (this._viewportMargin = n), this;
        }
        withFlexibleDimensions(n = !0) {
          return (this._hasFlexibleDimensions = n), this;
        }
        withGrowAfterOpen(n = !0) {
          return (this._growAfterOpen = n), this;
        }
        withPush(n = !0) {
          return (this._canPush = n), this;
        }
        withLockedPosition(n = !0) {
          return (this._positionLocked = n), this;
        }
        setOrigin(n) {
          return (this._origin = n), this;
        }
        withDefaultOffsetX(n) {
          return (this._offsetX = n), this;
        }
        withDefaultOffsetY(n) {
          return (this._offsetY = n), this;
        }
        withTransformOriginOn(n) {
          return (this._transformOriginSelector = n), this;
        }
        _getOriginPoint(n, e, i) {
          let r, s;
          if ("center" == i.originX) r = n.left + n.width / 2;
          else {
            const o = this._isRtl() ? n.right : n.left,
              a = this._isRtl() ? n.left : n.right;
            r = "start" == i.originX ? o : a;
          }
          return (
            e.left < 0 && (r -= e.left),
            (s =
              "center" == i.originY
                ? n.top + n.height / 2
                : "top" == i.originY
                ? n.top
                : n.bottom),
            e.top < 0 && (s -= e.top),
            { x: r, y: s }
          );
        }
        _getOverlayPoint(n, e, i) {
          let r, s;
          return (
            (r =
              "center" == i.overlayX
                ? -e.width / 2
                : "start" === i.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (s =
              "center" == i.overlayY
                ? -e.height / 2
                : "top" == i.overlayY
                ? 0
                : -e.height),
            { x: n.x + r, y: n.y + s }
          );
        }
        _getOverlayFit(n, e, i, r) {
          const s = tk(e);
          let { x: o, y: a } = n,
            l = this._getOffset(r, "x"),
            c = this._getOffset(r, "y");
          l && (o += l), c && (a += c);
          let f = 0 - a,
            p = a + s.height - i.height,
            m = this._subtractOverflows(s.width, 0 - o, o + s.width - i.width),
            g = this._subtractOverflows(s.height, f, p),
            v = m * g;
          return {
            visibleArea: v,
            isCompletelyWithinViewport: s.width * s.height === v,
            fitsInViewportVertically: g === s.height,
            fitsInViewportHorizontally: m == s.width,
          };
        }
        _canFitWithFlexibleDimensions(n, e, i) {
          if (this._hasFlexibleDimensions) {
            const r = i.bottom - e.y,
              s = i.right - e.x,
              o = ek(this._overlayRef.getConfig().minHeight),
              a = ek(this._overlayRef.getConfig().minWidth),
              c = n.fitsInViewportHorizontally || (null != a && a <= s);
            return (n.fitsInViewportVertically || (null != o && o <= r)) && c;
          }
          return !1;
        }
        _pushOverlayOnScreen(n, e, i) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: n.x + this._previousPushAmount.x,
              y: n.y + this._previousPushAmount.y,
            };
          const r = tk(e),
            s = this._viewportRect,
            o = Math.max(n.x + r.width - s.width, 0),
            a = Math.max(n.y + r.height - s.height, 0),
            l = Math.max(s.top - i.top - n.y, 0),
            c = Math.max(s.left - i.left - n.x, 0);
          let d = 0,
            u = 0;
          return (
            (d =
              r.width <= s.width
                ? c || -o
                : n.x < this._viewportMargin
                ? s.left - i.left - n.x
                : 0),
            (u =
              r.height <= s.height
                ? l || -a
                : n.y < this._viewportMargin
                ? s.top - i.top - n.y
                : 0),
            (this._previousPushAmount = { x: d, y: u }),
            { x: n.x + d, y: n.y + u }
          );
        }
        _applyPosition(n, e) {
          if (
            (this._setTransformOrigin(n),
            this._setOverlayElementStyles(e, n),
            this._setBoundingBoxStyles(e, n),
            n.panelClass && this._addPanelClasses(n.panelClass),
            (this._lastPosition = n),
            this._positionChanges.observers.length)
          ) {
            const i = this._getScrollVisibility(),
              r = new s4(n, i);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(n) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let i,
            r = n.overlayY;
          i =
            "center" === n.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === n.overlayX
                ? "right"
                : "left"
              : "start" === n.overlayX
              ? "left"
              : "right";
          for (let s = 0; s < e.length; s++)
            e[s].style.transformOrigin = `${i} ${r}`;
        }
        _calculateBoundingBoxRect(n, e) {
          const i = this._viewportRect,
            r = this._isRtl();
          let s, o, a, d, u, f;
          if ("top" === e.overlayY)
            (o = n.y), (s = i.height - o + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (a = i.height - n.y + 2 * this._viewportMargin),
              (s = i.height - a + this._viewportMargin);
          else {
            const p = Math.min(i.bottom - n.y + i.top, n.y),
              m = this._lastBoundingBoxSize.height;
            (s = 2 * p),
              (o = n.y - p),
              s > m &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (o = n.y - m / 2);
          }
          if (("end" === e.overlayX && !r) || ("start" === e.overlayX && r))
            (f = i.width - n.x + this._viewportMargin),
              (d = n.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !r) ||
            ("end" === e.overlayX && r)
          )
            (u = n.x), (d = i.right - n.x);
          else {
            const p = Math.min(i.right - n.x + i.left, n.x),
              m = this._lastBoundingBoxSize.width;
            (d = 2 * p),
              (u = n.x - p),
              d > m &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (u = n.x - m / 2);
          }
          return { top: o, left: u, bottom: a, right: f, width: d, height: s };
        }
        _setBoundingBoxStyles(n, e) {
          const i = this._calculateBoundingBoxRect(n, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((i.height = Math.min(i.height, this._lastBoundingBoxSize.height)),
            (i.width = Math.min(i.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const s = this._overlayRef.getConfig().maxHeight,
              o = this._overlayRef.getConfig().maxWidth;
            (r.height = St(i.height)),
              (r.top = St(i.top)),
              (r.bottom = St(i.bottom)),
              (r.width = St(i.width)),
              (r.left = St(i.left)),
              (r.right = St(i.right)),
              (r.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              s && (r.maxHeight = St(s)),
              o && (r.maxWidth = St(o));
          }
          (this._lastBoundingBoxSize = i), Ss(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          Ss(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          Ss(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(n, e) {
          const i = {},
            r = this._hasExactPosition(),
            s = this._hasFlexibleDimensions,
            o = this._overlayRef.getConfig();
          if (r) {
            const d = this._viewportRuler.getViewportScrollPosition();
            Ss(i, this._getExactOverlayY(e, n, d)),
              Ss(i, this._getExactOverlayX(e, n, d));
          } else i.position = "static";
          let a = "",
            l = this._getOffset(e, "x"),
            c = this._getOffset(e, "y");
          l && (a += `translateX(${l}px) `),
            c && (a += `translateY(${c}px)`),
            (i.transform = a.trim()),
            o.maxHeight &&
              (r ? (i.maxHeight = St(o.maxHeight)) : s && (i.maxHeight = "")),
            o.maxWidth &&
              (r ? (i.maxWidth = St(o.maxWidth)) : s && (i.maxWidth = "")),
            Ss(this._pane.style, i);
        }
        _getExactOverlayY(n, e, i) {
          let r = { top: "", bottom: "" },
            s = this._getOverlayPoint(e, this._overlayRect, n);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, i)),
            "bottom" === n.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (s.y + this._overlayRect.height) +
                  "px")
              : (r.top = St(s.y)),
            r
          );
        }
        _getExactOverlayX(n, e, i) {
          let o,
            r = { left: "", right: "" },
            s = this._getOverlayPoint(e, this._overlayRect, n);
          return (
            this._isPushed &&
              (s = this._pushOverlayOnScreen(s, this._overlayRect, i)),
            (o = this._isRtl()
              ? "end" === n.overlayX
                ? "left"
                : "right"
              : "end" === n.overlayX
              ? "right"
              : "left"),
            "right" === o
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (s.x + this._overlayRect.width) +
                  "px")
              : (r.left = St(s.x)),
            r
          );
        }
        _getScrollVisibility() {
          const n = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            i = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: ZA(n, i),
            isOriginOutsideView: q_(n, i),
            isOverlayClipped: ZA(e, i),
            isOverlayOutsideView: q_(e, i),
          };
        }
        _subtractOverflows(n, ...e) {
          return e.reduce((i, r) => i - Math.max(r, 0), n);
        }
        _getNarrowedViewportRect() {
          const n = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            i = this._viewportRuler.getViewportScrollPosition();
          return {
            top: i.top + this._viewportMargin,
            left: i.left + this._viewportMargin,
            right: i.left + n - this._viewportMargin,
            bottom: i.top + e - this._viewportMargin,
            width: n - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(n, e) {
          return "x" === e
            ? n.offsetX ?? this._offsetX
            : n.offsetY ?? this._offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(n) {
          this._pane &&
            Bu(n).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((n) => {
              this._pane.classList.remove(n);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const n = this._origin;
          if (n instanceof T) return n.nativeElement.getBoundingClientRect();
          if (n instanceof Element) return n.getBoundingClientRect();
          const e = n.width || 0,
            i = n.height || 0;
          return {
            top: n.y,
            bottom: n.y + i,
            left: n.x,
            right: n.x + e,
            height: i,
            width: e,
          };
        }
      }
      function Ss(t, n) {
        for (let e in n) n.hasOwnProperty(e) && (t[e] = n[e]);
        return t;
      }
      function ek(t) {
        if ("number" != typeof t && null != t) {
          const [n, e] = t.split(l4);
          return e && "px" !== e ? null : parseFloat(n);
        }
        return t || null;
      }
      function tk(t) {
        return {
          top: Math.floor(t.top),
          right: Math.floor(t.right),
          bottom: Math.floor(t.bottom),
          left: Math.floor(t.left),
          width: Math.floor(t.width),
          height: Math.floor(t.height),
        };
      }
      const nk = "cdk-global-overlay-wrapper";
      class d4 {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._alignItems = ""),
            (this._xPosition = ""),
            (this._xOffset = ""),
            (this._width = ""),
            (this._height = ""),
            (this._isDisposed = !1);
        }
        attach(n) {
          const e = n.getConfig();
          (this._overlayRef = n),
            this._width && !e.width && n.updateSize({ width: this._width }),
            this._height && !e.height && n.updateSize({ height: this._height }),
            n.hostElement.classList.add(nk),
            (this._isDisposed = !1);
        }
        top(n = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = n),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(n = "") {
          return (this._xOffset = n), (this._xPosition = "left"), this;
        }
        bottom(n = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = n),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(n = "") {
          return (this._xOffset = n), (this._xPosition = "right"), this;
        }
        start(n = "") {
          return (this._xOffset = n), (this._xPosition = "start"), this;
        }
        end(n = "") {
          return (this._xOffset = n), (this._xPosition = "end"), this;
        }
        width(n = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: n })
              : (this._width = n),
            this
          );
        }
        height(n = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: n })
              : (this._height = n),
            this
          );
        }
        centerHorizontally(n = "") {
          return this.left(n), (this._xPosition = "center"), this;
        }
        centerVertically(n = "") {
          return this.top(n), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const n = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            i = this._overlayRef.getConfig(),
            { width: r, height: s, maxWidth: o, maxHeight: a } = i,
            l = !(
              ("100%" !== r && "100vw" !== r) ||
              (o && "100%" !== o && "100vw" !== o)
            ),
            c = !(
              ("100%" !== s && "100vh" !== s) ||
              (a && "100%" !== a && "100vh" !== a)
            ),
            d = this._xPosition,
            u = this._xOffset,
            f = "rtl" === this._overlayRef.getConfig().direction;
          let p = "",
            m = "",
            g = "";
          l
            ? (g = "flex-start")
            : "center" === d
            ? ((g = "center"), f ? (m = u) : (p = u))
            : f
            ? "left" === d || "end" === d
              ? ((g = "flex-end"), (p = u))
              : ("right" === d || "start" === d) &&
                ((g = "flex-start"), (m = u))
            : "left" === d || "start" === d
            ? ((g = "flex-start"), (p = u))
            : ("right" === d || "end" === d) && ((g = "flex-end"), (m = u)),
            (n.position = this._cssPosition),
            (n.marginLeft = l ? "0" : p),
            (n.marginTop = c ? "0" : this._topOffset),
            (n.marginBottom = this._bottomOffset),
            (n.marginRight = l ? "0" : m),
            (e.justifyContent = g),
            (e.alignItems = c ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const n = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            i = e.style;
          e.classList.remove(nk),
            (i.justifyContent =
              i.alignItems =
              n.marginTop =
              n.marginBottom =
              n.marginLeft =
              n.marginRight =
              n.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let u4 = (() => {
          class t {
            constructor(e, i, r, s) {
              (this._viewportRuler = e),
                (this._document = i),
                (this._platform = r),
                (this._overlayContainer = s);
            }
            global() {
              return new d4();
            }
            flexibleConnectedTo(e) {
              return new c4(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(zo), _(Z), _(Vt), _(Qu));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        h4 = 0,
        An = (() => {
          class t {
            constructor(e, i, r, s, o, a, l, c, d, u, f, p) {
              (this.scrollStrategies = e),
                (this._overlayContainer = i),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = s),
                (this._keyboardDispatcher = o),
                (this._injector = a),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = d),
                (this._location = u),
                (this._outsideClickDispatcher = f),
                (this._animationsModuleType = p);
            }
            create(e) {
              const i = this._createHostElement(),
                r = this._createPaneElement(i),
                s = this._createPortalOutlet(r),
                o = new Yu(e);
              return (
                (o.direction = o.direction || this._directionality.value),
                new Rl(
                  s,
                  i,
                  r,
                  o,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  "NoopAnimations" === this._animationsModuleType
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const i = this._document.createElement("div");
              return (
                (i.id = "cdk-overlay-" + h4++),
                i.classList.add("cdk-overlay-pane"),
                e.appendChild(i),
                i
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(as)),
                new J8(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                _(r4),
                _(Qu),
                _(es),
                _(u4),
                _(o4),
                _(gt),
                _(Y),
                _(Z),
                _(En),
                _(Ya),
                _(a4),
                _(en, 8)
              );
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const m4 = {
        provide: new C("cdk-connected-overlay-scroll-strategy"),
        deps: [An],
        useFactory: function p4(t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let ar = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [An, m4], imports: [Ds, Ri, Wu, Wu] })),
            t
          );
        })(),
        Ku = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, U, Ml, U] })),
            t
          );
        })();
      const D4 = {
        provide: new C("mat-autocomplete-scroll-strategy"),
        deps: [An],
        useFactory: function w4(t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let sk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({
              providers: [D4],
              imports: [ar, kl, U, nt, or, kl, U],
            })),
            t
          );
        })(),
        ok = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Go, U, U] })),
            t
          );
        })();
      const A4 = ["mat-button", ""],
        k4 = ["*"],
        I4 = [
          "mat-button",
          "mat-flat-button",
          "mat-icon-button",
          "mat-raised-button",
          "mat-stroked-button",
          "mat-mini-fab",
          "mat-fab",
        ],
        R4 = Gr(
          Ms(
            li(
              class {
                constructor(t) {
                  this._elementRef = t;
                }
              }
            )
          )
        );
      let Y_ = (() => {
          class t extends R4 {
            constructor(e, i, r) {
              super(e),
                (this._focusMonitor = i),
                (this._animationMode = r),
                (this.isRoundButton = this._hasHostAttributes(
                  "mat-fab",
                  "mat-mini-fab"
                )),
                (this.isIconButton =
                  this._hasHostAttributes("mat-icon-button"));
              for (const s of I4)
                this._hasHostAttributes(s) &&
                  this._getHostElement().classList.add(s);
              e.nativeElement.classList.add("mat-button-base"),
                this.isRoundButton && (this.color = "accent");
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e, i) {
              e
                ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
                : this._getHostElement().focus(i);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...e) {
              return e.some((i) => this._getHostElement().hasAttribute(i));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Sn), h(en, 8));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-icon-button", ""],
                ["button", "mat-fab", ""],
                ["button", "mat-mini-fab", ""],
                ["button", "mat-stroked-button", ""],
                ["button", "mat-flat-button", ""],
              ],
              viewQuery: function (e, i) {
                if ((1 & e && et(Ii, 5), 2 & e)) {
                  let r;
                  Q((r = K())) && (i.ripple = r.first);
                }
              },
              hostAttrs: [1, "mat-focus-indicator"],
              hostVars: 5,
              hostBindings: function (e, i) {
                2 & e &&
                  (se("disabled", i.disabled || null),
                  Se(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  )("mat-button-disabled", i.disabled));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [x],
              attrs: A4,
              ngContentSelectors: k4,
              decls: 4,
              vars: 5,
              consts: [
                [1, "mat-button-wrapper"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleCentered",
                  "matRippleTrigger",
                ],
                [1, "mat-button-focus-overlay"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Qe(),
                  R(0, "span", 0),
                  Ce(1),
                  F(),
                  Me(2, "span", 1)(3, "span", 2)),
                  2 & e &&
                    (de(2),
                    Se(
                      "mat-button-ripple-round",
                      i.isRoundButton || i.isIconButton
                    ),
                    _e("matRippleDisabled", i._isRippleDisabled())(
                      "matRippleCentered",
                      i.isIconButton
                    )("matRippleTrigger", i._getHostElement()));
              },
              dependencies: [Ii],
              styles: [
                ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}.mat-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.mat-flat-button::before,.mat-raised-button::before,.mat-fab::before,.mat-mini-fab::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-stroked-button::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px) * -1)}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Es = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Wn, U, U] })),
            t
          );
        })(),
        fk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U, Wn, U] })),
            t
          );
        })();
      const H4 = ["*", [["mat-card-footer"]]],
        j4 = ["*", "mat-card-footer"],
        G4 = [
          [
            ["", "mat-card-avatar", ""],
            ["", "matCardAvatar", ""],
          ],
          [
            ["mat-card-title"],
            ["mat-card-subtitle"],
            ["", "mat-card-title", ""],
            ["", "mat-card-subtitle", ""],
            ["", "matCardTitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          "*",
        ],
        U4 = [
          "[mat-card-avatar], [matCardAvatar]",
          "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]",
          "*",
        ];
      let pk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["mat-card-content"],
                ["", "mat-card-content", ""],
                ["", "matCardContent", ""],
              ],
              hostAttrs: [1, "mat-card-content"],
            })),
            t
          );
        })(),
        mk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["mat-card-title"],
                ["", "mat-card-title", ""],
                ["", "matCardTitle", ""],
              ],
              hostAttrs: [1, "mat-card-title"],
            })),
            t
          );
        })(),
        gk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["mat-card-subtitle"],
                ["", "mat-card-subtitle", ""],
                ["", "matCardSubtitle", ""],
              ],
              hostAttrs: [1, "mat-card-subtitle"],
            })),
            t
          );
        })(),
        z4 = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "mat-card-image", ""],
                ["", "matCardImage", ""],
              ],
              hostAttrs: [1, "mat-card-image"],
            })),
            t
          );
        })(),
        $4 = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "mat-card-avatar", ""],
                ["", "matCardAvatar", ""],
              ],
              hostAttrs: [1, "mat-card-avatar"],
            })),
            t
          );
        })(),
        _k = (() => {
          class t {
            constructor(e) {
              this._animationMode = e;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(en, 8));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-card"]],
              hostAttrs: [1, "mat-card", "mat-focus-indicator"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Se(
                    "_mat-animation-noopable",
                    "NoopAnimations" === i._animationMode
                  );
              },
              exportAs: ["matCard"],
              ngContentSelectors: j4,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (Qe(H4), Ce(0), Ce(1, 1));
              },
              styles: [
                ".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card._mat-animation-noopable{transition:none !important;animation:none !important}.mat-card>.mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card>.mat-divider-horizontal{left:auto;right:0}.mat-card>.mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card>.mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        W4 = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-card-header"]],
              hostAttrs: [1, "mat-card-header"],
              ngContentSelectors: U4,
              decls: 4,
              vars: 0,
              consts: [[1, "mat-card-header-text"]],
              template: function (e, i) {
                1 & e &&
                  (Qe(G4), Ce(0), R(1, "div", 0), Ce(2, 1), F(), Ce(3, 2));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Q_ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U, U] })),
            t
          );
        })(),
        bk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })(),
        Ck = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Wn, U, Ml, bk, U, bk] })),
            t
          );
        })();
      const Mk = new C("mat-chips-default-options");
      let Sk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({
              providers: [
                ju,
                { provide: Mk, useValue: { separatorKeyCodes: [13] } },
              ],
              imports: [U],
            })),
            t
          );
        })(),
        Ek = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })(),
        Ak = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [ju], imports: [Ek, Ku, U, Ek, Ku] })),
            t
          );
        })(),
        CW = (() => {
          class t {
            constructor() {
              (this.changes = new B()),
                (this.calendarLabel = "Calendar"),
                (this.openCalendarLabel = "Open calendar"),
                (this.closeCalendarLabel = "Close calendar"),
                (this.prevMonthLabel = "Previous month"),
                (this.nextMonthLabel = "Next month"),
                (this.prevYearLabel = "Previous year"),
                (this.nextYearLabel = "Next year"),
                (this.prevMultiYearLabel = "Previous 24 years"),
                (this.nextMultiYearLabel = "Next 24 years"),
                (this.switchToMonthViewLabel = "Choose date"),
                (this.switchToMultiYearViewLabel = "Choose month and year"),
                (this.startDateLabel = "Start date"),
                (this.endDateLabel = "End date");
            }
            formatYearRange(e, i) {
              return `${e} \u2013 ${i}`;
            }
            formatYearRangeLabel(e, i) {
              return `${e} to ${i}`;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      const IW = {
        provide: new C("mat-datepicker-scroll-strategy"),
        deps: [An],
        useFactory: function TW(t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let Rk = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({
            providers: [CW, IW],
            imports: [nt, Es, ar, Go, Ri, U, or],
          })),
          t
        );
      })();
      function LW(t, n) {}
      class nh {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.ariaModal = !0),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0),
            (this.closeOnDestroy = !0);
        }
      }
      let Ok = (() => {
        class t extends $_ {
          constructor(e, i, r, s, o, a, l, c) {
            super(),
              (this._elementRef = e),
              (this._focusTrapFactory = i),
              (this._config = s),
              (this._interactivityChecker = o),
              (this._ngZone = a),
              (this._overlayRef = l),
              (this._focusMonitor = c),
              (this._elementFocusedBeforeDialogWasOpened = null),
              (this._closeInteractionType = null),
              (this.attachDomPortal = (d) => {
                this._portalOutlet.hasAttached();
                const u = this._portalOutlet.attachDomPortal(d);
                return this._contentAttached(), u;
              }),
              (this._ariaLabelledBy = this._config.ariaLabelledBy || null),
              (this._document = r);
          }
          _contentAttached() {
            this._initializeFocusTrap(),
              this._handleBackdropClicks(),
              this._captureInitialFocus();
          }
          _captureInitialFocus() {
            this._trapFocus();
          }
          ngOnDestroy() {
            this._restoreFocus();
          }
          attachComponentPortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachComponentPortal(e);
            return this._contentAttached(), i;
          }
          attachTemplatePortal(e) {
            this._portalOutlet.hasAttached();
            const i = this._portalOutlet.attachTemplatePortal(e);
            return this._contentAttached(), i;
          }
          _recaptureFocus() {
            this._containsFocus() || this._trapFocus();
          }
          _forceFocus(e, i) {
            this._interactivityChecker.isFocusable(e) ||
              ((e.tabIndex = -1),
              this._ngZone.runOutsideAngular(() => {
                const r = () => {
                  e.removeEventListener("blur", r),
                    e.removeEventListener("mousedown", r),
                    e.removeAttribute("tabindex");
                };
                e.addEventListener("blur", r),
                  e.addEventListener("mousedown", r);
              })),
              e.focus(i);
          }
          _focusByCssSelector(e, i) {
            let r = this._elementRef.nativeElement.querySelector(e);
            r && this._forceFocus(r, i);
          }
          _trapFocus() {
            const e = this._elementRef.nativeElement;
            switch (this._config.autoFocus) {
              case !1:
              case "dialog":
                this._containsFocus() || e.focus();
                break;
              case !0:
              case "first-tabbable":
                this._focusTrap.focusInitialElementWhenReady().then((i) => {
                  i || this._focusDialogContainer();
                });
                break;
              case "first-heading":
                this._focusByCssSelector(
                  'h1, h2, h3, h4, h5, h6, [role="heading"]'
                );
                break;
              default:
                this._focusByCssSelector(this._config.autoFocus);
            }
          }
          _restoreFocus() {
            const e = this._config.restoreFocus;
            let i = null;
            if (
              ("string" == typeof e
                ? (i = this._document.querySelector(e))
                : "boolean" == typeof e
                ? (i = e ? this._elementFocusedBeforeDialogWasOpened : null)
                : e && (i = e),
              this._config.restoreFocus && i && "function" == typeof i.focus)
            ) {
              const r = k_(),
                s = this._elementRef.nativeElement;
              (!r || r === this._document.body || r === s || s.contains(r)) &&
                (this._focusMonitor
                  ? (this._focusMonitor.focusVia(i, this._closeInteractionType),
                    (this._closeInteractionType = null))
                  : i.focus());
            }
            this._focusTrap && this._focusTrap.destroy();
          }
          _focusDialogContainer() {
            this._elementRef.nativeElement.focus &&
              this._elementRef.nativeElement.focus();
          }
          _containsFocus() {
            const e = this._elementRef.nativeElement,
              i = k_();
            return e === i || e.contains(i);
          }
          _initializeFocusTrap() {
            (this._focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement
            )),
              this._document &&
                (this._elementFocusedBeforeDialogWasOpened = k_());
          }
          _handleBackdropClicks() {
            this._overlayRef.backdropClick().subscribe(() => {
              this._config.disableClose && this._recaptureFocus();
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(
              h(T),
              h(Vu),
              h(Z, 8),
              h(nh),
              h(Sl),
              h(Y),
              h(Rl),
              h(Sn)
            );
          }),
          (t.ɵcmp = te({
            type: t,
            selectors: [["cdk-dialog-container"]],
            viewQuery: function (e, i) {
              if ((1 & e && et(W_, 7), 2 & e)) {
                let r;
                Q((r = K())) && (i._portalOutlet = r.first);
              }
            },
            hostAttrs: ["tabindex", "-1", 1, "cdk-dialog-container"],
            hostVars: 6,
            hostBindings: function (e, i) {
              2 & e &&
                se("id", i._config.id || null)("role", i._config.role)(
                  "aria-modal",
                  i._config.ariaModal
                )(
                  "aria-labelledby",
                  i._config.ariaLabel ? null : i._ariaLabelledBy
                )("aria-label", i._config.ariaLabel)(
                  "aria-describedby",
                  i._config.ariaDescribedBy || null
                );
            },
            features: [x],
            decls: 1,
            vars: 0,
            consts: [["cdkPortalOutlet", ""]],
            template: function (e, i) {
              1 & e && kt(0, LW, 0, 0, "ng-template", 0);
            },
            dependencies: [W_],
            styles: [
              ".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}",
            ],
            encapsulation: 2,
          })),
          t
        );
      })();
      class Z_ {
        constructor(n, e) {
          (this.overlayRef = n),
            (this.config = e),
            (this.closed = new B()),
            (this.disableClose = e.disableClose),
            (this.backdropClick = n.backdropClick()),
            (this.keydownEvents = n.keydownEvents()),
            (this.outsidePointerEvents = n.outsidePointerEvents()),
            (this.id = e.id),
            this.keydownEvents.subscribe((i) => {
              27 === i.keyCode &&
                !this.disableClose &&
                !Mn(i) &&
                (i.preventDefault(),
                this.close(void 0, { focusOrigin: "keyboard" }));
            }),
            this.backdropClick.subscribe(() => {
              this.disableClose || this.close(void 0, { focusOrigin: "mouse" });
            });
        }
        close(n, e) {
          if (this.containerInstance) {
            const i = this.closed;
            (this.containerInstance._closeInteractionType =
              e?.focusOrigin || "program"),
              this.overlayRef.dispose(),
              i.next(n),
              i.complete(),
              (this.componentInstance = this.containerInstance = null);
          }
        }
        updatePosition() {
          return this.overlayRef.updatePosition(), this;
        }
        updateSize(n = "", e = "") {
          return this.overlayRef.updateSize({ width: n, height: e }), this;
        }
        addPanelClass(n) {
          return this.overlayRef.addPanelClass(n), this;
        }
        removePanelClass(n) {
          return this.overlayRef.removePanelClass(n), this;
        }
      }
      const Fk = new C("DialogScrollStrategy"),
        NW = new C("DialogData"),
        BW = new C("DefaultDialogConfig"),
        HW = {
          provide: Fk,
          deps: [An],
          useFactory: function VW(t) {
            return () => t.scrollStrategies.block();
          },
        };
      let jW = 0,
        Pk = (() => {
          class t {
            constructor(e, i, r, s, o, a) {
              (this._overlay = e),
                (this._injector = i),
                (this._defaultOptions = r),
                (this._parentDialog = s),
                (this._overlayContainer = o),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new B()),
                (this._afterOpenedAtThisLevel = new B()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = Ji(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(xn(void 0))
                )),
                (this._scrollStrategy = a);
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            open(e, i) {
              ((i = { ...(this._defaultOptions || new nh()), ...i }).id =
                i.id || "cdk-dialog-" + jW++),
                i.id && this.getDialogById(i.id);
              const s = this._getOverlayConfig(i),
                o = this._overlay.create(s),
                a = new Z_(o, i),
                l = this._attachContainer(o, a, i);
              return (
                (a.containerInstance = l),
                this._attachDialogContent(e, a, l, i),
                this.openDialogs.length ||
                  this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(a),
                a.closed.subscribe(() => this._removeOpenDialog(a, !0)),
                this.afterOpened.next(a),
                a
              );
            }
            closeAll() {
              X_(this.openDialogs, (e) => e.close());
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              X_(this._openDialogsAtThisLevel, (e) => {
                !1 === e.config.closeOnDestroy && this._removeOpenDialog(e, !1);
              }),
                X_(this._openDialogsAtThisLevel, (e) => e.close()),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete(),
                (this._openDialogsAtThisLevel = []);
            }
            _getOverlayConfig(e) {
              const i = new Yu({
                positionStrategy:
                  e.positionStrategy ||
                  this._overlay
                    .position()
                    .global()
                    .centerHorizontally()
                    .centerVertically(),
                scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
                panelClass: e.panelClass,
                hasBackdrop: e.hasBackdrop,
                direction: e.direction,
                minWidth: e.minWidth,
                minHeight: e.minHeight,
                maxWidth: e.maxWidth,
                maxHeight: e.maxHeight,
                width: e.width,
                height: e.height,
                disposeOnNavigation: e.closeOnNavigation,
              });
              return e.backdropClass && (i.backdropClass = e.backdropClass), i;
            }
            _attachContainer(e, i, r) {
              const s = r.injector || r.viewContainerRef?.injector,
                o = [
                  { provide: nh, useValue: r },
                  { provide: Z_, useValue: i },
                  { provide: Rl, useValue: e },
                ];
              let a;
              r.container
                ? "function" == typeof r.container
                  ? (a = r.container)
                  : ((a = r.container.type),
                    o.push(...r.container.providers(r)))
                : (a = Ok);
              const l = new z_(
                a,
                r.viewContainerRef,
                gt.create({ parent: s || this._injector, providers: o }),
                r.componentFactoryResolver
              );
              return e.attach(l).instance;
            }
            _attachDialogContent(e, i, r, s) {
              if (e instanceof xt) {
                const o = this._createInjector(s, i, r, void 0);
                let a = { $implicit: s.data, dialogRef: i };
                s.templateContext &&
                  (a = {
                    ...a,
                    ...("function" == typeof s.templateContext
                      ? s.templateContext()
                      : s.templateContext),
                  }),
                  r.attachTemplatePortal(new qu(e, null, a, o));
              } else {
                const o = this._createInjector(s, i, r, this._injector),
                  a = r.attachComponentPortal(
                    new z_(e, s.viewContainerRef, o, s.componentFactoryResolver)
                  );
                i.componentInstance = a.instance;
              }
            }
            _createInjector(e, i, r, s) {
              const o = e.injector || e.viewContainerRef?.injector,
                a = [
                  { provide: NW, useValue: e.data },
                  { provide: Z_, useValue: i },
                ];
              return (
                e.providers &&
                  ("function" == typeof e.providers
                    ? a.push(...e.providers(i, e, r))
                    : a.push(...e.providers)),
                e.direction &&
                  (!o || !o.get(En, null, J.Optional)) &&
                  a.push({
                    provide: En,
                    useValue: { value: e.direction, change: N() },
                  }),
                gt.create({ parent: o || s, providers: a })
              );
            }
            _removeOpenDialog(e, i) {
              const r = this.openDialogs.indexOf(e);
              r > -1 &&
                (this.openDialogs.splice(r, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((s, o) => {
                    s
                      ? o.setAttribute("aria-hidden", s)
                      : o.removeAttribute("aria-hidden");
                  }),
                  this._ariaHiddenElements.clear(),
                  i && this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const e = this._overlayContainer.getContainerElement();
              if (e.parentElement) {
                const i = e.parentElement.children;
                for (let r = i.length - 1; r > -1; r--) {
                  const s = i[r];
                  s !== e &&
                    "SCRIPT" !== s.nodeName &&
                    "STYLE" !== s.nodeName &&
                    !s.hasAttribute("aria-live") &&
                    (this._ariaHiddenElements.set(
                      s,
                      s.getAttribute("aria-hidden")
                    ),
                    s.setAttribute("aria-hidden", "true"));
                }
              }
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                _(An),
                _(gt),
                _(BW, 8),
                _(t, 12),
                _(Qu),
                _(Fk)
              );
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      function X_(t, n) {
        let e = t.length;
        for (; e--; ) n(t[e]);
      }
      let GW = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({ providers: [Pk, HW], imports: [ar, Ri, Go, Ri] })),
          t
        );
      })();
      function UW(t, n) {}
      const Wo = {
          params: {
            enterAnimationDuration: "150ms",
            exitAnimationDuration: "75ms",
          },
        },
        zW = {
          dialogContainer: ft("dialogContainer", [
            pe("void, exit", j({ opacity: 0, transform: "scale(0.7)" })),
            pe("enter", j({ transform: "none" })),
            Ee(
              "* => enter",
              AE([
                Re(
                  "{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)",
                  j({ transform: "none", opacity: 1 })
                ),
                mu("@*", pu(), { optional: !0 }),
              ]),
              Wo
            ),
            Ee(
              "* => void, * => exit",
              AE([
                Re(
                  "{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)",
                  j({ opacity: 0 })
                ),
                mu("@*", pu(), { optional: !0 }),
              ]),
              Wo
            ),
          ]),
        };
      class ih {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = "first-tabbable"),
            (this.restoreFocus = !0),
            (this.delayFocusTrap = !0),
            (this.closeOnNavigation = !0),
            (this.enterAnimationDuration = Wo.params.enterAnimationDuration),
            (this.exitAnimationDuration = Wo.params.exitAnimationDuration);
        }
      }
      let $W = (() => {
          class t extends Ok {
            constructor(e, i, r, s, o, a, l, c) {
              super(e, i, r, s, o, a, l, c),
                (this._animationStateChanged = new W());
            }
            _captureInitialFocus() {
              this._config.delayFocusTrap || this._trapFocus();
            }
            _openAnimationDone(e) {
              this._config.delayFocusTrap && this._trapFocus(),
                this._animationStateChanged.next({
                  state: "opened",
                  totalTime: e,
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(T),
                h(Vu),
                h(Z, 8),
                h(ih),
                h(Sl),
                h(Y),
                h(Rl),
                h(Sn)
              );
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["ng-component"]],
              features: [x],
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              encapsulation: 2,
            })),
            t
          );
        })(),
        WW = (() => {
          class t extends $W {
            constructor(e, i, r, s, o, a, l, c, d) {
              super(e, i, r, s, o, a, l, d),
                (this._changeDetectorRef = c),
                (this._state = "enter");
            }
            _onAnimationDone({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._openAnimationDone(i)
                : "exit" === e &&
                  this._animationStateChanged.next({
                    state: "closed",
                    totalTime: i,
                  });
            }
            _onAnimationStart({ toState: e, totalTime: i }) {
              "enter" === e
                ? this._animationStateChanged.next({
                    state: "opening",
                    totalTime: i,
                  })
                : ("exit" === e || "void" === e) &&
                  this._animationStateChanged.next({
                    state: "closing",
                    totalTime: i,
                  });
            }
            _startExitAnimation() {
              (this._state = "exit"), this._changeDetectorRef.markForCheck();
            }
            _getAnimationState() {
              return {
                value: this._state,
                params: {
                  enterAnimationDuration:
                    this._config.enterAnimationDuration ||
                    Wo.params.enterAnimationDuration,
                  exitAnimationDuration:
                    this._config.exitAnimationDuration ||
                    Wo.params.exitAnimationDuration,
                },
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(T),
                h(Vu),
                h(Z, 8),
                h(ih),
                h(Sl),
                h(Y),
                h(Rl),
                h(Ue),
                h(Sn)
              );
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-dialog-container"]],
              hostAttrs: ["tabindex", "-1", 1, "mat-dialog-container"],
              hostVars: 7,
              hostBindings: function (e, i) {
                1 & e &&
                  Vc("@dialogContainer.start", function (s) {
                    return i._onAnimationStart(s);
                  })("@dialogContainer.done", function (s) {
                    return i._onAnimationDone(s);
                  }),
                  2 & e &&
                    (Wi("id", i._config.id),
                    se("aria-modal", i._config.ariaModal)(
                      "role",
                      i._config.role
                    )(
                      "aria-labelledby",
                      i._config.ariaLabel ? null : i._ariaLabelledBy
                    )("aria-label", i._config.ariaLabel)(
                      "aria-describedby",
                      i._config.ariaDescribedBy || null
                    ),
                    jc("@dialogContainer", i._getAnimationState()));
              },
              features: [x],
              decls: 1,
              vars: 0,
              consts: [["cdkPortalOutlet", ""]],
              template: function (e, i) {
                1 & e && kt(0, UW, 0, 0, "ng-template", 0);
              },
              dependencies: [W_],
              styles: [
                ".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions.mat-dialog-actions-align-center,.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions.mat-dialog-actions-align-end,.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}",
              ],
              encapsulation: 2,
              data: { animation: [zW.dialogContainer] },
            })),
            t
          );
        })();
      class qW {
        constructor(n, e, i) {
          (this._ref = n),
            (this._containerInstance = i),
            (this._afterOpened = new B()),
            (this._beforeClosed = new B()),
            (this._state = 0),
            (this.disableClose = e.disableClose),
            (this.id = n.id),
            i._animationStateChanged
              .pipe(
                ve((r) => "opened" === r.state),
                ke(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            i._animationStateChanged
              .pipe(
                ve((r) => "closed" === r.state),
                ke(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            n.overlayRef.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._finishDialogClose();
            }),
            yt(
              this.backdropClick(),
              this.keydownEvents().pipe(
                ve((r) => 27 === r.keyCode && !this.disableClose && !Mn(r))
              )
            ).subscribe((r) => {
              this.disableClose ||
                (r.preventDefault(),
                (function YW(t, n, e) {
                  (t._closeInteractionType = n), t.close(e);
                })(this, "keydown" === r.type ? "keyboard" : "mouse"));
            });
        }
        close(n) {
          (this._result = n),
            this._containerInstance._animationStateChanged
              .pipe(
                ve((e) => "closing" === e.state),
                ke(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(n),
                  this._beforeClosed.complete(),
                  this._ref.overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    e.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._ref.closed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._ref.backdropClick;
        }
        keydownEvents() {
          return this._ref.keydownEvents;
        }
        updatePosition(n) {
          let e = this._ref.config.positionStrategy;
          return (
            n && (n.left || n.right)
              ? n.left
                ? e.left(n.left)
                : e.right(n.right)
              : e.centerHorizontally(),
            n && (n.top || n.bottom)
              ? n.top
                ? e.top(n.top)
                : e.bottom(n.bottom)
              : e.centerVertically(),
            this._ref.updatePosition(),
            this
          );
        }
        updateSize(n = "", e = "") {
          return this._ref.updateSize(n, e), this;
        }
        addPanelClass(n) {
          return this._ref.addPanelClass(n), this;
        }
        removePanelClass(n) {
          return this._ref.removePanelClass(n), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2),
            this._ref.close(this._result, {
              focusOrigin: this._closeInteractionType,
            }),
            (this.componentInstance = null);
        }
      }
      const QW = new C("MatDialogData"),
        KW = new C("mat-dialog-default-options"),
        Lk = new C("mat-dialog-scroll-strategy"),
        XW = {
          provide: Lk,
          deps: [An],
          useFactory: function ZW(t) {
            return () => t.scrollStrategies.block();
          },
        };
      let JW = 0,
        e6 = (() => {
          class t {
            constructor(e, i, r, s, o, a, l, c, d, u) {
              (this._overlay = e),
                (this._defaultOptions = r),
                (this._parentDialog = s),
                (this._dialogRefConstructor = l),
                (this._dialogContainerType = c),
                (this._dialogDataToken = d),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new B()),
                (this._afterOpenedAtThisLevel = new B()),
                (this._idPrefix = "mat-dialog-"),
                (this.afterAllClosed = Ji(() =>
                  this.openDialogs.length
                    ? this._getAfterAllClosed()
                    : this._getAfterAllClosed().pipe(xn(void 0))
                )),
                (this._scrollStrategy = a),
                (this._dialog = i.get(Pk));
            }
            get openDialogs() {
              return this._parentDialog
                ? this._parentDialog.openDialogs
                : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog
                ? this._parentDialog.afterOpened
                : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const e = this._parentDialog;
              return e
                ? e._getAfterAllClosed()
                : this._afterAllClosedAtThisLevel;
            }
            open(e, i) {
              let r;
              ((i = { ...(this._defaultOptions || new ih()), ...i }).id =
                i.id || `${this._idPrefix}${JW++}`),
                (i.scrollStrategy = i.scrollStrategy || this._scrollStrategy());
              const s = this._dialog.open(e, {
                ...i,
                positionStrategy: this._overlay
                  .position()
                  .global()
                  .centerHorizontally()
                  .centerVertically(),
                disableClose: !0,
                closeOnDestroy: !1,
                container: {
                  type: this._dialogContainerType,
                  providers: () => [
                    { provide: ih, useValue: i },
                    { provide: nh, useValue: i },
                  ],
                },
                templateContext: () => ({ dialogRef: r }),
                providers: (o, a, l) => (
                  (r = new this._dialogRefConstructor(o, i, l)),
                  r.updatePosition(i?.position),
                  [
                    { provide: this._dialogContainerType, useValue: l },
                    { provide: this._dialogDataToken, useValue: a.data },
                    { provide: this._dialogRefConstructor, useValue: r },
                  ]
                ),
              });
              return (
                (r.componentInstance = s.componentInstance),
                this.openDialogs.push(r),
                this.afterOpened.next(r),
                r.afterClosed().subscribe(() => {
                  const o = this.openDialogs.indexOf(r);
                  o > -1 &&
                    (this.openDialogs.splice(o, 1),
                    this.openDialogs.length ||
                      this._getAfterAllClosed().next());
                }),
                r
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(e) {
              return this.openDialogs.find((i) => i.id === e);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _closeDialogs(e) {
              let i = e.length;
              for (; i--; ) e[i].close();
            }
          }
          return (
            (t.ɵfac = function (e) {
              Dr();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        t6 = (() => {
          class t extends e6 {
            constructor(e, i, r, s, o, a, l, c) {
              super(e, i, s, a, l, o, qW, WW, QW, c);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                _(An),
                _(gt),
                _(Ya, 8),
                _(KW, 8),
                _(Lk),
                _(t, 12),
                _(Qu),
                _(en, 8)
              );
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Nk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [t6, XW], imports: [GW, ar, Ri, U, U] })),
            t
          );
        })(),
        n6 = (() => {
          class t {
            constructor() {
              (this._vertical = !1), (this._inset = !1);
            }
            get vertical() {
              return this._vertical;
            }
            set vertical(e) {
              this._vertical = $(e);
            }
            get inset() {
              return this._inset;
            }
            set inset(e) {
              this._inset = $(e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-divider"]],
              hostAttrs: ["role", "separator", 1, "mat-divider"],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (se(
                    "aria-orientation",
                    i.vertical ? "vertical" : "horizontal"
                  ),
                  Se("mat-divider-vertical", i.vertical)(
                    "mat-divider-horizontal",
                    !i.vertical
                  )("mat-divider-inset", i.inset));
              },
              inputs: { vertical: "vertical", inset: "inset" },
              decls: 0,
              vars: 0,
              template: function (e, i) {},
              styles: [
                ".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        J_ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U, U] })),
            t
          );
        })(),
        Bk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })(),
        Hk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, U, Bk, Ri] })),
            t
          );
        })(),
        Gk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Al, U, Al, U] })),
            t
          );
        })();
      const o6 = ["*"];
      let rh;
      function Fl(t) {
        return (
          (function a6() {
            if (void 0 === rh && ((rh = null), typeof window < "u")) {
              const t = window;
              void 0 !== t.trustedTypes &&
                (rh = t.trustedTypes.createPolicy("angular#components", {
                  createHTML: (n) => n,
                }));
            }
            return rh;
          })()?.createHTML(t) || t
        );
      }
      function Uk(t) {
        return Error(`Unable to find icon with the name "${t}"`);
      }
      function zk(t) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${t}".`
        );
      }
      function $k(t) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${t}".`
        );
      }
      class ks {
        constructor(n, e, i) {
          (this.url = n), (this.svgText = e), (this.options = i);
        }
      }
      let sh = (() => {
        class t {
          constructor(e, i, r, s) {
            (this._httpClient = e),
              (this._sanitizer = i),
              (this._errorHandler = s),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                "material-icons",
                "mat-ligature-font",
              ]),
              (this._document = r);
          }
          addSvgIcon(e, i, r) {
            return this.addSvgIconInNamespace("", e, i, r);
          }
          addSvgIconLiteral(e, i, r) {
            return this.addSvgIconLiteralInNamespace("", e, i, r);
          }
          addSvgIconInNamespace(e, i, r, s) {
            return this._addSvgIconConfig(e, i, new ks(r, null, s));
          }
          addSvgIconResolver(e) {
            return this._resolvers.push(e), this;
          }
          addSvgIconLiteralInNamespace(e, i, r, s) {
            const o = this._sanitizer.sanitize(Fe.HTML, r);
            if (!o) throw $k(r);
            const a = Fl(o);
            return this._addSvgIconConfig(e, i, new ks("", a, s));
          }
          addSvgIconSet(e, i) {
            return this.addSvgIconSetInNamespace("", e, i);
          }
          addSvgIconSetLiteral(e, i) {
            return this.addSvgIconSetLiteralInNamespace("", e, i);
          }
          addSvgIconSetInNamespace(e, i, r) {
            return this._addSvgIconSetConfig(e, new ks(i, null, r));
          }
          addSvgIconSetLiteralInNamespace(e, i, r) {
            const s = this._sanitizer.sanitize(Fe.HTML, i);
            if (!s) throw $k(i);
            const o = Fl(s);
            return this._addSvgIconSetConfig(e, new ks("", o, r));
          }
          registerFontClassAlias(e, i = e) {
            return this._fontCssClassesByAlias.set(e, i), this;
          }
          classNameForFontAlias(e) {
            return this._fontCssClassesByAlias.get(e) || e;
          }
          setDefaultFontSetClass(...e) {
            return (this._defaultFontSetClass = e), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(e) {
            const i = this._sanitizer.sanitize(Fe.RESOURCE_URL, e);
            if (!i) throw zk(e);
            const r = this._cachedIconsByUrl.get(i);
            return r
              ? N(oh(r))
              : this._loadSvgIconFromConfig(new ks(e, null)).pipe(
                  it((s) => this._cachedIconsByUrl.set(i, s)),
                  q((s) => oh(s))
                );
          }
          getNamedSvgIcon(e, i = "") {
            const r = Wk(i, e);
            let s = this._svgIconConfigs.get(r);
            if (s) return this._getSvgFromConfig(s);
            if (((s = this._getIconConfigFromResolvers(i, e)), s))
              return this._svgIconConfigs.set(r, s), this._getSvgFromConfig(s);
            const o = this._iconSetConfigs.get(i);
            return o ? this._getSvgFromIconSetConfigs(e, o) : fs(Uk(r));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(e) {
            return e.svgText
              ? N(oh(this._svgElementFromConfig(e)))
              : this._loadSvgIconFromConfig(e).pipe(q((i) => oh(i)));
          }
          _getSvgFromIconSetConfigs(e, i) {
            const r = this._extractIconWithNameFromAnySet(e, i);
            return r
              ? N(r)
              : jm(
                  i
                    .filter((o) => !o.svgText)
                    .map((o) =>
                      this._loadSvgIconSetFromConfig(o).pipe(
                        Mi((a) => {
                          const c = `Loading icon set URL: ${this._sanitizer.sanitize(
                            Fe.RESOURCE_URL,
                            o.url
                          )} failed: ${a.message}`;
                          return (
                            this._errorHandler.handleError(new Error(c)),
                            N(null)
                          );
                        })
                      )
                    )
                ).pipe(
                  q(() => {
                    const o = this._extractIconWithNameFromAnySet(e, i);
                    if (!o) throw Uk(e);
                    return o;
                  })
                );
          }
          _extractIconWithNameFromAnySet(e, i) {
            for (let r = i.length - 1; r >= 0; r--) {
              const s = i[r];
              if (s.svgText && s.svgText.toString().indexOf(e) > -1) {
                const o = this._svgElementFromConfig(s),
                  a = this._extractSvgIconFromSet(o, e, s.options);
                if (a) return a;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(e) {
            return this._fetchIcon(e).pipe(
              it((i) => (e.svgText = i)),
              q(() => this._svgElementFromConfig(e))
            );
          }
          _loadSvgIconSetFromConfig(e) {
            return e.svgText
              ? N(null)
              : this._fetchIcon(e).pipe(it((i) => (e.svgText = i)));
          }
          _extractSvgIconFromSet(e, i, r) {
            const s = e.querySelector(`[id="${i}"]`);
            if (!s) return null;
            const o = s.cloneNode(!0);
            if ((o.removeAttribute("id"), "svg" === o.nodeName.toLowerCase()))
              return this._setSvgAttributes(o, r);
            if ("symbol" === o.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(o), r);
            const a = this._svgElementFromString(Fl("<svg></svg>"));
            return a.appendChild(o), this._setSvgAttributes(a, r);
          }
          _svgElementFromString(e) {
            const i = this._document.createElement("DIV");
            i.innerHTML = e;
            const r = i.querySelector("svg");
            if (!r) throw Error("<svg> tag not found");
            return r;
          }
          _toSvgElement(e) {
            const i = this._svgElementFromString(Fl("<svg></svg>")),
              r = e.attributes;
            for (let s = 0; s < r.length; s++) {
              const { name: o, value: a } = r[s];
              "id" !== o && i.setAttribute(o, a);
            }
            for (let s = 0; s < e.childNodes.length; s++)
              e.childNodes[s].nodeType === this._document.ELEMENT_NODE &&
                i.appendChild(e.childNodes[s].cloneNode(!0));
            return i;
          }
          _setSvgAttributes(e, i) {
            return (
              e.setAttribute("fit", ""),
              e.setAttribute("height", "100%"),
              e.setAttribute("width", "100%"),
              e.setAttribute("preserveAspectRatio", "xMidYMid meet"),
              e.setAttribute("focusable", "false"),
              i && i.viewBox && e.setAttribute("viewBox", i.viewBox),
              e
            );
          }
          _fetchIcon(e) {
            const { url: i, options: r } = e,
              s = r?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function l6() {
                return Error(
                  "Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports."
                );
              })();
            if (null == i) throw Error(`Cannot fetch icon from URL "${i}".`);
            const o = this._sanitizer.sanitize(Fe.RESOURCE_URL, i);
            if (!o) throw zk(i);
            const a = this._inProgressUrlFetches.get(o);
            if (a) return a;
            const l = this._httpClient
              .get(o, { responseType: "text", withCredentials: s })
              .pipe(
                q((c) => Fl(c)),
                Nd(() => this._inProgressUrlFetches.delete(o)),
                Bh()
              );
            return this._inProgressUrlFetches.set(o, l), l;
          }
          _addSvgIconConfig(e, i, r) {
            return this._svgIconConfigs.set(Wk(e, i), r), this;
          }
          _addSvgIconSetConfig(e, i) {
            const r = this._iconSetConfigs.get(e);
            return r ? r.push(i) : this._iconSetConfigs.set(e, [i]), this;
          }
          _svgElementFromConfig(e) {
            if (!e.svgElement) {
              const i = this._svgElementFromString(e.svgText);
              this._setSvgAttributes(i, e.options), (e.svgElement = i);
            }
            return e.svgElement;
          }
          _getIconConfigFromResolvers(e, i) {
            for (let r = 0; r < this._resolvers.length; r++) {
              const s = this._resolvers[r](i, e);
              if (s)
                return d6(s) ? new ks(s.url, null, s.options) : new ks(s, null);
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Hg, 8), _(Cd), _(Z, 8), _(Gi));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function oh(t) {
        return t.cloneNode(!0);
      }
      function Wk(t, n) {
        return t + ":" + n;
      }
      function d6(t) {
        return !(!t.url || !t.options);
      }
      const u6 = Gr(
          class {
            constructor(t) {
              this._elementRef = t;
            }
          }
        ),
        h6 = new C("MAT_ICON_DEFAULT_OPTIONS"),
        f6 = new C("mat-icon-location", {
          providedIn: "root",
          factory: function p6() {
            const t = Ge(Z),
              n = t ? t.location : null;
            return { getPathname: () => (n ? n.pathname + n.search : "") };
          },
        }),
        qk = [
          "clip-path",
          "color-profile",
          "src",
          "cursor",
          "fill",
          "filter",
          "marker",
          "marker-start",
          "marker-mid",
          "marker-end",
          "mask",
          "stroke",
        ],
        m6 = qk.map((t) => `[${t}]`).join(", "),
        g6 = /^url\(['"]?#(.*?)['"]?\)$/;
      let Yk = (() => {
          class t extends u6 {
            constructor(e, i, r, s, o, a) {
              super(e),
                (this._iconRegistry = i),
                (this._location = s),
                (this._errorHandler = o),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = Ve.EMPTY),
                a &&
                  (a.color && (this.color = this.defaultColor = a.color),
                  a.fontSet && (this.fontSet = a.fontSet)),
                r || e.nativeElement.setAttribute("aria-hidden", "true");
            }
            get inline() {
              return this._inline;
            }
            set inline(e) {
              this._inline = $(e);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(e) {
              e !== this._svgIcon &&
                (e
                  ? this._updateSvgIcon(e)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = e));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(e) {
              const i = this._cleanupFontValue(e);
              i !== this._fontSet &&
                ((this._fontSet = i), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(e) {
              const i = this._cleanupFontValue(e);
              i !== this._fontIcon &&
                ((this._fontIcon = i), this._updateFontIconClasses());
            }
            _splitIconName(e) {
              if (!e) return ["", ""];
              const i = e.split(":");
              switch (i.length) {
                case 1:
                  return ["", i[0]];
                case 2:
                  return i;
                default:
                  throw Error(`Invalid icon name: "${e}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const e = this._elementsWithExternalReferences;
              if (e && e.size) {
                const i = this._location.getPathname();
                i !== this._previousPath &&
                  ((this._previousPath = i), this._prependPathToReferences(i));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(e) {
              this._clearSvgElement();
              const i = this._location.getPathname();
              (this._previousPath = i),
                this._cacheChildrenWithExternalReferences(e),
                this._prependPathToReferences(i),
                this._elementRef.nativeElement.appendChild(e);
            }
            _clearSvgElement() {
              const e = this._elementRef.nativeElement;
              let i = e.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                i--;

              ) {
                const r = e.childNodes[i];
                (1 !== r.nodeType || "svg" === r.nodeName.toLowerCase()) &&
                  r.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const e = this._elementRef.nativeElement,
                i = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter((r) => r.length > 0);
              this._previousFontSetClass.forEach((r) => e.classList.remove(r)),
                i.forEach((r) => e.classList.add(r)),
                (this._previousFontSetClass = i),
                this.fontIcon !== this._previousFontIconClass &&
                  !i.includes("mat-ligature-font") &&
                  (this._previousFontIconClass &&
                    e.classList.remove(this._previousFontIconClass),
                  this.fontIcon && e.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(e) {
              return "string" == typeof e ? e.trim().split(" ")[0] : e;
            }
            _prependPathToReferences(e) {
              const i = this._elementsWithExternalReferences;
              i &&
                i.forEach((r, s) => {
                  r.forEach((o) => {
                    s.setAttribute(o.name, `url('${e}#${o.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(e) {
              const i = e.querySelectorAll(m6),
                r = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let s = 0; s < i.length; s++)
                qk.forEach((o) => {
                  const a = i[s],
                    l = a.getAttribute(o),
                    c = l ? l.match(g6) : null;
                  if (c) {
                    let d = r.get(a);
                    d || ((d = []), r.set(a, d)),
                      d.push({ name: o, value: c[1] });
                  }
                });
            }
            _updateSvgIcon(e) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                e)
              ) {
                const [i, r] = this._splitIconName(e);
                i && (this._svgNamespace = i),
                  r && (this._svgName = r),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(r, i)
                    .pipe(ke(1))
                    .subscribe(
                      (s) => this._setSvgElement(s),
                      (s) => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${i}:${r}! ${s.message}`
                          )
                        );
                      }
                    ));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(T),
                h(sh),
                Zt("aria-hidden"),
                h(f6),
                h(Gi),
                h(h6, 8)
              );
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-icon"]],
              hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
              hostVars: 7,
              hostBindings: function (e, i) {
                2 & e &&
                  (se(
                    "data-mat-icon-type",
                    i._usingFontIcon() ? "font" : "svg"
                  )("data-mat-icon-name", i._svgName || i.fontIcon)(
                    "data-mat-icon-namespace",
                    i._svgNamespace || i.fontSet
                  ),
                  Se("mat-icon-inline", i.inline)(
                    "mat-icon-no-color",
                    "primary" !== i.color &&
                      "accent" !== i.color &&
                      "warn" !== i.color
                  ));
              },
              inputs: {
                color: "color",
                inline: "inline",
                svgIcon: "svgIcon",
                fontSet: "fontSet",
                fontIcon: "fontIcon",
              },
              exportAs: ["matIcon"],
              features: [x],
              ngContentSelectors: o6,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Qe(), Ce(0));
              },
              styles: [
                ".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        ev = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U, U] })),
            t
          );
        })();
      const Qk = ["*"],
        _6 = [
          [
            ["", "mat-list-avatar", ""],
            ["", "mat-list-icon", ""],
            ["", "matListAvatar", ""],
            ["", "matListIcon", ""],
          ],
          [
            ["", "mat-line", ""],
            ["", "matLine", ""],
          ],
          "*",
        ],
        v6 = [
          "[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]",
          "[mat-line], [matLine]",
          "*",
        ],
        w6 = Ms(li(class {})),
        D6 = li(class {}),
        Zk = new C("MatList"),
        M6 = new C("MatNavList");
      let S6 = (() => {
          class t extends w6 {
            constructor(e) {
              super(),
                (this._elementRef = e),
                (this._stateChanges = new B()),
                "action-list" === this._getListType() &&
                  (e.nativeElement.classList.add("mat-action-list"),
                  e.nativeElement.setAttribute("role", "group"));
            }
            _getListType() {
              const e = this._elementRef.nativeElement.nodeName.toLowerCase();
              return "mat-list" === e
                ? "list"
                : "mat-action-list" === e
                ? "action-list"
                : null;
            }
            ngOnChanges() {
              this._stateChanges.next();
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-list"], ["mat-action-list"]],
              hostAttrs: [1, "mat-list", "mat-list-base"],
              inputs: { disableRipple: "disableRipple", disabled: "disabled" },
              exportAs: ["matList"],
              features: [G([{ provide: Zk, useExisting: t }]), x, ct],
              ngContentSelectors: Qk,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Qe(), Ce(0));
              },
              styles: [
                '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:hover{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Xk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "mat-list-avatar", ""],
                ["", "matListAvatar", ""],
              ],
              hostAttrs: [1, "mat-list-avatar"],
            })),
            t
          );
        })(),
        Jk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "mat-list-icon", ""],
                ["", "matListIcon", ""],
              ],
              hostAttrs: [1, "mat-list-icon"],
            })),
            t
          );
        })(),
        E6 = (() => {
          class t extends D6 {
            constructor(e, i, r, s) {
              super(),
                (this._element = e),
                (this._isInteractiveList = !1),
                (this._destroyed = new B()),
                (this._disabled = !1),
                (this._isInteractiveList = !!(
                  r ||
                  (s && "action-list" === s._getListType())
                )),
                (this._list = r || s);
              const o = this._getHostElement();
              "button" === o.nodeName.toLowerCase() &&
                !o.hasAttribute("type") &&
                o.setAttribute("type", "button"),
                this._list &&
                  this._list._stateChanges
                    .pipe(ye(this._destroyed))
                    .subscribe(() => {
                      i.markForCheck();
                    });
            }
            get disabled() {
              return this._disabled || !(!this._list || !this._list.disabled);
            }
            set disabled(e) {
              this._disabled = $(e);
            }
            ngAfterContentInit() {
              !(function jA(t, n, e = "mat") {
                t.changes.pipe(xn(t)).subscribe(({ length: i }) => {
                  El(n, `${e}-2-line`, !1),
                    El(n, `${e}-3-line`, !1),
                    El(n, `${e}-multi-line`, !1),
                    2 === i || 3 === i
                      ? El(n, `${e}-${i}-line`, !0)
                      : i > 3 && El(n, `${e}-multi-line`, !0);
                });
              })(this._lines, this._element);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _isRippleDisabled() {
              return (
                !this._isInteractiveList ||
                this.disableRipple ||
                !(!this._list || !this._list.disableRipple)
              );
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Ue), h(M6, 8), h(Zk, 8));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [
                ["mat-list-item"],
                ["a", "mat-list-item", ""],
                ["button", "mat-list-item", ""],
              ],
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (Ie(r, Xk, 5), Ie(r, Jk, 5), Ie(r, HA, 5)), 2 & e)
                ) {
                  let s;
                  Q((s = K())) && (i._avatar = s.first),
                    Q((s = K())) && (i._icon = s.first),
                    Q((s = K())) && (i._lines = s);
                }
              },
              hostAttrs: [1, "mat-list-item", "mat-focus-indicator"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Se("mat-list-item-disabled", i.disabled)(
                    "mat-list-item-with-avatar",
                    i._avatar || i._icon
                  );
              },
              inputs: { disableRipple: "disableRipple", disabled: "disabled" },
              exportAs: ["matListItem"],
              features: [x],
              ngContentSelectors: v6,
              decls: 6,
              vars: 2,
              consts: [
                [1, "mat-list-item-content"],
                [
                  "mat-ripple",
                  "",
                  1,
                  "mat-list-item-ripple",
                  3,
                  "matRippleTrigger",
                  "matRippleDisabled",
                ],
                [1, "mat-list-text"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Qe(_6),
                  R(0, "span", 0),
                  Me(1, "span", 1),
                  Ce(2),
                  R(3, "span", 2),
                  Ce(4, 1),
                  F(),
                  Ce(5, 2),
                  F()),
                  2 & e &&
                    (de(1),
                    _e("matRippleTrigger", i._getHostElement())(
                      "matRippleDisabled",
                      i._isRippleDisabled()
                    ));
              },
              dependencies: [Ii],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        tT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Al, Wn, U, Gu, nt, Al, U, Gu, J_] })),
            t
          );
        })();
      const O6 = ["mat-menu-item", ""];
      function F6(t, n) {
        1 & t && (Us(), R(0, "svg", 2), Me(1, "polygon", 3), F());
      }
      const nT = ["*"];
      function P6(t, n) {
        if (1 & t) {
          const e = vo();
          R(0, "div", 0),
            he("keydown", function (r) {
              return hi(e), fi(Ct()._handleKeydown(r));
            })("click", function () {
              return hi(e), fi(Ct().closed.emit("click"));
            })("@transformMenu.start", function (r) {
              return hi(e), fi(Ct()._onAnimationStart(r));
            })("@transformMenu.done", function (r) {
              return hi(e), fi(Ct()._onAnimationDone(r));
            }),
            R(1, "div", 1),
            Ce(2),
            F()();
        }
        if (2 & t) {
          const e = Ct();
          _e("id", e.panelId)("ngClass", e._classList)(
            "@transformMenu",
            e._panelAnimationState
          ),
            se("aria-label", e.ariaLabel || null)(
              "aria-labelledby",
              e.ariaLabelledby || null
            )("aria-describedby", e.ariaDescribedby || null);
        }
      }
      const ah = {
          transformMenu: ft("transformMenu", [
            pe("void", j({ opacity: 0, transform: "scale(0.8)" })),
            Ee(
              "void => enter",
              Re(
                "120ms cubic-bezier(0, 0, 0.2, 1)",
                j({ opacity: 1, transform: "scale(1)" })
              )
            ),
            Ee("* => void", Re("100ms 25ms linear", j({ opacity: 0 }))),
          ]),
          fadeInItems: ft("fadeInItems", [
            pe("showing", j({ opacity: 1 })),
            Ee("void => *", [
              j({ opacity: 0 }),
              Re("400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
            ]),
          ]),
        },
        L6 = new C("MatMenuContent"),
        tv = new C("MAT_MENU_PANEL"),
        N6 = li(Ms(class {}));
      let lh = (() => {
        class t extends N6 {
          constructor(e, i, r, s, o) {
            super(),
              (this._elementRef = e),
              (this._document = i),
              (this._focusMonitor = r),
              (this._parentMenu = s),
              (this._changeDetectorRef = o),
              (this.role = "menuitem"),
              (this._hovered = new B()),
              (this._focused = new B()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              s?.addItem?.(this);
          }
          focus(e, i) {
            this._focusMonitor && e
              ? this._focusMonitor.focusVia(this._getHostElement(), e, i)
              : this._getHostElement().focus(i),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor &&
              this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor &&
              this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu &&
                this._parentMenu.removeItem &&
                this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? "-1" : "0";
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(e) {
            this.disabled && (e.preventDefault(), e.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            const e = this._elementRef.nativeElement.cloneNode(!0),
              i = e.querySelectorAll("mat-icon, .material-icons");
            for (let r = 0; r < i.length; r++) i[r].remove();
            return e.textContent?.trim() || "";
          }
          _setHighlighted(e) {
            (this._highlighted = e), this._changeDetectorRef?.markForCheck();
          }
          _hasFocus() {
            return (
              this._document &&
              this._document.activeElement === this._getHostElement()
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(h(T), h(Z), h(Sn), h(tv, 8), h(Ue));
          }),
          (t.ɵcmp = te({
            type: t,
            selectors: [["", "mat-menu-item", ""]],
            hostAttrs: [1, "mat-focus-indicator"],
            hostVars: 10,
            hostBindings: function (e, i) {
              1 & e &&
                he("click", function (s) {
                  return i._checkDisabled(s);
                })("mouseenter", function () {
                  return i._handleMouseEnter();
                }),
                2 & e &&
                  (se("role", i.role)("tabindex", i._getTabIndex())(
                    "aria-disabled",
                    i.disabled.toString()
                  )("disabled", i.disabled || null),
                  Se("mat-menu-item", !0)(
                    "mat-menu-item-highlighted",
                    i._highlighted
                  )("mat-menu-item-submenu-trigger", i._triggersSubmenu));
            },
            inputs: {
              disabled: "disabled",
              disableRipple: "disableRipple",
              role: "role",
            },
            exportAs: ["matMenuItem"],
            features: [x],
            attrs: O6,
            ngContentSelectors: nT,
            decls: 3,
            vars: 3,
            consts: [
              [
                "matRipple",
                "",
                1,
                "mat-menu-ripple",
                3,
                "matRippleDisabled",
                "matRippleTrigger",
              ],
              [
                "class",
                "mat-menu-submenu-icon",
                "viewBox",
                "0 0 5 10",
                "focusable",
                "false",
                4,
                "ngIf",
              ],
              [
                "viewBox",
                "0 0 5 10",
                "focusable",
                "false",
                1,
                "mat-menu-submenu-icon",
              ],
              ["points", "0,0 5,5 0,10"],
            ],
            template: function (e, i) {
              1 & e &&
                (Qe(), Ce(0), Me(1, "div", 0), kt(2, F6, 2, 0, "svg", 1)),
                2 & e &&
                  (de(1),
                  _e("matRippleDisabled", i.disableRipple || i.disabled)(
                    "matRippleTrigger",
                    i._getHostElement()
                  ),
                  de(1),
                  _e("ngIf", i._triggersSubmenu));
            },
            dependencies: [So, Ii],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const iT = new C("mat-menu-default-options", {
        providedIn: "root",
        factory: function B6() {
          return {
            overlapTrigger: !1,
            xPosition: "after",
            yPosition: "below",
            backdropClass: "cdk-overlay-transparent-backdrop",
          };
        },
      });
      let V6 = 0,
        Pl = (() => {
          class t {
            constructor(e, i, r, s) {
              (this._elementRef = e),
                (this._ngZone = i),
                (this._defaultOptions = r),
                (this._changeDetectorRef = s),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new os()),
                (this._tabSubscription = Ve.EMPTY),
                (this._classList = {}),
                (this._panelAnimationState = "void"),
                (this._animationDone = new B()),
                (this.overlayPanelClass =
                  this._defaultOptions.overlayPanelClass || ""),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new W()),
                (this.close = this.closed),
                (this.panelId = "mat-menu-panel-" + V6++);
            }
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(e) {
              (this._xPosition = e), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(e) {
              (this._yPosition = e), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(e) {
              this._overlapTrigger = $(e);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(e) {
              this._hasBackdrop = $(e);
            }
            set panelClass(e) {
              const i = this._previousPanelClass;
              i &&
                i.length &&
                i.split(" ").forEach((r) => {
                  this._classList[r] = !1;
                }),
                (this._previousPanelClass = e),
                e &&
                  e.length &&
                  (e.split(" ").forEach((r) => {
                    this._classList[r] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ""));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(e) {
              this.panelClass = e;
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new F_(this._directDescendantItems)
                  .withWrap()
                  .withTypeAhead()
                  .withHomeAndEnd()),
                (this._tabSubscription = this._keyManager.tabOut.subscribe(() =>
                  this.closed.emit("tab")
                )),
                this._directDescendantItems.changes
                  .pipe(
                    xn(this._directDescendantItems),
                    ht((e) => yt(...e.map((i) => i._focused)))
                  )
                  .subscribe((e) => this._keyManager.updateActiveItem(e)),
                this._directDescendantItems.changes.subscribe((e) => {
                  const i = this._keyManager;
                  if (
                    "enter" === this._panelAnimationState &&
                    i.activeItem?._hasFocus()
                  ) {
                    const r = e.toArray(),
                      s = Math.max(
                        0,
                        Math.min(r.length - 1, i.activeItemIndex || 0)
                      );
                    r[s] && !r[s].disabled
                      ? i.setActiveItem(s)
                      : i.setNextItemActive();
                  }
                });
            }
            ngOnDestroy() {
              this._directDescendantItems.destroy(),
                this._tabSubscription.unsubscribe(),
                this.closed.complete();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                xn(this._directDescendantItems),
                ht((i) => yt(...i.map((r) => r._hovered)))
              );
            }
            addItem(e) {}
            removeItem(e) {}
            _handleKeydown(e) {
              const i = e.keyCode,
                r = this._keyManager;
              switch (i) {
                case 27:
                  Mn(e) || (e.preventDefault(), this.closed.emit("keydown"));
                  break;
                case 37:
                  this.parentMenu &&
                    "ltr" === this.direction &&
                    this.closed.emit("keydown");
                  break;
                case 39:
                  this.parentMenu &&
                    "rtl" === this.direction &&
                    this.closed.emit("keydown");
                  break;
                default:
                  return (
                    (38 === i || 40 === i) && r.setFocusOrigin("keyboard"),
                    void r.onKeydown(e)
                  );
              }
              e.stopPropagation();
            }
            focusFirstItem(e = "program") {
              this._ngZone.onStable.pipe(ke(1)).subscribe(() => {
                let i = null;
                if (
                  (this._directDescendantItems.length &&
                    (i = this._directDescendantItems.first
                      ._getHostElement()
                      .closest('[role="menu"]')),
                  !i || !i.contains(document.activeElement))
                ) {
                  const r = this._keyManager;
                  r.setFocusOrigin(e).setFirstItemActive(),
                    !r.activeItem && i && i.focus();
                }
              });
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(e) {
              const i = Math.min(this._baseElevation + e, 24),
                r = `${this._elevationPrefix}${i}`,
                s = Object.keys(this._classList).find((o) =>
                  o.startsWith(this._elevationPrefix)
                );
              (!s || s === this._previousElevation) &&
                (this._previousElevation &&
                  (this._classList[this._previousElevation] = !1),
                (this._classList[r] = !0),
                (this._previousElevation = r));
            }
            setPositionClasses(e = this.xPosition, i = this.yPosition) {
              const r = this._classList;
              (r["mat-menu-before"] = "before" === e),
                (r["mat-menu-after"] = "after" === e),
                (r["mat-menu-above"] = "above" === i),
                (r["mat-menu-below"] = "below" === i),
                this._changeDetectorRef?.markForCheck();
            }
            _startAnimation() {
              this._panelAnimationState = "enter";
            }
            _resetAnimation() {
              this._panelAnimationState = "void";
            }
            _onAnimationDone(e) {
              this._animationDone.next(e), (this._isAnimating = !1);
            }
            _onAnimationStart(e) {
              (this._isAnimating = !0),
                "enter" === e.toState &&
                  0 === this._keyManager.activeItemIndex &&
                  (e.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes.pipe(xn(this._allItems)).subscribe((e) => {
                this._directDescendantItems.reset(
                  e.filter((i) => i._parentMenu === this)
                ),
                  this._directDescendantItems.notifyOnChanges();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Y), h(iT), h(Ue));
            }),
            (t.ɵdir = y({
              type: t,
              contentQueries: function (e, i, r) {
                if (
                  (1 & e && (Ie(r, L6, 5), Ie(r, lh, 5), Ie(r, lh, 4)), 2 & e)
                ) {
                  let s;
                  Q((s = K())) && (i.lazyContent = s.first),
                    Q((s = K())) && (i._allItems = s),
                    Q((s = K())) && (i.items = s);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && et(xt, 5), 2 & e)) {
                  let r;
                  Q((r = K())) && (i.templateRef = r.first);
                }
              },
              inputs: {
                backdropClass: "backdropClass",
                ariaLabel: ["aria-label", "ariaLabel"],
                ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
                ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
                xPosition: "xPosition",
                yPosition: "yPosition",
                overlapTrigger: "overlapTrigger",
                hasBackdrop: "hasBackdrop",
                panelClass: ["class", "panelClass"],
                classList: "classList",
              },
              outputs: { closed: "closed", close: "close" },
            })),
            t
          );
        })(),
        H6 = (() => {
          class t extends Pl {
            constructor(e, i, r, s) {
              super(e, i, r, s),
                (this._elevationPrefix = "mat-elevation-z"),
                (this._baseElevation = 4);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Y), h(iT), h(Ue));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-menu"]],
              hostVars: 3,
              hostBindings: function (e, i) {
                2 & e &&
                  se("aria-label", null)("aria-labelledby", null)(
                    "aria-describedby",
                    null
                  );
              },
              exportAs: ["matMenu"],
              features: [G([{ provide: tv, useExisting: t }]), x],
              ngContentSelectors: nT,
              decls: 1,
              vars: 0,
              consts: [
                [
                  "tabindex",
                  "-1",
                  "role",
                  "menu",
                  1,
                  "mat-menu-panel",
                  3,
                  "id",
                  "ngClass",
                  "keydown",
                  "click",
                ],
                [1, "mat-menu-content"],
              ],
              template: function (e, i) {
                1 & e && (Qe(), kt(0, P6, 3, 6, "ng-template"));
              },
              dependencies: [hd],
              styles: [
                'mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px;position:relative}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::after{display:block;position:absolute;content:"";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}',
              ],
              encapsulation: 2,
              data: { animation: [ah.transformMenu, ah.fadeInItems] },
              changeDetection: 0,
            })),
            t
          );
        })();
      const rT = new C("mat-menu-scroll-strategy"),
        G6 = {
          provide: rT,
          deps: [An],
          useFactory: function j6(t) {
            return () => t.scrollStrategies.reposition();
          },
        },
        sT = Hr({ passive: !0 });
      let U6 = (() => {
          class t {
            constructor(e, i, r, s, o, a, l, c, d) {
              (this._overlay = e),
                (this._element = i),
                (this._viewContainerRef = r),
                (this._menuItemInstance = a),
                (this._dir = l),
                (this._focusMonitor = c),
                (this._ngZone = d),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = Ve.EMPTY),
                (this._hoverSubscription = Ve.EMPTY),
                (this._menuCloseSubscription = Ve.EMPTY),
                (this._handleTouchStart = (u) => {
                  L_(u) || (this._openedBy = "touch");
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new W()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new W()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = s),
                (this._parentMaterialMenu = o instanceof Pl ? o : void 0),
                i.nativeElement.addEventListener(
                  "touchstart",
                  this._handleTouchStart,
                  sT
                ),
                a && (a._triggersSubmenu = this.triggersSubmenu());
            }
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(e) {
              this.menu = e;
            }
            get menu() {
              return this._menu;
            }
            set menu(e) {
              e !== this._menu &&
                ((this._menu = e),
                this._menuCloseSubscription.unsubscribe(),
                e &&
                  (this._menuCloseSubscription = e.close.subscribe((i) => {
                    this._destroyMenu(i),
                      ("click" === i || "tab" === i) &&
                        this._parentMaterialMenu &&
                        this._parentMaterialMenu.closed.emit(i);
                  })));
            }
            ngAfterContentInit() {
              this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef &&
                (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener(
                  "touchstart",
                  this._handleTouchStart,
                  sT
                ),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr";
            }
            triggersSubmenu() {
              return !(!this._menuItemInstance || !this._parentMaterialMenu);
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              const e = this.menu;
              if (this._menuOpen || !e) return;
              const i = this._createOverlay(e),
                r = i.getConfig(),
                s = r.positionStrategy;
              this._setPosition(e, s),
                (r.hasBackdrop = e.hasBackdrop ?? !this.triggersSubmenu()),
                i.attach(this._getPortal(e)),
                e.lazyContent && e.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription =
                  this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(e),
                e instanceof Pl &&
                  (e._startAnimation(),
                  e._directDescendantItems.changes
                    .pipe(ye(e.close))
                    .subscribe(() => {
                      s.withLockedPosition(!1).reapplyLastPosition(),
                        s.withLockedPosition(!0);
                    }));
            }
            closeMenu() {
              this.menu?.close.emit();
            }
            focus(e, i) {
              this._focusMonitor && e
                ? this._focusMonitor.focusVia(this._element, e, i)
                : this._element.nativeElement.focus(i);
            }
            updatePosition() {
              this._overlayRef?.updatePosition();
            }
            _destroyMenu(e) {
              if (!this._overlayRef || !this.menuOpen) return;
              const i = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                this.restoreFocus &&
                  ("keydown" === e ||
                    !this._openedBy ||
                    !this.triggersSubmenu()) &&
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                i instanceof Pl
                  ? (i._resetAnimation(),
                    i.lazyContent
                      ? i._animationDone
                          .pipe(
                            ve((r) => "void" === r.toState),
                            ke(1),
                            ye(i.lazyContent._attached)
                          )
                          .subscribe({
                            next: () => i.lazyContent.detach(),
                            complete: () => this._setIsMenuOpen(!1),
                          })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), i?.lazyContent?.detach());
            }
            _initMenu(e) {
              (e.parentMenu = this.triggersSubmenu()
                ? this._parentMaterialMenu
                : void 0),
                (e.direction = this.dir),
                this._setMenuElevation(e),
                e.focusFirstItem(this._openedBy || "program"),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation(e) {
              if (e.setElevation) {
                let i = 0,
                  r = e.parentMenu;
                for (; r; ) i++, (r = r.parentMenu);
                e.setElevation(i);
              }
            }
            _setIsMenuOpen(e) {
              (this._menuOpen = e),
                this._menuOpen
                  ? this.menuOpened.emit()
                  : this.menuClosed.emit(),
                this.triggersSubmenu() &&
                  this._menuItemInstance._setHighlighted(e);
            }
            _createOverlay(e) {
              if (!this._overlayRef) {
                const i = this._getOverlayConfig(e);
                this._subscribeToPositions(e, i.positionStrategy),
                  (this._overlayRef = this._overlay.create(i)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig(e) {
              return new Yu({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn(
                    ".mat-menu-panel, .mat-mdc-menu-panel"
                  ),
                backdropClass:
                  e.backdropClass || "cdk-overlay-transparent-backdrop",
                panelClass: e.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(e, i) {
              e.setPositionClasses &&
                i.positionChanges.subscribe((r) => {
                  const s =
                      "start" === r.connectionPair.overlayX
                        ? "after"
                        : "before",
                    o = "top" === r.connectionPair.overlayY ? "below" : "above";
                  this._ngZone
                    ? this._ngZone.run(() => e.setPositionClasses(s, o))
                    : e.setPositionClasses(s, o);
                });
            }
            _setPosition(e, i) {
              let [r, s] =
                  "before" === e.xPosition
                    ? ["end", "start"]
                    : ["start", "end"],
                [o, a] =
                  "above" === e.yPosition
                    ? ["bottom", "top"]
                    : ["top", "bottom"],
                [l, c] = [o, a],
                [d, u] = [r, s],
                f = 0;
              if (this.triggersSubmenu()) {
                if (
                  ((u = r = "before" === e.xPosition ? "start" : "end"),
                  (s = d = "end" === r ? "start" : "end"),
                  this._parentMaterialMenu)
                ) {
                  if (null == this._parentInnerPadding) {
                    const p = this._parentMaterialMenu.items.first;
                    this._parentInnerPadding = p
                      ? p._getHostElement().offsetTop
                      : 0;
                  }
                  f =
                    "bottom" === o
                      ? this._parentInnerPadding
                      : -this._parentInnerPadding;
                }
              } else
                e.overlapTrigger ||
                  ((l = "top" === o ? "bottom" : "top"),
                  (c = "top" === a ? "bottom" : "top"));
              i.withPositions([
                {
                  originX: r,
                  originY: l,
                  overlayX: d,
                  overlayY: o,
                  offsetY: f,
                },
                {
                  originX: s,
                  originY: l,
                  overlayX: u,
                  overlayY: o,
                  offsetY: f,
                },
                {
                  originX: r,
                  originY: c,
                  overlayX: d,
                  overlayY: a,
                  offsetY: -f,
                },
                {
                  originX: s,
                  originY: c,
                  overlayX: u,
                  overlayY: a,
                  offsetY: -f,
                },
              ]);
            }
            _menuClosingActions() {
              const e = this._overlayRef.backdropClick(),
                i = this._overlayRef.detachments();
              return yt(
                e,
                this._parentMaterialMenu
                  ? this._parentMaterialMenu.closed
                  : N(),
                this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      ve((o) => o !== this._menuItemInstance),
                      ve(() => this._menuOpen)
                    )
                  : N(),
                i
              );
            }
            _handleMousedown(e) {
              P_(e) ||
                ((this._openedBy = 0 === e.button ? "mouse" : void 0),
                this.triggersSubmenu() && e.preventDefault());
            }
            _handleKeydown(e) {
              const i = e.keyCode;
              (13 === i || 32 === i) && (this._openedBy = "keyboard"),
                this.triggersSubmenu() &&
                  ((39 === i && "ltr" === this.dir) ||
                    (37 === i && "rtl" === this.dir)) &&
                  ((this._openedBy = "keyboard"), this.openMenu());
            }
            _handleClick(e) {
              this.triggersSubmenu()
                ? (e.stopPropagation(), this.openMenu())
                : this.toggleMenu();
            }
            _handleHover() {
              !this.triggersSubmenu() ||
                !this._parentMaterialMenu ||
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    ve((e) => e === this._menuItemInstance && !e.disabled),
                    cu(0, G_)
                  )
                  .subscribe(() => {
                    (this._openedBy = "mouse"),
                      this.menu instanceof Pl && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(
                              ke(1),
                              cu(0, G_),
                              ye(this._parentMaterialMenu._hovered())
                            )
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal(e) {
              return (
                (!this._portal || this._portal.templateRef !== e.templateRef) &&
                  (this._portal = new qu(
                    e.templateRef,
                    this._viewContainerRef
                  )),
                this._portal
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(An),
                h(T),
                h(_t),
                h(rT),
                h(tv, 8),
                h(lh, 10),
                h(En, 8),
                h(Sn),
                h(Y)
              );
            }),
            (t.ɵdir = y({
              type: t,
              hostVars: 3,
              hostBindings: function (e, i) {
                1 & e &&
                  he("click", function (s) {
                    return i._handleClick(s);
                  })("mousedown", function (s) {
                    return i._handleMousedown(s);
                  })("keydown", function (s) {
                    return i._handleKeydown(s);
                  }),
                  2 & e &&
                    se("aria-haspopup", i.menu ? "menu" : null)(
                      "aria-expanded",
                      i.menuOpen || null
                    )("aria-controls", i.menuOpen ? i.menu.panelId : null);
              },
              inputs: {
                _deprecatedMatMenuTriggerFor: [
                  "mat-menu-trigger-for",
                  "_deprecatedMatMenuTriggerFor",
                ],
                menu: ["matMenuTriggerFor", "menu"],
                menuData: ["matMenuTriggerData", "menuData"],
                restoreFocus: ["matMenuTriggerRestoreFocus", "restoreFocus"],
              },
              outputs: {
                menuOpened: "menuOpened",
                onMenuOpen: "onMenuOpen",
                menuClosed: "menuClosed",
                onMenuClose: "onMenuClose",
              },
            })),
            t
          );
        })(),
        z6 = (() => {
          class t extends U6 {}
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "mat-menu-trigger-for", ""],
                ["", "matMenuTriggerFor", ""],
              ],
              hostAttrs: [1, "mat-menu-trigger"],
              exportAs: ["matMenuTrigger"],
              features: [x],
            })),
            t
          );
        })(),
        oT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [G6], imports: [nt, U, Wn, ar, or, U] })),
            t
          );
        })();
      const Q6 = {
        provide: new C("mat-select-scroll-strategy"),
        deps: [An],
        useFactory: function Y6(t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let nv = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({
            providers: [Q6],
            imports: [nt, ar, kl, U, or, Ku, kl, U],
          })),
          t
        );
      })();
      const J6 = {
        provide: new C("mat-tooltip-scroll-strategy"),
        deps: [An],
        useFactory: function X6(t) {
          return () => t.scrollStrategies.reposition({ scrollThrottle: 20 });
        },
      };
      let iv = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [J6], imports: [Go, nt, ar, U, U, or] })),
            t
          );
        })(),
        rv = (() => {
          class t {
            constructor() {
              (this.changes = new B()),
                (this.itemsPerPageLabel = "Items per page:"),
                (this.nextPageLabel = "Next page"),
                (this.previousPageLabel = "Previous page"),
                (this.firstPageLabel = "First page"),
                (this.lastPageLabel = "Last page"),
                (this.getRangeLabel = (e, i, r) => {
                  if (0 == r || 0 == i) return `0 of ${r}`;
                  const s = e * i;
                  return `${s + 1} \u2013 ${
                    s < (r = Math.max(r, 0)) ? Math.min(s + i, r) : s + i
                  } of ${r}`;
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      const sq = {
        provide: rv,
        deps: [[new on(), new Nn(), rv]],
        useFactory: function rq(t) {
          return t || new rv();
        },
      };
      let lT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [sq], imports: [nt, Es, nv, iv, U] })),
            t
          );
        })(),
        cT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, U, U] })),
            t
          );
        })();
      function aq(t, n) {
        if ((1 & t && (Us(), Me(0, "circle", 4)), 2 & t)) {
          const e = Ct(),
            i = ln(1);
          cn(
            "animation-name",
            "mat-progress-spinner-stroke-rotate-" + e._spinnerAnimationLabel
          )("stroke-dashoffset", e._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            e._getStrokeCircumference(),
            "px"
          )(
            "stroke-width",
            e._getCircleStrokeWidth(),
            "%"
          )("transform-origin", e._getCircleTransformOrigin(i)),
            se("r", e._getCircleRadius());
        }
      }
      function lq(t, n) {
        if ((1 & t && (Us(), Me(0, "circle", 4)), 2 & t)) {
          const e = Ct(),
            i = ln(1);
          cn("stroke-dashoffset", e._getStrokeDashOffset(), "px")(
            "stroke-dasharray",
            e._getStrokeCircumference(),
            "px"
          )(
            "stroke-width",
            e._getCircleStrokeWidth(),
            "%"
          )("transform-origin", e._getCircleTransformOrigin(i)),
            se("r", e._getCircleRadius());
        }
      }
      const dq = Gr(
          class {
            constructor(t) {
              this._elementRef = t;
            }
          },
          "primary"
        ),
        uq = new C("mat-progress-spinner-default-options", {
          providedIn: "root",
          factory: function hq() {
            return { diameter: 100 };
          },
        });
      class lr extends dq {
        constructor(n, e, i, r, s, o, a, l) {
          super(n),
            (this._document = i),
            (this._diameter = 100),
            (this._value = 0),
            (this._resizeSubscription = Ve.EMPTY),
            (this.mode = "determinate");
          const c = lr._diameters;
          (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            c.has(i.head) || c.set(i.head, new Set([100])),
            (this._noopAnimations =
              "NoopAnimations" === r && !!s && !s._forceAnimations),
            "mat-spinner" === n.nativeElement.nodeName.toLowerCase() &&
              (this.mode = "indeterminate"),
            s &&
              (s.color && (this.color = this.defaultColor = s.color),
              s.diameter && (this.diameter = s.diameter),
              s.strokeWidth && (this.strokeWidth = s.strokeWidth)),
            e.isBrowser &&
              e.SAFARI &&
              a &&
              o &&
              l &&
              (this._resizeSubscription = a.change(150).subscribe(() => {
                "indeterminate" === this.mode && l.run(() => o.markForCheck());
              }));
        }
        get diameter() {
          return this._diameter;
        }
        set diameter(n) {
          (this._diameter = $t(n)),
            (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            this._styleRoot && this._attachStyleNode();
        }
        get strokeWidth() {
          return this._strokeWidth || this.diameter / 10;
        }
        set strokeWidth(n) {
          this._strokeWidth = $t(n);
        }
        get value() {
          return "determinate" === this.mode ? this._value : 0;
        }
        set value(n) {
          this._value = Math.max(0, Math.min(100, $t(n)));
        }
        ngOnInit() {
          const n = this._elementRef.nativeElement;
          (this._styleRoot = _A(n) || this._document.head),
            this._attachStyleNode(),
            n.classList.add("mat-progress-spinner-indeterminate-animation");
        }
        ngOnDestroy() {
          this._resizeSubscription.unsubscribe();
        }
        _getCircleRadius() {
          return (this.diameter - 10) / 2;
        }
        _getViewBox() {
          const n = 2 * this._getCircleRadius() + this.strokeWidth;
          return `0 0 ${n} ${n}`;
        }
        _getStrokeCircumference() {
          return 2 * Math.PI * this._getCircleRadius();
        }
        _getStrokeDashOffset() {
          return "determinate" === this.mode
            ? (this._getStrokeCircumference() * (100 - this._value)) / 100
            : null;
        }
        _getCircleStrokeWidth() {
          return (this.strokeWidth / this.diameter) * 100;
        }
        _getCircleTransformOrigin(n) {
          const e = 50 * (n.currentScale ?? 1);
          return `${e}% ${e}%`;
        }
        _attachStyleNode() {
          const n = this._styleRoot,
            e = this._diameter,
            i = lr._diameters;
          let r = i.get(n);
          if (!r || !r.has(e)) {
            const s = this._document.createElement("style");
            s.setAttribute(
              "mat-spinner-animation",
              this._spinnerAnimationLabel
            ),
              (s.textContent = this._getAnimationText()),
              n.appendChild(s),
              r || ((r = new Set()), i.set(n, r)),
              r.add(e);
          }
        }
        _getAnimationText() {
          const n = this._getStrokeCircumference();
          return "\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n"
            .replace(/START_VALUE/g, "" + 0.95 * n)
            .replace(/END_VALUE/g, "" + 0.2 * n)
            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);
        }
        _getSpinnerAnimationLabel() {
          return this.diameter.toString().replace(".", "_");
        }
      }
      (lr._diameters = new WeakMap()),
        (lr.ɵfac = function (n) {
          return new (n || lr)(
            h(T),
            h(Vt),
            h(Z, 8),
            h(en, 8),
            h(uq),
            h(Ue),
            h(zo),
            h(Y)
          );
        }),
        (lr.ɵcmp = te({
          type: lr,
          selectors: [["mat-progress-spinner"], ["mat-spinner"]],
          hostAttrs: [
            "role",
            "progressbar",
            "tabindex",
            "-1",
            1,
            "mat-progress-spinner",
            "mat-spinner",
          ],
          hostVars: 10,
          hostBindings: function (n, e) {
            2 & n &&
              (se("aria-valuemin", "determinate" === e.mode ? 0 : null)(
                "aria-valuemax",
                "determinate" === e.mode ? 100 : null
              )("aria-valuenow", "determinate" === e.mode ? e.value : null)(
                "mode",
                e.mode
              ),
              cn("width", e.diameter, "px")("height", e.diameter, "px"),
              Se("_mat-animation-noopable", e._noopAnimations));
          },
          inputs: {
            color: "color",
            diameter: "diameter",
            strokeWidth: "strokeWidth",
            mode: "mode",
            value: "value",
          },
          exportAs: ["matProgressSpinner"],
          features: [x],
          decls: 4,
          vars: 8,
          consts: [
            [
              "preserveAspectRatio",
              "xMidYMid meet",
              "focusable",
              "false",
              "aria-hidden",
              "true",
              3,
              "ngSwitch",
            ],
            ["svg", ""],
            [
              "cx",
              "50%",
              "cy",
              "50%",
              3,
              "animation-name",
              "stroke-dashoffset",
              "stroke-dasharray",
              "stroke-width",
              "transform-origin",
              4,
              "ngSwitchCase",
            ],
            [
              "cx",
              "50%",
              "cy",
              "50%",
              3,
              "stroke-dashoffset",
              "stroke-dasharray",
              "stroke-width",
              "transform-origin",
              4,
              "ngSwitchCase",
            ],
            ["cx", "50%", "cy", "50%"],
          ],
          template: function (n, e) {
            1 & n &&
              (Us(),
              R(0, "svg", 0, 1),
              kt(2, aq, 1, 11, "circle", 2),
              kt(3, lq, 1, 9, "circle", 3),
              F()),
              2 & n &&
                (cn("width", e.diameter, "px")("height", e.diameter, "px"),
                _e("ngSwitch", "indeterminate" === e.mode),
                se("viewBox", e._getViewBox()),
                de(2),
                _e("ngSwitchCase", !0),
                de(1),
                _e("ngSwitchCase", !1));
          },
          dependencies: [fd, dD],
          styles: [
            ".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:rgba(0,0,0,0);transition:stroke-dashoffset 225ms linear}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}.mat-progress-spinner[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}.mat-progress-spinner._mat-animation-noopable svg,.mat-progress-spinner._mat-animation-noopable circle{animation:none;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        }));
      let dT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U, nt, U] })),
            t
          );
        })(),
        pT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Wn, U, U] })),
            t
          );
        })();
      const ch = ["*"],
        Sq = ["content"];
      function Eq(t, n) {
        if (1 & t) {
          const e = vo();
          R(0, "div", 2),
            he("click", function () {
              return hi(e), fi(Ct()._onBackdropClicked());
            }),
            F();
        }
        2 & t && Se("mat-drawer-shown", Ct()._isShowingBackdrop());
      }
      function Aq(t, n) {
        1 & t && (R(0, "mat-drawer-content"), Ce(1, 2), F());
      }
      const kq = [[["mat-drawer"]], [["mat-drawer-content"]], "*"],
        Tq = ["mat-drawer", "mat-drawer-content", "*"];
      function Iq(t, n) {
        if (1 & t) {
          const e = vo();
          R(0, "div", 2),
            he("click", function () {
              return hi(e), fi(Ct()._onBackdropClicked());
            }),
            F();
        }
        2 & t && Se("mat-drawer-shown", Ct()._isShowingBackdrop());
      }
      function Rq(t, n) {
        1 & t && (R(0, "mat-sidenav-content"), Ce(1, 2), F());
      }
      const Oq = [[["mat-sidenav"]], [["mat-sidenav-content"]], "*"],
        Fq = ["mat-sidenav", "mat-sidenav-content", "*"],
        mT = {
          transformDrawer: ft("transform", [
            pe(
              "open, open-instant",
              j({ transform: "none", visibility: "visible" })
            ),
            pe("void", j({ "box-shadow": "none", visibility: "hidden" })),
            Ee("void => open-instant", Re("0ms")),
            Ee(
              "void <=> open, open-instant => void",
              Re("400ms cubic-bezier(0.25, 0.8, 0.25, 1)")
            ),
          ]),
        },
        Lq = new C("MAT_DRAWER_DEFAULT_AUTOSIZE", {
          providedIn: "root",
          factory: function Nq() {
            return !1;
          },
        }),
        ov = new C("MAT_DRAWER_CONTAINER");
      let dh = (() => {
          class t extends Il {
            constructor(e, i, r, s, o) {
              super(r, s, o),
                (this._changeDetectorRef = e),
                (this._container = i);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(Ue), h(me(() => _T)), h(T), h($u), h(Y));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-drawer-content"]],
              hostAttrs: [1, "mat-drawer-content"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  cn("margin-left", i._container._contentMargins.left, "px")(
                    "margin-right",
                    i._container._contentMargins.right,
                    "px"
                  );
              },
              features: [G([{ provide: Il, useExisting: t }]), x],
              ngContentSelectors: ch,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Qe(), Ce(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        gT = (() => {
          class t {
            constructor(e, i, r, s, o, a, l, c) {
              (this._elementRef = e),
                (this._focusTrapFactory = i),
                (this._focusMonitor = r),
                (this._platform = s),
                (this._ngZone = o),
                (this._interactivityChecker = a),
                (this._doc = l),
                (this._container = c),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = "start"),
                (this._mode = "over"),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new B()),
                (this._animationEnd = new B()),
                (this._animationState = "void"),
                (this.openedChange = new W(!0)),
                (this._openedStream = this.openedChange.pipe(
                  ve((d) => d),
                  q(() => {})
                )),
                (this.openedStart = this._animationStarted.pipe(
                  ve(
                    (d) =>
                      d.fromState !== d.toState &&
                      0 === d.toState.indexOf("open")
                  ),
                  Ld(void 0)
                )),
                (this._closedStream = this.openedChange.pipe(
                  ve((d) => !d),
                  q(() => {})
                )),
                (this.closedStart = this._animationStarted.pipe(
                  ve((d) => d.fromState !== d.toState && "void" === d.toState),
                  Ld(void 0)
                )),
                (this._destroyed = new B()),
                (this.onPositionChanged = new W()),
                (this._modeChanged = new B()),
                this.openedChange.subscribe((d) => {
                  d
                    ? (this._doc &&
                        (this._elementFocusedBeforeDrawerWasOpened =
                          this._doc.activeElement),
                      this._takeFocus())
                    : this._isFocusWithinDrawer() &&
                      this._restoreFocus(this._openedVia || "program");
                }),
                this._ngZone.runOutsideAngular(() => {
                  Ei(this._elementRef.nativeElement, "keydown")
                    .pipe(
                      ve(
                        (d) => 27 === d.keyCode && !this.disableClose && !Mn(d)
                      ),
                      ye(this._destroyed)
                    )
                    .subscribe((d) =>
                      this._ngZone.run(() => {
                        this.close(), d.stopPropagation(), d.preventDefault();
                      })
                    );
                }),
                this._animationEnd
                  .pipe(
                    xA(
                      (d, u) =>
                        d.fromState === u.fromState && d.toState === u.toState
                    )
                  )
                  .subscribe((d) => {
                    const { fromState: u, toState: f } = d;
                    ((0 === f.indexOf("open") && "void" === u) ||
                      ("void" === f && 0 === u.indexOf("open"))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            get position() {
              return this._position;
            }
            set position(e) {
              (e = "end" === e ? "end" : "start") !== this._position &&
                (this._isAttached && this._updatePositionInParent(e),
                (this._position = e),
                this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(e) {
              (this._mode = e),
                this._updateFocusTrapState(),
                this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(e) {
              this._disableClose = $(e);
            }
            get autoFocus() {
              return (
                this._autoFocus ??
                ("side" === this.mode ? "dialog" : "first-tabbable")
              );
            }
            set autoFocus(e) {
              ("true" === e || "false" === e || null == e) && (e = $(e)),
                (this._autoFocus = e);
            }
            get opened() {
              return this._opened;
            }
            set opened(e) {
              this.toggle($(e));
            }
            _forceFocus(e, i) {
              this._interactivityChecker.isFocusable(e) ||
                ((e.tabIndex = -1),
                this._ngZone.runOutsideAngular(() => {
                  const r = () => {
                    e.removeEventListener("blur", r),
                      e.removeEventListener("mousedown", r),
                      e.removeAttribute("tabindex");
                  };
                  e.addEventListener("blur", r),
                    e.addEventListener("mousedown", r);
                })),
                e.focus(i);
            }
            _focusByCssSelector(e, i) {
              let r = this._elementRef.nativeElement.querySelector(e);
              r && this._forceFocus(r, i);
            }
            _takeFocus() {
              if (!this._focusTrap) return;
              const e = this._elementRef.nativeElement;
              switch (this.autoFocus) {
                case !1:
                case "dialog":
                  return;
                case !0:
                case "first-tabbable":
                  this._focusTrap.focusInitialElementWhenReady().then((i) => {
                    !i &&
                      "function" ==
                        typeof this._elementRef.nativeElement.focus &&
                      e.focus();
                  });
                  break;
                case "first-heading":
                  this._focusByCssSelector(
                    'h1, h2, h3, h4, h5, h6, [role="heading"]'
                  );
                  break;
                default:
                  this._focusByCssSelector(this.autoFocus);
              }
            }
            _restoreFocus(e) {
              "dialog" !== this.autoFocus &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(
                      this._elementFocusedBeforeDrawerWasOpened,
                      e
                    )
                  : this._elementRef.nativeElement.blur(),
                (this._elementFocusedBeforeDrawerWasOpened = null));
            }
            _isFocusWithinDrawer() {
              const e = this._doc.activeElement;
              return !!e && this._elementRef.nativeElement.contains(e);
            }
            ngAfterViewInit() {
              (this._isAttached = !0),
                (this._focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement
                )),
                this._updateFocusTrapState(),
                "end" === this._position && this._updatePositionInParent("end");
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              this._focusTrap && this._focusTrap.destroy(),
                this._anchor?.remove(),
                (this._anchor = null),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(e) {
              return this.toggle(!0, e);
            }
            close() {
              return this.toggle(!1);
            }
            _closeViaBackdropClick() {
              return this._setOpen(!1, !0, "mouse");
            }
            toggle(e = !this.opened, i) {
              e && i && (this._openedVia = i);
              const r = this._setOpen(
                e,
                !e && this._isFocusWithinDrawer(),
                this._openedVia || "program"
              );
              return e || (this._openedVia = null), r;
            }
            _setOpen(e, i, r) {
              return (
                (this._opened = e),
                e
                  ? (this._animationState = this._enableAnimations
                      ? "open"
                      : "open-instant")
                  : ((this._animationState = "void"),
                    i && this._restoreFocus(r)),
                this._updateFocusTrapState(),
                new Promise((s) => {
                  this.openedChange
                    .pipe(ke(1))
                    .subscribe((o) => s(o ? "open" : "close"));
                })
              );
            }
            _getWidth() {
              return (
                (this._elementRef.nativeElement &&
                  this._elementRef.nativeElement.offsetWidth) ||
                0
              );
            }
            _updateFocusTrapState() {
              this._focusTrap &&
                (this._focusTrap.enabled = this.opened && "side" !== this.mode);
            }
            _updatePositionInParent(e) {
              const i = this._elementRef.nativeElement,
                r = i.parentNode;
              "end" === e
                ? (this._anchor ||
                    ((this._anchor =
                      this._doc.createComment("mat-drawer-anchor")),
                    r.insertBefore(this._anchor, i)),
                  r.appendChild(i))
                : this._anchor &&
                  this._anchor.parentNode.insertBefore(i, this._anchor);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(T),
                h(Vu),
                h(Sn),
                h(Vt),
                h(Y),
                h(Sl),
                h(Z, 8),
                h(ov, 8)
              );
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-drawer"]],
              viewQuery: function (e, i) {
                if ((1 & e && et(Sq, 5), 2 & e)) {
                  let r;
                  Q((r = K())) && (i._content = r.first);
                }
              },
              hostAttrs: ["tabIndex", "-1", 1, "mat-drawer"],
              hostVars: 12,
              hostBindings: function (e, i) {
                1 & e &&
                  Vc("@transform.start", function (s) {
                    return i._animationStarted.next(s);
                  })("@transform.done", function (s) {
                    return i._animationEnd.next(s);
                  }),
                  2 & e &&
                    (se("align", null),
                    jc("@transform", i._animationState),
                    Se("mat-drawer-end", "end" === i.position)(
                      "mat-drawer-over",
                      "over" === i.mode
                    )("mat-drawer-push", "push" === i.mode)(
                      "mat-drawer-side",
                      "side" === i.mode
                    )("mat-drawer-opened", i.opened));
              },
              inputs: {
                position: "position",
                mode: "mode",
                disableClose: "disableClose",
                autoFocus: "autoFocus",
                opened: "opened",
              },
              outputs: {
                openedChange: "openedChange",
                _openedStream: "opened",
                openedStart: "openedStart",
                _closedStream: "closed",
                closedStart: "closedStart",
                onPositionChanged: "positionChanged",
              },
              exportAs: ["matDrawer"],
              ngContentSelectors: ch,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (e, i) {
                1 & e && (Qe(), R(0, "div", 0, 1), Ce(2), F());
              },
              dependencies: [Il],
              encapsulation: 2,
              data: { animation: [mT.transformDrawer] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        _T = (() => {
          class t {
            constructor(e, i, r, s, o, a = !1, l) {
              (this._dir = e),
                (this._element = i),
                (this._ngZone = r),
                (this._changeDetectorRef = s),
                (this._animationMode = l),
                (this._drawers = new os()),
                (this.backdropClick = new W()),
                (this._destroyed = new B()),
                (this._doCheckSubject = new B()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new B()),
                e &&
                  e.change.pipe(ye(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                o
                  .change()
                  .pipe(ye(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = a);
            }
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(e) {
              this._autosize = $(e);
            }
            get hasBackdrop() {
              return (
                this._backdropOverride ??
                (!this._start ||
                  "side" !== this._start.mode ||
                  !this._end ||
                  "side" !== this._end.mode)
              );
            }
            set hasBackdrop(e) {
              this._backdropOverride = null == e ? null : $(e);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            ngAfterContentInit() {
              this._allDrawers.changes
                .pipe(xn(this._allDrawers), ye(this._destroyed))
                .subscribe((e) => {
                  this._drawers.reset(
                    e.filter((i) => !i._container || i._container === this)
                  ),
                    this._drawers.notifyOnChanges();
                }),
                this._drawers.changes.pipe(xn(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((e) => {
                      this._watchDrawerToggle(e),
                        this._watchDrawerPosition(e),
                        this._watchDrawerMode(e);
                    }),
                    (!this._drawers.length ||
                      this._isDrawerOpen(this._start) ||
                      this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._ngZone.runOutsideAngular(() => {
                  this._doCheckSubject
                    .pipe(Nu(10), ye(this._destroyed))
                    .subscribe(() => this.updateContentMargins());
                });
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((e) => e.open());
            }
            close() {
              this._drawers.forEach((e) => e.close());
            }
            updateContentMargins() {
              let e = 0,
                i = 0;
              if (this._left && this._left.opened)
                if ("side" == this._left.mode) e += this._left._getWidth();
                else if ("push" == this._left.mode) {
                  const r = this._left._getWidth();
                  (e += r), (i -= r);
                }
              if (this._right && this._right.opened)
                if ("side" == this._right.mode) i += this._right._getWidth();
                else if ("push" == this._right.mode) {
                  const r = this._right._getWidth();
                  (i += r), (e -= r);
                }
              (e = e || null),
                (i = i || null),
                (e !== this._contentMargins.left ||
                  i !== this._contentMargins.right) &&
                  ((this._contentMargins = { left: e, right: i }),
                  this._ngZone.run(() =>
                    this._contentMarginChanges.next(this._contentMargins)
                  ));
            }
            ngDoCheck() {
              this._autosize &&
                this._isPushed() &&
                this._ngZone.runOutsideAngular(() =>
                  this._doCheckSubject.next()
                );
            }
            _watchDrawerToggle(e) {
              e._animationStarted
                .pipe(
                  ve((i) => i.fromState !== i.toState),
                  ye(this._drawers.changes)
                )
                .subscribe((i) => {
                  "open-instant" !== i.toState &&
                    "NoopAnimations" !== this._animationMode &&
                    this._element.nativeElement.classList.add(
                      "mat-drawer-transition"
                    ),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                "side" !== e.mode &&
                  e.openedChange
                    .pipe(ye(this._drawers.changes))
                    .subscribe(() => this._setContainerClass(e.opened));
            }
            _watchDrawerPosition(e) {
              !e ||
                e.onPositionChanged
                  .pipe(ye(this._drawers.changes))
                  .subscribe(() => {
                    this._ngZone.onMicrotaskEmpty.pipe(ke(1)).subscribe(() => {
                      this._validateDrawers();
                    });
                  });
            }
            _watchDrawerMode(e) {
              e &&
                e._modeChanged
                  .pipe(ye(yt(this._drawers.changes, this._destroyed)))
                  .subscribe(() => {
                    this.updateContentMargins(),
                      this._changeDetectorRef.markForCheck();
                  });
            }
            _setContainerClass(e) {
              const i = this._element.nativeElement.classList,
                r = "mat-drawer-container-has-open";
              e ? i.add(r) : i.remove(r);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((e) => {
                  "end" == e.position ? (this._end = e) : (this._start = e);
                }),
                (this._right = this._left = null),
                this._dir && "rtl" === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) &&
                  "over" != this._start.mode) ||
                (this._isDrawerOpen(this._end) && "over" != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
            }
            _closeModalDrawersViaBackdrop() {
              [this._start, this._end]
                .filter((e) => e && !e.disableClose && this._canHaveBackdrop(e))
                .forEach((e) => e._closeViaBackdropClick());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) &&
                  this._canHaveBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) &&
                  this._canHaveBackdrop(this._end))
              );
            }
            _canHaveBackdrop(e) {
              return "side" !== e.mode || !!this._backdropOverride;
            }
            _isDrawerOpen(e) {
              return null != e && e.opened;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(En, 8),
                h(T),
                h(Y),
                h(Ue),
                h(zo),
                h(Lq),
                h(en, 8)
              );
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-drawer-container"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (Ie(r, dh, 5), Ie(r, gT, 5)), 2 & e)) {
                  let s;
                  Q((s = K())) && (i._content = s.first),
                    Q((s = K())) && (i._allDrawers = s);
                }
              },
              viewQuery: function (e, i) {
                if ((1 & e && et(dh, 5), 2 & e)) {
                  let r;
                  Q((r = K())) && (i._userContent = r.first);
                }
              },
              hostAttrs: [1, "mat-drawer-container"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Se(
                    "mat-drawer-container-explicit-backdrop",
                    i._backdropOverride
                  );
              },
              inputs: { autosize: "autosize", hasBackdrop: "hasBackdrop" },
              outputs: { backdropClick: "backdropClick" },
              exportAs: ["matDrawerContainer"],
              features: [G([{ provide: ov, useExisting: t }])],
              ngContentSelectors: Tq,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Qe(kq),
                  kt(0, Eq, 1, 2, "div", 0),
                  Ce(1),
                  Ce(2, 1),
                  kt(3, Aq, 2, 0, "mat-drawer-content", 1)),
                  2 & e &&
                    (_e("ngIf", i.hasBackdrop), de(3), _e("ngIf", !i._content));
              },
              dependencies: [So, dh],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        av = (() => {
          class t extends dh {
            constructor(e, i, r, s, o) {
              super(e, i, r, s, o);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(Ue), h(me(() => yT)), h(T), h($u), h(Y));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-sidenav-content"]],
              hostAttrs: [1, "mat-drawer-content", "mat-sidenav-content"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  cn("margin-left", i._container._contentMargins.left, "px")(
                    "margin-right",
                    i._container._contentMargins.right,
                    "px"
                  );
              },
              features: [G([{ provide: Il, useExisting: t }]), x],
              ngContentSelectors: ch,
              decls: 1,
              vars: 0,
              template: function (e, i) {
                1 & e && (Qe(), Ce(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        vT = (() => {
          class t extends gT {
            constructor() {
              super(...arguments),
                (this._fixedInViewport = !1),
                (this._fixedTopGap = 0),
                (this._fixedBottomGap = 0);
            }
            get fixedInViewport() {
              return this._fixedInViewport;
            }
            set fixedInViewport(e) {
              this._fixedInViewport = $(e);
            }
            get fixedTopGap() {
              return this._fixedTopGap;
            }
            set fixedTopGap(e) {
              this._fixedTopGap = $t(e);
            }
            get fixedBottomGap() {
              return this._fixedBottomGap;
            }
            set fixedBottomGap(e) {
              this._fixedBottomGap = $t(e);
            }
          }
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-sidenav"]],
              hostAttrs: ["tabIndex", "-1", 1, "mat-drawer", "mat-sidenav"],
              hostVars: 17,
              hostBindings: function (e, i) {
                2 & e &&
                  (se("align", null),
                  cn("top", i.fixedInViewport ? i.fixedTopGap : null, "px")(
                    "bottom",
                    i.fixedInViewport ? i.fixedBottomGap : null,
                    "px"
                  ),
                  Se("mat-drawer-end", "end" === i.position)(
                    "mat-drawer-over",
                    "over" === i.mode
                  )("mat-drawer-push", "push" === i.mode)(
                    "mat-drawer-side",
                    "side" === i.mode
                  )("mat-drawer-opened", i.opened)(
                    "mat-sidenav-fixed",
                    i.fixedInViewport
                  ));
              },
              inputs: {
                fixedInViewport: "fixedInViewport",
                fixedTopGap: "fixedTopGap",
                fixedBottomGap: "fixedBottomGap",
              },
              exportAs: ["matSidenav"],
              features: [x],
              ngContentSelectors: ch,
              decls: 3,
              vars: 0,
              consts: [
                ["cdkScrollable", "", 1, "mat-drawer-inner-container"],
                ["content", ""],
              ],
              template: function (e, i) {
                1 & e && (Qe(), R(0, "div", 0, 1), Ce(2), F());
              },
              dependencies: [Il],
              encapsulation: 2,
              data: { animation: [mT.transformDrawer] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        yT = (() => {
          class t extends _T {}
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-sidenav-container"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && (Ie(r, av, 5), Ie(r, vT, 5)), 2 & e)) {
                  let s;
                  Q((s = K())) && (i._content = s.first),
                    Q((s = K())) && (i._allDrawers = s);
                }
              },
              hostAttrs: [1, "mat-drawer-container", "mat-sidenav-container"],
              hostVars: 2,
              hostBindings: function (e, i) {
                2 & e &&
                  Se(
                    "mat-drawer-container-explicit-backdrop",
                    i._backdropOverride
                  );
              },
              exportAs: ["matSidenavContainer"],
              features: [G([{ provide: ov, useExisting: t }]), x],
              ngContentSelectors: Fq,
              decls: 4,
              vars: 2,
              consts: [
                [
                  "class",
                  "mat-drawer-backdrop",
                  3,
                  "mat-drawer-shown",
                  "click",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "mat-drawer-backdrop", 3, "click"],
              ],
              template: function (e, i) {
                1 & e &&
                  (Qe(Oq),
                  kt(0, Iq, 1, 2, "div", 0),
                  Ce(1),
                  Ce(2, 1),
                  kt(3, Rq, 2, 0, "mat-sidenav-content", 1)),
                  2 & e &&
                    (_e("ngIf", i.hasBackdrop), de(3), _e("ngIf", !i._content));
              },
              dependencies: [So, av],
              styles: [
                '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*="visibility: hidden"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        bT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, U, or, or, U] })),
            t
          );
        })(),
        CT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })(),
        xT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [CT, Wn, U, Ml, CT, U] })),
            t
          );
        })(),
        MT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, U, U] })),
            t
          );
        })(),
        ST = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [ar, Ri, nt, Es, U, U] })),
            t
          );
        })(),
        cv = (() => {
          class t {
            constructor() {
              this.changes = new B();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      const dY = {
        provide: cv,
        deps: [[new on(), new Nn(), cv]],
        useFactory: function cY(t) {
          return t || new cv();
        },
      };
      let ET = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ providers: [dY], imports: [nt, U] })),
            t
          );
        })(),
        AT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Ds] })),
            t
          );
        })(),
        dv = (() => {
          class t {
            constructor() {
              (this.changes = new B()),
                (this.optionalLabel = "Optional"),
                (this.completedLabel = "Completed"),
                (this.editableLabel = "Editable");
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      const CY = {
        provide: dv,
        deps: [[new on(), new Nn(), dv]],
        useFactory: function bY(t) {
          return t || new dv();
        },
      };
      let RT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({
              providers: [CY, ju],
              imports: [U, nt, Ri, Es, AT, ev, Wn, U],
            })),
            t
          );
        })(),
        BT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Wu] })),
            t
          );
        })(),
        zT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [BT, U, U] })),
            t
          );
        })(),
        $T = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, U, Ri, Wn, Ml, Go, U] })),
            t
          );
        })();
      const nQ = ["*", [["mat-toolbar-row"]]],
        iQ = ["*", "mat-toolbar-row"],
        rQ = Gr(
          class {
            constructor(t) {
              this._elementRef = t;
            }
          }
        );
      let sQ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [["mat-toolbar-row"]],
              hostAttrs: [1, "mat-toolbar-row"],
              exportAs: ["matToolbarRow"],
            })),
            t
          );
        })(),
        oQ = (() => {
          class t extends rQ {
            constructor(e, i, r) {
              super(e), (this._platform = i), (this._document = r);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() =>
                  this._checkToolbarMixedModes()
                ));
            }
            _checkToolbarMixedModes() {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Vt), h(Z));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["mat-toolbar"]],
              contentQueries: function (e, i, r) {
                if ((1 & e && Ie(r, sQ, 5), 2 & e)) {
                  let s;
                  Q((s = K())) && (i._toolbarRows = s);
                }
              },
              hostAttrs: [1, "mat-toolbar"],
              hostVars: 4,
              hostBindings: function (e, i) {
                2 & e &&
                  Se("mat-toolbar-multiple-rows", i._toolbarRows.length > 0)(
                    "mat-toolbar-single-row",
                    0 === i._toolbarRows.length
                  );
              },
              inputs: { color: "color" },
              exportAs: ["matToolbar"],
              features: [x],
              ngContentSelectors: iQ,
              decls: 2,
              vars: 0,
              template: function (e, i) {
                1 & e && (Qe(nQ), Ce(0), Ce(1, 1));
              },
              styles: [
                ".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        WT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [U, U] })),
            t
          );
        })(),
        qT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({})),
            t
          );
        })(),
        YT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [qT, U, U] })),
            t
          );
        })(),
        Hl = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({
              imports: [
                sk,
                ok,
                Es,
                fk,
                Q_,
                Ck,
                Sk,
                U,
                Rk,
                Nk,
                J_,
                Hk,
                Ku,
                Gk,
                ev,
                Ak,
                Al,
                tT,
                oT,
                VA,
                kl,
                lT,
                cT,
                dT,
                Gu,
                pT,
                Wn,
                nv,
                bT,
                xT,
                MT,
                ST,
                ET,
                RT,
                zT,
                $T,
                WT,
                iv,
                YT,
                Go,
                Bk,
                AT,
                BT,
                qT,
                sk,
                ok,
                Es,
                fk,
                Q_,
                Ck,
                Sk,
                RT,
                Rk,
                Nk,
                J_,
                Hk,
                Gk,
                ev,
                Ak,
                tT,
                oT,
                VA,
                lT,
                cT,
                dT,
                pT,
                Wn,
                nv,
                bT,
                MT,
                xT,
                ST,
                ET,
                zT,
                $T,
                WT,
                iv,
                YT,
                ar,
                Ri,
                Wu,
              ],
            })),
            t
          );
        })();
      const Ts_supportedLanguages = ["it-IT"];
      function QT(t) {
        for (let n in t) {
          let e = t[n] ?? "";
          switch (n) {
            case "display":
              t.display =
                "flex" === e
                  ? ["-webkit-flex", "flex"]
                  : "inline-flex" === e
                  ? ["-webkit-inline-flex", "inline-flex"]
                  : e;
              break;
            case "align-items":
            case "align-self":
            case "align-content":
            case "flex":
            case "flex-basis":
            case "flex-flow":
            case "flex-grow":
            case "flex-shrink":
            case "flex-wrap":
            case "justify-content":
              t["-webkit-" + n] = e;
              break;
            case "flex-direction":
              (t["-webkit-flex-direction"] = e), (t["flex-direction"] = e);
              break;
            case "order":
              t.order = t["-webkit-" + n] = isNaN(+e) ? "0" : e;
          }
        }
        return t;
      }
      const Mv = "inline",
        xh = ["row", "column", "row-reverse", "column-reverse"];
      function ZT(t) {
        t = t?.toLowerCase() ?? "";
        let [n, e, i] = t.split(" ");
        return (
          xh.find((r) => r === n) || (n = xh[0]),
          e === Mv && ((e = i !== Mv ? i : ""), (i = Mv)),
          [n, vQ(e), !!i]
        );
      }
      function jl(t) {
        let [n] = ZT(t);
        return n.indexOf("row") > -1;
      }
      function vQ(t) {
        if (t)
          switch (t.toLowerCase()) {
            case "reverse":
            case "wrap-reverse":
            case "reverse-wrap":
              t = "wrap-reverse";
              break;
            case "no":
            case "none":
            case "nowrap":
              t = "nowrap";
              break;
            default:
              t = "wrap";
          }
        return t;
      }
      function hr(t, ...n) {
        if (null == t)
          throw TypeError("Cannot convert undefined or null to object");
        for (let e of n)
          if (null != e) for (let i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
        return t;
      }
      const CQ = {
          provide: om,
          useFactory: function bQ(t, n) {
            return () => {
              if (Zi(n)) {
                const e = Array.from(t.querySelectorAll(`[class*=${XT}]`)),
                  i = /\bflex-layout-.+?\b/g;
                e.forEach((r) => {
                  r.classList.contains(`${XT}ssr`) && r.parentNode
                    ? r.parentNode.removeChild(r)
                    : r.className.replace(i, "");
                });
              }
            };
          },
          deps: [Z, dn],
          multi: !0,
        },
        XT = "flex-layout-";
      let Sv = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = P({ type: t })),
          (t.ɵinj = O({ providers: [CQ] })),
          t
        );
      })();
      class Is {
        constructor(n = !1, e = "all", i = "", r = "", s = 0) {
          (this.matches = n),
            (this.mediaQuery = e),
            (this.mqAlias = i),
            (this.suffix = r),
            (this.priority = s),
            (this.property = "");
        }
        clone() {
          return new Is(
            this.matches,
            this.mediaQuery,
            this.mqAlias,
            this.suffix
          );
        }
      }
      let xQ = (() => {
        class t {
          constructor() {
            this.stylesheet = new Map();
          }
          addStyleToElement(e, i, r) {
            const s = this.stylesheet.get(e);
            s ? s.set(i, r) : this.stylesheet.set(e, new Map([[i, r]]));
          }
          clearStyles() {
            this.stylesheet.clear();
          }
          getStyleForElement(e, i) {
            const r = this.stylesheet.get(e);
            let s = "";
            if (r) {
              const o = r.get(i);
              ("number" == typeof o || "string" == typeof o) && (s = o + "");
            }
            return s;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const Ev = {
          addFlexToParent: !0,
          addOrientationBps: !1,
          disableDefaultBps: !1,
          disableVendorPrefixes: !1,
          serverLoaded: !1,
          useColumnBasisZero: !0,
          printWithBreakpoints: [],
          mediaTriggerAutoRestore: !0,
          ssrObserveBreakpoints: [],
          multiplier: void 0,
          defaultUnit: "px",
          detectLayoutDisplay: !1,
        },
        ci = new C("Flex Layout token, config options for the library", {
          providedIn: "root",
          factory: () => Ev,
        }),
        Ko = new C("FlexLayoutServerLoaded", {
          providedIn: "root",
          factory: () => !1,
        }),
        Av = new C(
          "Flex Layout token, collect all breakpoints into one provider",
          {
            providedIn: "root",
            factory: () => null,
          }
        );
      function JT(t, n) {
        return (
          (t = t?.clone() ?? new Is()),
          n &&
            ((t.mqAlias = n.alias),
            (t.mediaQuery = n.mediaQuery),
            (t.suffix = n.suffix),
            (t.priority = n.priority)),
          t
        );
      }
      class pt {
        constructor() {
          this.shouldCache = !0;
        }
        sideEffect(n, e, i) {}
      }
      let Ke = (() => {
        class t {
          constructor(e, i, r, s) {
            (this._serverStylesheet = e),
              (this._serverModuleLoaded = i),
              (this._platformId = r),
              (this.layoutConfig = s);
          }
          applyStyleToElement(e, i, r = null) {
            let s = {};
            "string" == typeof i && ((s[i] = r), (i = s)),
              (s = this.layoutConfig.disableVendorPrefixes ? i : QT(i)),
              this._applyMultiValueStyleToElement(s, e);
          }
          applyStyleToElements(e, i = []) {
            const r = this.layoutConfig.disableVendorPrefixes ? e : QT(e);
            i.forEach((s) => {
              this._applyMultiValueStyleToElement(r, s);
            });
          }
          getFlowDirection(e) {
            const i = "flex-direction";
            let r = this.lookupStyle(e, i);
            return [
              r || "row",
              this.lookupInlineStyle(e, i) ||
              (Eo(this._platformId) && this._serverModuleLoaded)
                ? r
                : "",
            ];
          }
          hasWrap(e) {
            return "wrap" === this.lookupStyle(e, "flex-wrap");
          }
          lookupAttributeValue(e, i) {
            return e.getAttribute(i) ?? "";
          }
          lookupInlineStyle(e, i) {
            return Zi(this._platformId)
              ? e.style.getPropertyValue(i)
              : (function wQ(t, n) {
                  return eI(t)[n] ?? "";
                })(e, i);
          }
          lookupStyle(e, i, r = !1) {
            let s = "";
            return (
              e &&
                ((s = this.lookupInlineStyle(e, i)) ||
                  (Zi(this._platformId)
                    ? r || (s = getComputedStyle(e).getPropertyValue(i))
                    : this._serverModuleLoaded &&
                      (s = this._serverStylesheet.getStyleForElement(e, i)))),
              s ? s.trim() : ""
            );
          }
          _applyMultiValueStyleToElement(e, i) {
            Object.keys(e)
              .sort()
              .forEach((r) => {
                const s = e[r],
                  o = Array.isArray(s) ? s : [s];
                o.sort();
                for (let a of o)
                  (a = a ? a + "" : ""),
                    Zi(this._platformId) || !this._serverModuleLoaded
                      ? Zi(this._platformId)
                        ? i.style.setProperty(r, a)
                        : DQ(i, r, a)
                      : this._serverStylesheet.addStyleToElement(i, r, a);
              });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(xQ), _(Ko), _(dn), _(ci));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function DQ(t, n, e) {
        n = n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
        const i = eI(t);
        (i[n] = e ?? ""),
          (function MQ(t, n) {
            let e = "";
            for (const i in n) n[i] && (e += `${i}:${n[i]};`);
            t.setAttribute("style", e);
          })(t, i);
      }
      function eI(t) {
        const n = {},
          e = t.getAttribute("style");
        if (e) {
          const i = e.split(/;+/g);
          for (let r = 0; r < i.length; r++) {
            const s = i[r].trim();
            if (s.length > 0) {
              const o = s.indexOf(":");
              if (-1 === o) throw new Error(`Invalid CSS style: ${s}`);
              n[s.substr(0, o).trim()] = s.substr(o + 1).trim();
            }
          }
        }
        return n;
      }
      function Gl(t, n) {
        return ((n && n.priority) || 0) - ((t && t.priority) || 0);
      }
      function SQ(t, n) {
        return (t.priority || 0) - (n.priority || 0);
      }
      let kv = (() => {
        class t {
          constructor(e, i, r) {
            (this._zone = e),
              (this._platformId = i),
              (this._document = r),
              (this.source = new nn(new Is(!0))),
              (this.registry = new Map()),
              (this.pendingRemoveListenerFns = []),
              (this._observable$ = this.source.asObservable());
          }
          get activations() {
            const e = [];
            return (
              this.registry.forEach((i, r) => {
                i.matches && e.push(r);
              }),
              e
            );
          }
          isActive(e) {
            return (
              this.registry.get(e)?.matches ??
              this.registerQuery(e).some((r) => r.matches)
            );
          }
          observe(e, i = !1) {
            if (e && e.length) {
              const r = this._observable$.pipe(
                ve((o) => !i || e.indexOf(o.mediaQuery) > -1)
              );
              return yt(
                new Pe((o) => {
                  const a = this.registerQuery(e);
                  if (a.length) {
                    const l = a.pop();
                    a.forEach((c) => {
                      o.next(c);
                    }),
                      this.source.next(l);
                  }
                  o.complete();
                }),
                r
              );
            }
            return this._observable$;
          }
          registerQuery(e) {
            const i = Array.isArray(e) ? e : [e],
              r = [];
            return (
              (function EQ(t, n) {
                const e = t.filter((i) => !tI[i]);
                if (e.length > 0) {
                  const i = e.join(", ");
                  try {
                    const r = n.createElement("style");
                    r.setAttribute("type", "text/css"),
                      r.styleSheet ||
                        r.appendChild(
                          n.createTextNode(
                            `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${i} {.fx-query-test{ }}\n`
                          )
                        ),
                      n.head.appendChild(r),
                      e.forEach((s) => (tI[s] = r));
                  } catch (r) {
                    console.error(r);
                  }
                }
              })(i, this._document),
              i.forEach((s) => {
                const o = (l) => {
                  this._zone.run(() => this.source.next(new Is(l.matches, s)));
                };
                let a = this.registry.get(s);
                a ||
                  ((a = this.buildMQL(s)),
                  a.addListener(o),
                  this.pendingRemoveListenerFns.push(() => a.removeListener(o)),
                  this.registry.set(s, a)),
                  a.matches && r.push(new Is(!0, s));
              }),
              r
            );
          }
          ngOnDestroy() {
            let e;
            for (; (e = this.pendingRemoveListenerFns.pop()); ) e();
          }
          buildMQL(e) {
            return (function kQ(t, n) {
              return n && window.matchMedia("all").addListener
                ? window.matchMedia(t)
                : (function AQ(t) {
                    const n = new EventTarget();
                    return (
                      (n.matches = "all" === t || "" === t),
                      (n.media = t),
                      (n.addListener = () => {}),
                      (n.removeListener = () => {}),
                      (n.addEventListener = () => {}),
                      (n.dispatchEvent = () => !1),
                      (n.onchange = null),
                      n
                    );
                  })(t);
            })(e, Zi(this._platformId));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Y), _(dn), _(Z));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const tI = {},
        TQ = [
          {
            alias: "xs",
            mediaQuery: "screen and (min-width: 0px) and (max-width: 599.98px)",
            priority: 1e3,
          },
          {
            alias: "sm",
            mediaQuery:
              "screen and (min-width: 600px) and (max-width: 959.98px)",
            priority: 900,
          },
          {
            alias: "md",
            mediaQuery:
              "screen and (min-width: 960px) and (max-width: 1279.98px)",
            priority: 800,
          },
          {
            alias: "lg",
            mediaQuery:
              "screen and (min-width: 1280px) and (max-width: 1919.98px)",
            priority: 700,
          },
          {
            alias: "xl",
            mediaQuery:
              "screen and (min-width: 1920px) and (max-width: 4999.98px)",
            priority: 600,
          },
          {
            alias: "lt-sm",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 599.98px)",
            priority: 950,
          },
          {
            alias: "lt-md",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 959.98px)",
            priority: 850,
          },
          {
            alias: "lt-lg",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 1279.98px)",
            priority: 750,
          },
          {
            alias: "lt-xl",
            overlapping: !0,
            priority: 650,
            mediaQuery: "screen and (max-width: 1919.98px)",
          },
          {
            alias: "gt-xs",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 600px)",
            priority: -950,
          },
          {
            alias: "gt-sm",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 960px)",
            priority: -850,
          },
          {
            alias: "gt-md",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 1280px)",
            priority: -750,
          },
          {
            alias: "gt-lg",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 1920px)",
            priority: -650,
          },
        ],
        nI = "(orientation: portrait) and (max-width: 599.98px)",
        iI = "(orientation: landscape) and (max-width: 959.98px)",
        rI =
          "(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)",
        sI =
          "(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)",
        oI = "(orientation: portrait) and (min-width: 840px)",
        aI = "(orientation: landscape) and (min-width: 1280px)",
        fr = {
          HANDSET: `${nI}, ${iI}`,
          TABLET: `${rI} , ${sI}`,
          WEB: `${oI}, ${aI} `,
          HANDSET_PORTRAIT: `${nI}`,
          TABLET_PORTRAIT: `${rI} `,
          WEB_PORTRAIT: `${oI}`,
          HANDSET_LANDSCAPE: `${iI}`,
          TABLET_LANDSCAPE: `${sI}`,
          WEB_LANDSCAPE: `${aI}`,
        },
        IQ = [
          { alias: "handset", priority: 2e3, mediaQuery: fr.HANDSET },
          {
            alias: "handset.landscape",
            priority: 2e3,
            mediaQuery: fr.HANDSET_LANDSCAPE,
          },
          {
            alias: "handset.portrait",
            priority: 2e3,
            mediaQuery: fr.HANDSET_PORTRAIT,
          },
          { alias: "tablet", priority: 2100, mediaQuery: fr.TABLET },
          {
            alias: "tablet.landscape",
            priority: 2100,
            mediaQuery: fr.TABLET_LANDSCAPE,
          },
          {
            alias: "tablet.portrait",
            priority: 2100,
            mediaQuery: fr.TABLET_PORTRAIT,
          },
          { alias: "web", priority: 2200, mediaQuery: fr.WEB, overlapping: !0 },
          {
            alias: "web.landscape",
            priority: 2200,
            mediaQuery: fr.WEB_LANDSCAPE,
            overlapping: !0,
          },
          {
            alias: "web.portrait",
            priority: 2200,
            mediaQuery: fr.WEB_PORTRAIT,
            overlapping: !0,
          },
        ],
        RQ = /(\.|-|_)/g;
      function OQ(t) {
        let n = t.length > 0 ? t.charAt(0) : "",
          e = t.length > 1 ? t.slice(1) : "";
        return n.toUpperCase() + e;
      }
      const NQ = new C("Token (@angular/flex-layout) Breakpoints", {
        providedIn: "root",
        factory: () => {
          const t = Ge(Av),
            n = Ge(ci),
            e = [].concat.apply(
              [],
              (t || []).map((r) => (Array.isArray(r) ? r : [r]))
            );
          return (function LQ(t, n = []) {
            const e = {};
            return (
              t.forEach((i) => {
                e[i.alias] = i;
              }),
              n.forEach((i) => {
                e[i.alias] ? hr(e[i.alias], i) : (e[i.alias] = i);
              }),
              (function PQ(t) {
                return (
                  t.forEach((n) => {
                    n.suffix ||
                      ((n.suffix = (function FQ(t) {
                        return t.replace(RQ, "|").split("|").map(OQ).join("");
                      })(n.alias)),
                      (n.overlapping = !!n.overlapping));
                  }),
                  t
                );
              })(Object.keys(e).map((i) => e[i]))
            );
          })(
            (n.disableDefaultBps ? [] : TQ).concat(
              n.addOrientationBps ? IQ : []
            ),
            e
          );
        },
      });
      let Tv = (() => {
        class t {
          constructor(e) {
            (this.findByMap = new Map()), (this.items = [...e].sort(SQ));
          }
          findByAlias(e) {
            return e ? this.findWithPredicate(e, (i) => i.alias === e) : null;
          }
          findByQuery(e) {
            return this.findWithPredicate(e, (i) => i.mediaQuery === e);
          }
          get overlappings() {
            return this.items.filter((e) => e.overlapping);
          }
          get aliases() {
            return this.items.map((e) => e.alias);
          }
          get suffixes() {
            return this.items.map((e) => e?.suffix ?? "");
          }
          findWithPredicate(e, i) {
            let r = this.findByMap.get(e);
            return (
              r || ((r = this.items.find(i) ?? null), this.findByMap.set(e, r)),
              r ?? null
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(NQ));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      const Zo = "print",
        BQ = { alias: Zo, mediaQuery: Zo, priority: 1e3 };
      let VQ = (() => {
        class t {
          constructor(e, i, r) {
            (this.breakpoints = e),
              (this.layoutConfig = i),
              (this._document = r),
              (this.registeredBeforeAfterPrintHooks = !1),
              (this.isPrintingBeforeAfterEvent = !1),
              (this.beforePrintEventListeners = []),
              (this.afterPrintEventListeners = []),
              (this.formerActivations = null),
              (this.isPrinting = !1),
              (this.queue = new HQ()),
              (this.deactivations = []);
          }
          withPrintQuery(e) {
            return [...e, Zo];
          }
          isPrintEvent(e) {
            return e.mediaQuery.startsWith(Zo);
          }
          get printAlias() {
            return [...(this.layoutConfig.printWithBreakpoints ?? [])];
          }
          get printBreakPoints() {
            return this.printAlias
              .map((e) => this.breakpoints.findByAlias(e))
              .filter((e) => null !== e);
          }
          getEventBreakpoints({ mediaQuery: e }) {
            const i = this.breakpoints.findByQuery(e);
            return (
              i ? [...this.printBreakPoints, i] : this.printBreakPoints
            ).sort(Gl);
          }
          updateEvent(e) {
            let i = this.breakpoints.findByQuery(e.mediaQuery);
            return (
              this.isPrintEvent(e) &&
                ((i = this.getEventBreakpoints(e)[0]),
                (e.mediaQuery = i?.mediaQuery ?? "")),
              JT(e, i)
            );
          }
          registerBeforeAfterPrintHooks(e) {
            if (
              !this._document.defaultView ||
              this.registeredBeforeAfterPrintHooks
            )
              return;
            this.registeredBeforeAfterPrintHooks = !0;
            const i = () => {
                this.isPrinting ||
                  ((this.isPrintingBeforeAfterEvent = !0),
                  this.startPrinting(
                    e,
                    this.getEventBreakpoints(new Is(!0, Zo))
                  ),
                  e.updateStyles());
              },
              r = () => {
                (this.isPrintingBeforeAfterEvent = !1),
                  this.isPrinting && (this.stopPrinting(e), e.updateStyles());
              };
            this._document.defaultView.addEventListener("beforeprint", i),
              this._document.defaultView.addEventListener("afterprint", r),
              this.beforePrintEventListeners.push(i),
              this.afterPrintEventListeners.push(r);
          }
          interceptEvents(e) {
            return (i) => {
              this.isPrintEvent(i)
                ? i.matches && !this.isPrinting
                  ? (this.startPrinting(e, this.getEventBreakpoints(i)),
                    e.updateStyles())
                  : !i.matches &&
                    this.isPrinting &&
                    !this.isPrintingBeforeAfterEvent &&
                    (this.stopPrinting(e), e.updateStyles())
                : this.collectActivations(e, i);
            };
          }
          blockPropagation() {
            return (e) => !(this.isPrinting || this.isPrintEvent(e));
          }
          startPrinting(e, i) {
            (this.isPrinting = !0),
              (this.formerActivations = e.activatedBreakpoints),
              (e.activatedBreakpoints = this.queue.addPrintBreakpoints(i));
          }
          stopPrinting(e) {
            (e.activatedBreakpoints = this.deactivations),
              (this.deactivations = []),
              (this.formerActivations = null),
              this.queue.clear(),
              (this.isPrinting = !1);
          }
          collectActivations(e, i) {
            if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {
              if (!this.isPrintingBeforeAfterEvent)
                return void (this.deactivations = []);
              if (!i.matches) {
                const r = this.breakpoints.findByQuery(i.mediaQuery);
                if (r) {
                  const s =
                      this.formerActivations &&
                      this.formerActivations.includes(r),
                    o =
                      !this.formerActivations &&
                      e.activatedBreakpoints.includes(r);
                  (s || o) &&
                    (this.deactivations.push(r), this.deactivations.sort(Gl));
                }
              }
            }
          }
          ngOnDestroy() {
            this._document.defaultView &&
              (this.beforePrintEventListeners.forEach((e) =>
                this._document.defaultView.removeEventListener("beforeprint", e)
              ),
              this.afterPrintEventListeners.forEach((e) =>
                this._document.defaultView.removeEventListener("afterprint", e)
              ));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(Tv), _(ci), _(Z));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      class HQ {
        constructor() {
          this.printBreakpoints = [];
        }
        addPrintBreakpoints(n) {
          return (
            n.push(BQ),
            n.sort(Gl),
            n.forEach((e) => this.addBreakpoint(e)),
            this.printBreakpoints
          );
        }
        addBreakpoint(n) {
          n &&
            void 0 ===
              this.printBreakpoints.find(
                (i) => i.mediaQuery === n.mediaQuery
              ) &&
            (this.printBreakpoints = (function jQ(t) {
              return t?.mediaQuery.startsWith(Zo) ?? !1;
            })(n)
              ? [n, ...this.printBreakpoints]
              : [...this.printBreakpoints, n]);
        }
        clear() {
          this.printBreakpoints = [];
        }
      }
      let Je = (() => {
        class t {
          constructor(e, i, r) {
            (this.matchMedia = e),
              (this.breakpoints = i),
              (this.hook = r),
              (this._useFallbacks = !0),
              (this._activatedBreakpoints = []),
              (this.elementMap = new Map()),
              (this.elementKeyMap = new WeakMap()),
              (this.watcherMap = new WeakMap()),
              (this.updateMap = new WeakMap()),
              (this.clearMap = new WeakMap()),
              (this.subject = new B()),
              this.observeActivations();
          }
          get activatedAlias() {
            return this.activatedBreakpoints[0]?.alias ?? "";
          }
          set activatedBreakpoints(e) {
            this._activatedBreakpoints = [...e];
          }
          get activatedBreakpoints() {
            return [...this._activatedBreakpoints];
          }
          set useFallbacks(e) {
            this._useFallbacks = e;
          }
          onMediaChange(e) {
            const i = this.findByQuery(e.mediaQuery);
            if (i) {
              e = JT(e, i);
              const r = this.activatedBreakpoints.indexOf(i);
              e.matches && -1 === r
                ? (this._activatedBreakpoints.push(i),
                  this._activatedBreakpoints.sort(Gl),
                  this.updateStyles())
                : !e.matches &&
                  -1 !== r &&
                  (this._activatedBreakpoints.splice(r, 1),
                  this._activatedBreakpoints.sort(Gl),
                  this.updateStyles());
            }
          }
          init(e, i, r, s, o = []) {
            lI(this.updateMap, e, i, r),
              lI(this.clearMap, e, i, s),
              this.buildElementKeyMap(e, i),
              this.watchExtraTriggers(e, i, o);
          }
          getValue(e, i, r) {
            const s = this.elementMap.get(e);
            if (s) {
              const o = void 0 !== r ? s.get(r) : this.getActivatedValues(s, i);
              if (o) return o.get(i);
            }
          }
          hasValue(e, i) {
            const r = this.elementMap.get(e);
            if (r) {
              const s = this.getActivatedValues(r, i);
              if (s) return void 0 !== s.get(i) || !1;
            }
            return !1;
          }
          setValue(e, i, r, s) {
            let o = this.elementMap.get(e);
            if (o) {
              const l = (o.get(s) ?? new Map()).set(i, r);
              o.set(s, l), this.elementMap.set(e, o);
            } else
              (o = new Map().set(s, new Map().set(i, r))),
                this.elementMap.set(e, o);
            const a = this.getValue(e, i);
            void 0 !== a && this.updateElement(e, i, a);
          }
          trackValue(e, i) {
            return this.subject
              .asObservable()
              .pipe(ve((r) => r.element === e && r.key === i));
          }
          updateStyles() {
            this.elementMap.forEach((e, i) => {
              const r = new Set(this.elementKeyMap.get(i));
              let s = this.getActivatedValues(e);
              s &&
                s.forEach((o, a) => {
                  this.updateElement(i, a, o), r.delete(a);
                }),
                r.forEach((o) => {
                  if (((s = this.getActivatedValues(e, o)), s)) {
                    const a = s.get(o);
                    this.updateElement(i, o, a);
                  } else this.clearElement(i, o);
                });
            });
          }
          clearElement(e, i) {
            const r = this.clearMap.get(e);
            if (r) {
              const s = r.get(i);
              s && (s(), this.subject.next({ element: e, key: i, value: "" }));
            }
          }
          updateElement(e, i, r) {
            const s = this.updateMap.get(e);
            if (s) {
              const o = s.get(i);
              o && (o(r), this.subject.next({ element: e, key: i, value: r }));
            }
          }
          releaseElement(e) {
            const i = this.watcherMap.get(e);
            i && (i.forEach((s) => s.unsubscribe()), this.watcherMap.delete(e));
            const r = this.elementMap.get(e);
            r && (r.forEach((s, o) => r.delete(o)), this.elementMap.delete(e));
          }
          triggerUpdate(e, i) {
            const r = this.elementMap.get(e);
            if (r) {
              const s = this.getActivatedValues(r, i);
              s &&
                (i
                  ? this.updateElement(e, i, s.get(i))
                  : s.forEach((o, a) => this.updateElement(e, a, o)));
            }
          }
          buildElementKeyMap(e, i) {
            let r = this.elementKeyMap.get(e);
            r || ((r = new Set()), this.elementKeyMap.set(e, r)), r.add(i);
          }
          watchExtraTriggers(e, i, r) {
            if (r && r.length) {
              let s = this.watcherMap.get(e);
              if (
                (s || ((s = new Map()), this.watcherMap.set(e, s)), !s.get(i))
              ) {
                const a = yt(...r).subscribe(() => {
                  const l = this.getValue(e, i);
                  this.updateElement(e, i, l);
                });
                s.set(i, a);
              }
            }
          }
          findByQuery(e) {
            return this.breakpoints.findByQuery(e);
          }
          getActivatedValues(e, i) {
            for (let s = 0; s < this.activatedBreakpoints.length; s++) {
              const a = e.get(this.activatedBreakpoints[s].alias);
              if (a && (void 0 === i || (a.has(i) && null != a.get(i))))
                return a;
            }
            if (!this._useFallbacks) return;
            const r = e.get("");
            return void 0 === i || (r && r.has(i)) ? r : void 0;
          }
          observeActivations() {
            const e = this.breakpoints.items.map((i) => i.mediaQuery);
            this.hook.registerBeforeAfterPrintHooks(this),
              this.matchMedia
                .observe(this.hook.withPrintQuery(e))
                .pipe(
                  it(this.hook.interceptEvents(this)),
                  ve(this.hook.blockPropagation())
                )
                .subscribe(this.onMediaChange.bind(this));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(kv), _(Tv), _(VQ));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function lI(t, n, e, i) {
        if (void 0 !== i) {
          const r = t.get(n) ?? new Map();
          r.set(e, i), t.set(n, r);
        }
      }
      let rt = (() => {
        class t {
          constructor(e, i, r, s) {
            (this.elementRef = e),
              (this.styleBuilder = i),
              (this.styler = r),
              (this.marshal = s),
              (this.DIRECTIVE_KEY = ""),
              (this.inputs = []),
              (this.mru = {}),
              (this.destroySubject = new B()),
              (this.styleCache = new Map());
          }
          get parentElement() {
            return this.elementRef.nativeElement.parentElement;
          }
          get nativeElement() {
            return this.elementRef.nativeElement;
          }
          get activatedValue() {
            return this.marshal.getValue(
              this.nativeElement,
              this.DIRECTIVE_KEY
            );
          }
          set activatedValue(e) {
            this.marshal.setValue(
              this.nativeElement,
              this.DIRECTIVE_KEY,
              e,
              this.marshal.activatedAlias
            );
          }
          ngOnChanges(e) {
            Object.keys(e).forEach((i) => {
              if (-1 !== this.inputs.indexOf(i)) {
                const r = i.split(".").slice(1).join(".");
                this.setValue(e[i].currentValue, r);
              }
            });
          }
          ngOnDestroy() {
            this.destroySubject.next(),
              this.destroySubject.complete(),
              this.marshal.releaseElement(this.nativeElement);
          }
          init(e = []) {
            this.marshal.init(
              this.elementRef.nativeElement,
              this.DIRECTIVE_KEY,
              this.updateWithValue.bind(this),
              this.clearStyles.bind(this),
              e
            );
          }
          addStyles(e, i) {
            const r = this.styleBuilder,
              s = r.shouldCache;
            let o = this.styleCache.get(e);
            (!o || !s) &&
              ((o = r.buildStyles(e, i)), s && this.styleCache.set(e, o)),
              (this.mru = { ...o }),
              this.applyStyleToElement(o),
              r.sideEffect(e, o, i);
          }
          clearStyles() {
            Object.keys(this.mru).forEach((e) => {
              this.mru[e] = "";
            }),
              this.applyStyleToElement(this.mru),
              (this.mru = {}),
              (this.currentValue = void 0);
          }
          triggerUpdate() {
            this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);
          }
          getFlexFlowDirection(e, i = !1) {
            if (e) {
              const [r, s] = this.styler.getFlowDirection(e);
              if (!s && i) {
                const o = (function KT(t) {
                  let [n, e, i] = ZT(t);
                  return (function yQ(t, n = null, e = !1) {
                    return {
                      display: e ? "inline-flex" : "flex",
                      "box-sizing": "border-box",
                      "flex-direction": t,
                      "flex-wrap": n || null,
                    };
                  })(n, e, i);
                })(r);
                this.styler.applyStyleToElements(o, [e]);
              }
              return r.trim();
            }
            return "row";
          }
          hasWrap(e) {
            return this.styler.hasWrap(e);
          }
          applyStyleToElement(e, i, r = this.nativeElement) {
            this.styler.applyStyleToElement(r, e, i);
          }
          setValue(e, i) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, e, i);
          }
          updateWithValue(e) {
            this.currentValue !== e &&
              (this.addStyles(e), (this.currentValue = e));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(h(T), h(pt), h(Ke), h(Je));
          }),
          (t.ɵdir = y({ type: t, features: [ct] })),
          t
        );
      })();
      function cI(t, n = "1", e = "1") {
        let i = [n, e, t],
          r = t.indexOf("calc");
        if (r > 0) {
          i[2] = dI(t.substring(r).trim());
          let s = t.substr(0, r).trim().split(" ");
          2 == s.length && ((i[0] = s[0]), (i[1] = s[1]));
        } else if (0 == r) i[2] = dI(t.trim());
        else {
          let s = t.split(" ");
          i = 3 === s.length ? s : [n, e, t];
        }
        return i;
      }
      function dI(t) {
        return t.replace(/[\s]/g, "").replace(/[\/\*\+\-]/g, " $& ");
      }
      EventTarget;
      let QQ = (() => {
        class t extends rt {
          constructor(e, i, r, s, o, a, l) {
            super(e, null, i, r),
              (this.ngClassInstance = l),
              (this.DIRECTIVE_KEY = "ngClass"),
              this.ngClassInstance ||
                (this.ngClassInstance = new hd(s, o, e, a)),
              this.init(),
              this.setValue("", "");
          }
          set klass(e) {
            (this.ngClassInstance.klass = e), this.setValue(e, "");
          }
          updateWithValue(e) {
            (this.ngClassInstance.ngClass = e),
              this.ngClassInstance.ngDoCheck();
          }
          ngDoCheck() {
            this.ngClassInstance.ngDoCheck();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(
              h(T),
              h(Ke),
              h(Je),
              h(Cn),
              h(cs),
              h(ei),
              h(hd, 10)
            );
          }),
          (t.ɵdir = y({
            type: t,
            inputs: { klass: ["class", "klass"] },
            features: [x],
          })),
          t
        );
      })();
      const KQ = [
        "ngClass",
        "ngClass.xs",
        "ngClass.sm",
        "ngClass.md",
        "ngClass.lg",
        "ngClass.xl",
        "ngClass.lt-sm",
        "ngClass.lt-md",
        "ngClass.lt-lg",
        "ngClass.lt-xl",
        "ngClass.gt-xs",
        "ngClass.gt-sm",
        "ngClass.gt-md",
        "ngClass.gt-lg",
      ];
      let hI = (() => {
          class t extends QQ {
            constructor() {
              super(...arguments), (this.inputs = KQ);
            }
          }
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "ngClass", ""],
                ["", "ngClass.xs", ""],
                ["", "ngClass.sm", ""],
                ["", "ngClass.md", ""],
                ["", "ngClass.lg", ""],
                ["", "ngClass.xl", ""],
                ["", "ngClass.lt-sm", ""],
                ["", "ngClass.lt-md", ""],
                ["", "ngClass.lt-lg", ""],
                ["", "ngClass.lt-xl", ""],
                ["", "ngClass.gt-xs", ""],
                ["", "ngClass.gt-sm", ""],
                ["", "ngClass.gt-md", ""],
                ["", "ngClass.gt-lg", ""],
              ],
              inputs: {
                ngClass: "ngClass",
                "ngClass.xs": "ngClass.xs",
                "ngClass.sm": "ngClass.sm",
                "ngClass.md": "ngClass.md",
                "ngClass.lg": "ngClass.lg",
                "ngClass.xl": "ngClass.xl",
                "ngClass.lt-sm": "ngClass.lt-sm",
                "ngClass.lt-md": "ngClass.lt-md",
                "ngClass.lt-lg": "ngClass.lt-lg",
                "ngClass.lt-xl": "ngClass.lt-xl",
                "ngClass.gt-xs": "ngClass.gt-xs",
                "ngClass.gt-sm": "ngClass.gt-sm",
                "ngClass.gt-md": "ngClass.gt-md",
                "ngClass.gt-lg": "ngClass.gt-lg",
              },
              features: [x],
            })),
            t
          );
        })(),
        ZQ = (() => {
          class t extends pt {
            buildStyles(e, i) {
              return {
                display:
                  "true" === e
                    ? i.display || (i.isServer ? "initial" : "")
                    : "none",
              };
            }
          }
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        XQ = (() => {
          class t extends rt {
            constructor(e, i, r, s, o, a, l) {
              super(e, i, r, s),
                (this.layoutConfig = o),
                (this.platformId = a),
                (this.serverModuleLoaded = l),
                (this.DIRECTIVE_KEY = "show-hide"),
                (this.display = ""),
                (this.hasLayout = !1),
                (this.hasFlexChild = !1);
            }
            ngAfterViewInit() {
              this.trackExtraTriggers();
              const e = Array.from(this.nativeElement.children);
              for (let r = 0; r < e.length; r++)
                if (this.marshal.hasValue(e[r], "flex")) {
                  this.hasFlexChild = !0;
                  break;
                }
              Iv.has(this.nativeElement)
                ? (this.display = Iv.get(this.nativeElement))
                : ((this.display = this.getDisplayStyle()),
                  Iv.set(this.nativeElement, this.display)),
                this.init();
              const i = this.marshal.getValue(
                this.nativeElement,
                this.DIRECTIVE_KEY,
                ""
              );
              void 0 === i || "" === i
                ? this.setValue(!0, "")
                : this.triggerUpdate();
            }
            ngOnChanges(e) {
              Object.keys(e).forEach((i) => {
                if (-1 !== this.inputs.indexOf(i)) {
                  const r = i.split("."),
                    s = r.slice(1).join("."),
                    o = e[i].currentValue;
                  let a = "" === o || (0 !== o && $(o));
                  "fxHide" === r[0] && (a = !a), this.setValue(a, s);
                }
              });
            }
            trackExtraTriggers() {
              (this.hasLayout = this.marshal.hasValue(
                this.nativeElement,
                "layout"
              )),
                ["layout", "layout-align"].forEach((e) => {
                  this.marshal
                    .trackValue(this.nativeElement, e)
                    .pipe(ye(this.destroySubject))
                    .subscribe(this.triggerUpdate.bind(this));
                });
            }
            getDisplayStyle() {
              return this.hasLayout ||
                (this.hasFlexChild && this.layoutConfig.addFlexToParent)
                ? "flex"
                : this.styler.lookupStyle(this.nativeElement, "display", !0);
            }
            updateWithValue(e = !0) {
              if ("" === e) return;
              const i = Eo(this.platformId);
              this.addStyles(e ? "true" : "false", {
                display: this.display,
                isServer: i,
              }),
                i &&
                  this.serverModuleLoaded &&
                  this.nativeElement.style.setProperty("display", ""),
                this.marshal.triggerUpdate(this.parentElement, "layout-gap");
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                h(T),
                h(ZQ),
                h(Ke),
                h(Je),
                h(ci),
                h(dn),
                h(Ko)
              );
            }),
            (t.ɵdir = y({ type: t, features: [x, ct] })),
            t
          );
        })();
      const Iv = new WeakMap(),
        JQ = [
          "fxShow",
          "fxShow.print",
          "fxShow.xs",
          "fxShow.sm",
          "fxShow.md",
          "fxShow.lg",
          "fxShow.xl",
          "fxShow.lt-sm",
          "fxShow.lt-md",
          "fxShow.lt-lg",
          "fxShow.lt-xl",
          "fxShow.gt-xs",
          "fxShow.gt-sm",
          "fxShow.gt-md",
          "fxShow.gt-lg",
          "fxHide",
          "fxHide.print",
          "fxHide.xs",
          "fxHide.sm",
          "fxHide.md",
          "fxHide.lg",
          "fxHide.xl",
          "fxHide.lt-sm",
          "fxHide.lt-md",
          "fxHide.lt-lg",
          "fxHide.lt-xl",
          "fxHide.gt-xs",
          "fxHide.gt-sm",
          "fxHide.gt-md",
          "fxHide.gt-lg",
        ];
      let fI = (() => {
          class t extends XQ {
            constructor() {
              super(...arguments), (this.inputs = JQ);
            }
          }
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "fxShow", ""],
                ["", "fxShow.print", ""],
                ["", "fxShow.xs", ""],
                ["", "fxShow.sm", ""],
                ["", "fxShow.md", ""],
                ["", "fxShow.lg", ""],
                ["", "fxShow.xl", ""],
                ["", "fxShow.lt-sm", ""],
                ["", "fxShow.lt-md", ""],
                ["", "fxShow.lt-lg", ""],
                ["", "fxShow.lt-xl", ""],
                ["", "fxShow.gt-xs", ""],
                ["", "fxShow.gt-sm", ""],
                ["", "fxShow.gt-md", ""],
                ["", "fxShow.gt-lg", ""],
                ["", "fxHide", ""],
                ["", "fxHide.print", ""],
                ["", "fxHide.xs", ""],
                ["", "fxHide.sm", ""],
                ["", "fxHide.md", ""],
                ["", "fxHide.lg", ""],
                ["", "fxHide.xl", ""],
                ["", "fxHide.lt-sm", ""],
                ["", "fxHide.lt-md", ""],
                ["", "fxHide.lt-lg", ""],
                ["", "fxHide.lt-xl", ""],
                ["", "fxHide.gt-xs", ""],
                ["", "fxHide.gt-sm", ""],
                ["", "fxHide.gt-md", ""],
                ["", "fxHide.gt-lg", ""],
              ],
              inputs: {
                fxShow: "fxShow",
                "fxShow.print": "fxShow.print",
                "fxShow.xs": "fxShow.xs",
                "fxShow.sm": "fxShow.sm",
                "fxShow.md": "fxShow.md",
                "fxShow.lg": "fxShow.lg",
                "fxShow.xl": "fxShow.xl",
                "fxShow.lt-sm": "fxShow.lt-sm",
                "fxShow.lt-md": "fxShow.lt-md",
                "fxShow.lt-lg": "fxShow.lt-lg",
                "fxShow.lt-xl": "fxShow.lt-xl",
                "fxShow.gt-xs": "fxShow.gt-xs",
                "fxShow.gt-sm": "fxShow.gt-sm",
                "fxShow.gt-md": "fxShow.gt-md",
                "fxShow.gt-lg": "fxShow.gt-lg",
                fxHide: "fxHide",
                "fxHide.print": "fxHide.print",
                "fxHide.xs": "fxHide.xs",
                "fxHide.sm": "fxHide.sm",
                "fxHide.md": "fxHide.md",
                "fxHide.lg": "fxHide.lg",
                "fxHide.xl": "fxHide.xl",
                "fxHide.lt-sm": "fxHide.lt-sm",
                "fxHide.lt-md": "fxHide.lt-md",
                "fxHide.lt-lg": "fxHide.lt-lg",
                "fxHide.lt-xl": "fxHide.lt-xl",
                "fxHide.gt-xs": "fxHide.gt-xs",
                "fxHide.gt-sm": "fxHide.gt-sm",
                "fxHide.gt-md": "fxHide.gt-md",
                "fxHide.gt-lg": "fxHide.gt-lg",
              },
              features: [x],
            })),
            t
          );
        })(),
        yI = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Sv] })),
            t
          );
        })(),
        x9 = (() => {
          class t extends pt {
            constructor(e) {
              super(), (this.layoutConfig = e);
            }
            buildStyles(e, i) {
              let [r, s, ...o] = e.split(" "),
                a = o.join(" ");
              const l = i.direction.indexOf("column") > -1 ? "column" : "row",
                c = jl(l) ? "max-width" : "max-height",
                d = jl(l) ? "min-width" : "min-height",
                u = String(a).indexOf("calc") > -1,
                f = u || "auto" === a,
                p = String(a).indexOf("%") > -1 && !u,
                m =
                  String(a).indexOf("px") > -1 ||
                  String(a).indexOf("rem") > -1 ||
                  String(a).indexOf("em") > -1 ||
                  String(a).indexOf("vw") > -1 ||
                  String(a).indexOf("vh") > -1;
              let g = u || m;
              (r = "0" == r ? 0 : r), (s = "0" == s ? 0 : s);
              const v = !r && !s;
              let b = {};
              const k = {
                "max-width": null,
                "max-height": null,
                "min-width": null,
                "min-height": null,
              };
              switch (a || "") {
                case "":
                  const w = !1 !== this.layoutConfig.useColumnBasisZero;
                  a = "row" === l ? "0%" : w ? "0.000000001px" : "auto";
                  break;
                case "initial":
                case "nogrow":
                  (r = 0), (a = "auto");
                  break;
                case "grow":
                  a = "100%";
                  break;
                case "noshrink":
                  (s = 0), (a = "auto");
                  break;
                case "auto":
                  break;
                case "none":
                  (r = 0), (s = 0), (a = "auto");
                  break;
                default:
                  !g && !p && !isNaN(a) && (a += "%"),
                    "0%" === a && (g = !0),
                    "0px" === a && (a = "0%"),
                    (b = hr(
                      k,
                      u
                        ? {
                            "flex-grow": r,
                            "flex-shrink": s,
                            "flex-basis": g ? a : "100%",
                          }
                        : { flex: `${r} ${s} ${g ? a : "100%"}` }
                    ));
              }
              return (
                b.flex ||
                  b["flex-grow"] ||
                  (b = hr(
                    k,
                    u
                      ? { "flex-grow": r, "flex-shrink": s, "flex-basis": a }
                      : { flex: `${r} ${s} ${a}` }
                  )),
                "0%" !== a &&
                  "0px" !== a &&
                  "0.000000001px" !== a &&
                  "auto" !== a &&
                  ((b[d] = v || (g && r) ? a : null),
                  (b[c] = v || (!f && s) ? a : null)),
                b[d] || b[c]
                  ? i.hasWrap &&
                    (b[u ? "flex-basis" : "flex"] = b[c]
                      ? u
                        ? b[c]
                        : `${r} ${s} ${b[c]}`
                      : u
                      ? b[d]
                      : `${r} ${s} ${b[d]}`)
                  : (b = hr(
                      k,
                      u
                        ? { "flex-grow": r, "flex-shrink": s, "flex-basis": a }
                        : { flex: `${r} ${s} ${a}` }
                    )),
                hr(b, { "box-sizing": "border-box" })
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(ci));
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      const w9 = [
        "fxFlex",
        "fxFlex.xs",
        "fxFlex.sm",
        "fxFlex.md",
        "fxFlex.lg",
        "fxFlex.xl",
        "fxFlex.lt-sm",
        "fxFlex.lt-md",
        "fxFlex.lt-lg",
        "fxFlex.lt-xl",
        "fxFlex.gt-xs",
        "fxFlex.gt-sm",
        "fxFlex.gt-md",
        "fxFlex.gt-lg",
      ];
      let D9 = (() => {
          class t extends rt {
            constructor(e, i, r, s, o) {
              super(e, s, i, o),
                (this.layoutConfig = r),
                (this.marshal = o),
                (this.DIRECTIVE_KEY = "flex"),
                (this.direction = void 0),
                (this.wrap = void 0),
                (this.flexGrow = "1"),
                (this.flexShrink = "1"),
                this.init();
            }
            get shrink() {
              return this.flexShrink;
            }
            set shrink(e) {
              (this.flexShrink = e || "1"), this.triggerReflow();
            }
            get grow() {
              return this.flexGrow;
            }
            set grow(e) {
              (this.flexGrow = e || "1"), this.triggerReflow();
            }
            ngOnInit() {
              this.parentElement &&
                (this.marshal
                  .trackValue(this.parentElement, "layout")
                  .pipe(ye(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this)),
                this.marshal
                  .trackValue(this.nativeElement, "layout-align")
                  .pipe(ye(this.destroySubject))
                  .subscribe(this.triggerReflow.bind(this)));
            }
            onLayoutChange(e) {
              const r = e.value.split(" ");
              (this.direction = r[0]),
                (this.wrap = void 0 !== r[1] && "wrap" === r[1]),
                this.triggerUpdate();
            }
            updateWithValue(e) {
              void 0 === this.direction &&
                (this.direction = this.getFlexFlowDirection(
                  this.parentElement,
                  !1 !== this.layoutConfig.addFlexToParent
                )),
                void 0 === this.wrap &&
                  (this.wrap = this.hasWrap(this.parentElement));
              const r = this.direction,
                s = r.startsWith("row"),
                o = this.wrap;
              s && o
                ? (this.styleCache = E9)
                : s && !o
                ? (this.styleCache = M9)
                : !s && o
                ? (this.styleCache = A9)
                : !s && !o && (this.styleCache = S9);
              const l = cI(
                String(e).replace(";", ""),
                this.flexGrow,
                this.flexShrink
              );
              this.addStyles(l.join(" "), { direction: r, hasWrap: o });
            }
            triggerReflow() {
              const e = this.activatedValue;
              if (void 0 !== e) {
                const i = cI(e + "", this.flexGrow, this.flexShrink);
                this.marshal.updateElement(
                  this.nativeElement,
                  this.DIRECTIVE_KEY,
                  i.join(" ")
                );
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Ke), h(ci), h(x9), h(Je));
            }),
            (t.ɵdir = y({
              type: t,
              inputs: {
                shrink: ["fxShrink", "shrink"],
                grow: ["fxGrow", "grow"],
              },
              features: [x],
            })),
            t
          );
        })(),
        wI = (() => {
          class t extends D9 {
            constructor() {
              super(...arguments), (this.inputs = w9);
            }
          }
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "fxFlex", ""],
                ["", "fxFlex.xs", ""],
                ["", "fxFlex.sm", ""],
                ["", "fxFlex.md", ""],
                ["", "fxFlex.lg", ""],
                ["", "fxFlex.xl", ""],
                ["", "fxFlex.lt-sm", ""],
                ["", "fxFlex.lt-md", ""],
                ["", "fxFlex.lt-lg", ""],
                ["", "fxFlex.lt-xl", ""],
                ["", "fxFlex.gt-xs", ""],
                ["", "fxFlex.gt-sm", ""],
                ["", "fxFlex.gt-md", ""],
                ["", "fxFlex.gt-lg", ""],
              ],
              inputs: {
                fxFlex: "fxFlex",
                "fxFlex.xs": "fxFlex.xs",
                "fxFlex.sm": "fxFlex.sm",
                "fxFlex.md": "fxFlex.md",
                "fxFlex.lg": "fxFlex.lg",
                "fxFlex.xl": "fxFlex.xl",
                "fxFlex.lt-sm": "fxFlex.lt-sm",
                "fxFlex.lt-md": "fxFlex.lt-md",
                "fxFlex.lt-lg": "fxFlex.lt-lg",
                "fxFlex.lt-xl": "fxFlex.lt-xl",
                "fxFlex.gt-xs": "fxFlex.gt-xs",
                "fxFlex.gt-sm": "fxFlex.gt-sm",
                "fxFlex.gt-md": "fxFlex.gt-md",
                "fxFlex.gt-lg": "fxFlex.gt-lg",
              },
              features: [x],
            })),
            t
          );
        })();
      const M9 = new Map(),
        S9 = new Map(),
        E9 = new Map(),
        A9 = new Map(),
        q9 = {
          margin: 0,
          width: "100%",
          height: "100%",
          "min-width": "100%",
          "min-height": "100%",
        };
      let Y9 = (() => {
          class t extends pt {
            buildStyles(e) {
              return q9;
            }
          }
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        DI = (() => {
          class t extends rt {
            constructor(e, i, r, s) {
              super(e, r, i, s), (this.styleCache = Q9), this.addStyles("");
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(T), h(Ke), h(Y9), h(Je));
            }),
            (t.ɵdir = y({
              type: t,
              selectors: [
                ["", "fxFill", ""],
                ["", "fxFlexFill", ""],
              ],
              features: [x],
            })),
            t
          );
        })();
      const Q9 = new Map();
      let MI = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Sv, Ds] })),
            t
          );
        })(),
        OI = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Sv] })),
            t
          );
        })(),
        Mh = (() => {
          class t {
            constructor(e, i) {
              Eo(i) &&
                !e &&
                console.warn(
                  "Warning: Flex Layout loaded on the server without FlexLayoutServerModule"
                );
            }
            static withConfig(e, i = []) {
              return {
                ngModule: t,
                providers: e.serverLoaded
                  ? [
                      { provide: ci, useValue: { ...Ev, ...e } },
                      { provide: Av, useValue: i, multi: !0 },
                      { provide: Ko, useValue: !0 },
                    ]
                  : [
                      { provide: ci, useValue: { ...Ev, ...e } },
                      { provide: Av, useValue: i, multi: !0 },
                    ],
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_(Ko), _(dn));
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [MI, yI, OI, MI, yI, OI] })),
            t
          );
        })(),
        FI = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Mh, Hl, vl, nt] })),
            t
          );
        })(),
        T7 = (() => {
          class t {
            intercept(e, i) {
              return (
                /^(http|https):/i.test(e.url) ||
                  (e = e.clone({ url: "https://api.chucknorris.io" + e.url })),
                i.handle(e)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })();
      var pr = (() => {
        return (
          ((t = pr || (pr = {}))[(t.Off = 0)] = "Off"),
          (t[(t.Error = 1)] = "Error"),
          (t[(t.Warning = 2)] = "Warning"),
          (t[(t.Info = 3)] = "Info"),
          (t[(t.Debug = 4)] = "Debug"),
          pr
        );
        var t;
      })();
      class Fi {
        constructor(n) {
          this.source = n;
        }
        static enableProductionMode() {
          Fi.level = pr.Warning;
        }
        debug(...n) {
          this.log(console.log, pr.Debug, n);
        }
        info(...n) {
          this.log(console.info, pr.Info, n);
        }
        warn(...n) {
          this.log(console.warn, pr.Warning, n);
        }
        error(...n) {
          this.log(console.error, pr.Error, n);
        }
        log(n, e, i) {
          if (e <= Fi.level) {
            const r = this.source ? ["[" + this.source + "]"].concat(i) : i;
            n.apply(console, r),
              Fi.outputs.forEach((s) => s.apply(s, [this.source, e, ...i]));
          }
        }
      }
      (Fi.level = pr.Debug), (Fi.outputs = []);
      new Fi("ErrorHandlerInterceptor");
      let R7 = (() => {
          class t {
            intercept(e, i) {
              return i.handle(e).pipe(Mi((r) => this.errorHandler(r)));
            }
            errorHandler(e) {
              throw e;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
            t
          );
        })(),
        O7 = (() => {
          class t extends Ig {
            shouldDetach(e) {
              return !1;
            }
            store(e, i) {}
            shouldAttach(e) {
              return !1;
            }
            retrieve(e) {
              return null;
            }
            shouldReuseRoute(e, i) {
              return (
                e.routeConfig === i.routeConfig ||
                Boolean(
                  e.routeConfig?.component &&
                    e.routeConfig?.component === i.routeConfig?.component
                )
              );
            }
          }
          return (
            (t.ɵfac = (function () {
              let n;
              return function (i) {
                return (n || (n = I(t)))(i || t);
              };
            })()),
            (t.ɵprov = D({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const F7 = Zl,
        L7 = Symbol("__destroy"),
        PI = Symbol("__decoratorApplied");
      function LI(t) {
        return "string" == typeof t ? Symbol(`__destroy__${t}`) : L7;
      }
      function NI(t, n) {
        t[n] || (t[n] = new B());
      }
      function BI(t, n) {
        t[n] && (t[n].next(), t[n].complete(), (t[n] = null));
      }
      function VI(t) {
        t instanceof Ve && t.unsubscribe();
      }
      function HI(t, n) {
        return function () {
          if (
            (t && t.call(this),
            BI(this, LI()),
            n.arrayName &&
              (function B7(t) {
                Array.isArray(t) && t.forEach(VI);
              })(this[n.arrayName]),
            n.checkProperties)
          )
            for (const e in this) n.blackList?.includes(e) || VI(this[e]);
        };
      }
      Symbol("CheckerHasBeenSet");
      let Y7 = (() => {
          class t {
            constructor() {
              (this.isLoading = !1), (this.size = 1);
            }
            ngOnInit() {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["app-loader"]],
              inputs: {
                isLoading: "isLoading",
                size: "size",
                message: "message",
              },
              decls: 8,
              vars: 4,
              consts: [
                [3, "hidden"],
                ["mode", "indeterminate", 3, "strokeWidth", "diameter"],
                [1, "message"],
              ],
              template: function (e, i) {
                1 & e &&
                  (R(0, "div", 0),
                  E(1, "\n  "),
                  Me(2, "mat-progress-spinner", 1),
                  E(3, "\n  "),
                  R(4, "span", 2),
                  E(5),
                  F(),
                  E(6, "\n"),
                  F(),
                  E(7, "\n")),
                  2 & e &&
                    (_e("hidden", !i.isLoading),
                    de(2),
                    _e("strokeWidth", 2)("diameter", 32 * i.size),
                    de(3),
                    Ba(i.message));
              },
              dependencies: [lr],
              styles: [
                ".mat-progress-spinner[_ngcontent-%COMP%]{display:inline-block;vertical-align:middle}.message[_ngcontent-%COMP%]{margin-left:.5em}",
              ],
            })),
            t
          );
        })(),
        zI = (() => {
          class t {
            constructor(e) {
              (this.router = e),
                (this.isLoading = !1),
                (this.noCount = 0),
                (this.buttonSize = 20),
                (this.windowWidth = window.innerWidth);
            }
            ngOnInit() {
              this.isLoading = !1;
            }
            action() {
              this.router.navigate(["/yes"]);
            }
            handleNoClick() {
              (this.noCount = this.noCount + 1),
                this.noCount < 25 && (this.buttonSize += 5);
            }
            getNoButtonText() {
              const e = [
                "No",
                "Are you sure?",
                "Really sure?",
                "Think again!",
                "Last chance!",
                "Surely not?",
                "You might regret this!",
                "Give it another thought!",
                "Are you absolutely certain?",
                "This could be a mistake!",
                "Have a heart!",
                "Don't be so cold!",
                "Change of heart?",
                "Wouldn't you reconsider?",
                "Is that your final answer?",
                "You're breaking my heart ;(",
              ];
              return e[Math.min(this.noCount, e.length - 1)];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(Pt));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["app-home"]],
              decls: 34,
              vars: 8,
              consts: [
                [1, "container"],
                [
                  "src",
                  "assets/tutagold.webp",
                  "alt",
                  "angular logo",
                  1,
                  "logo",
                ],
                ["translate", ""],
                [3, "isLoading", "size"],
                [3, "hidden"],
                [1, "flex-container"],
                ["mat-raised-button", "", "color", "primary", 3, "click"],
                [
                  "mat-raised-button",
                  "",
                  "color",
                  "accent",
                  "className",
                  "no-button",
                  3,
                  "click",
                ],
              ],
              template: function (e, i) {
                1 & e &&
                  (R(0, "div", 0),
                  E(1, "\n  "),
                  R(2, "mat-card"),
                  E(3, "\n    "),
                  R(4, "p"),
                  E(5, "\n      "),
                  Me(6, "img", 1),
                  E(7, "\n    "),
                  F(),
                  E(8, "\n    "),
                  R(9, "mat-card-content"),
                  E(10, "\n      "),
                  R(11, "mat-card-title", 2),
                  E(12, "Will you be my Valentine?"),
                  F(),
                  E(13, "\n      "),
                  R(14, "mat-card-subtitle"),
                  E(15, "\n        "),
                  Me(16, "app-loader", 3),
                  E(17, "\n        "),
                  R(18, "q", 4),
                  E(19, "Please tell me yes"),
                  F(),
                  E(20, "\n      "),
                  F(),
                  E(21, "\n    "),
                  F(),
                  E(22, "\n  "),
                  F(),
                  E(23, "\n  "),
                  R(24, "div", 5),
                  E(25, "\n    "),
                  R(26, "button", 6),
                  he("click", function () {
                    return i.action();
                  }),
                  E(27, "\n      YES\n    "),
                  F(),
                  E(28, "\n    "),
                  R(29, "button", 7),
                  he("click", function () {
                    return i.handleNoClick();
                  }),
                  E(30),
                  F(),
                  E(31, "\n  "),
                  F(),
                  E(32, "\n"),
                  F(),
                  E(33, "\n")),
                  2 & e &&
                    (de(16),
                    _e("isLoading", i.isLoading)("size", 1.5),
                    de(2),
                    _e("hidden", i.isLoading),
                    de(8),
                    cn("font-size", i.buttonSize, "px")(
                      "padding",
                      i.buttonSize / 2,
                      "px"
                    ),
                    de(4),
                    xi(
                      "\n      ",
                      0 === i.noCount ? "No" : i.getNoButtonText(),
                      "\n    "
                    ));
              },
              dependencies: [SE, Y7, Y_, _k, pk, mk, gk],
              styles: [
                '@charset "UTF-8";.container[_ngcontent-%COMP%]{text-align:center;padding:1em}.logo[_ngcontent-%COMP%]{width:300px;margin:0 auto}q[_ngcontent-%COMP%]{font-style:italic;quotes:"\\ab  " " \\bb"}.flex-container[_ngcontent-%COMP%]{margin-top:30px}',
              ],
            })),
            t
          );
        })();
      const Q7 = JSON.parse(
          '{"APP_NAME":"Valentine Silvia","About":"Informazioni","Hello world !":"Ciao Mondo !","Home":"Will you be my Valentine?","Version":"Versione"}'
        ),
        K7 = new Fi("I18nService"),
        $I = "language";
      let WI = (() => {
        class t {
          constructor(e) {
            (this.translateService = e), e.setTranslation("it-IT", Q7);
          }
          init(e, i) {
            (this.defaultLanguage = e),
              (this.supportedLanguages = i),
              (this.language = ""),
              (this.langChangeSubscription =
                this.translateService.onLangChange.subscribe((r) => {
                  localStorage.setItem($I, r.lang);
                }));
          }
          destroy() {
            this.langChangeSubscription &&
              this.langChangeSubscription.unsubscribe();
          }
          set language(e) {
            let i =
                e ||
                localStorage.getItem($I) ||
                this.translateService.getBrowserCultureLang() ||
                "",
              r = this.supportedLanguages.includes(i);
            i &&
              !r &&
              ((i = i.split("-")[0]),
              (i = this.supportedLanguages.find((s) => s.startsWith(i)) || ""),
              (r = Boolean(i))),
              (!i || !r) && (i = this.defaultLanguage),
              K7.debug(`Language set to ${(e = i)}`),
              this.translateService.use(e);
          }
          get language() {
            return this.translateService.currentLang;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_(_l));
          }),
          (t.ɵprov = D({ token: t, factory: t.ɵfac, providedIn: "root" })),
          t
        );
      })();
      function Z7(t, n) {
        1 & t &&
          (R(0, "button", 4),
          E(1, "\n  "),
          R(2, "mat-icon"),
          E(3, "language"),
          F(),
          E(4, "\n"),
          F()),
          2 & t && (Ct(), _e("matMenuTriggerFor", ln(6)));
      }
      function X7(t, n) {
        if (
          (1 & t && (E(0, "\n  "), R(1, "button", 5), E(2), F(), E(3, "\n")),
          2 & t)
        ) {
          const e = Ct(),
            i = ln(6);
          de(1),
            _e("matMenuTriggerFor", i),
            de(1),
            xi("\n    ", e.currentLanguage, "\n  ");
        }
      }
      function J7(t, n) {
        if (1 & t) {
          const e = vo();
          R(0, "button", 6),
            he("click", function () {
              const s = hi(e).$implicit;
              return fi(Ct().setLanguage(s));
            }),
            E(1),
            F();
        }
        if (2 & t) {
          const e = n.$implicit;
          de(1), xi("\n    ", e, "\n  ");
        }
      }
      let eZ = (() => {
          class t {
            constructor(e) {
              (this.i18nService = e), (this.icon = !1);
            }
            ngOnInit() {}
            setLanguage(e) {
              this.i18nService.language = e;
            }
            get currentLanguage() {
              return this.i18nService.language;
            }
            get languages() {
              return this.i18nService.supportedLanguages;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(WI));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["app-language-selector"]],
              inputs: { icon: "icon" },
              decls: 11,
              vars: 3,
              consts: [
                [
                  "mat-icon-button",
                  "",
                  3,
                  "matMenuTriggerFor",
                  4,
                  "ngIf",
                  "ngIfElse",
                ],
                ["text", ""],
                ["languageMenu", "matMenu"],
                ["mat-menu-item", "", 3, "click", 4, "ngFor", "ngForOf"],
                ["mat-icon-button", "", 3, "matMenuTriggerFor"],
                [
                  "mat-raised-button",
                  "",
                  "color",
                  "primary",
                  3,
                  "matMenuTriggerFor",
                ],
                ["mat-menu-item", "", 3, "click"],
              ],
              template: function (e, i) {
                if (
                  (1 & e &&
                    (kt(0, Z7, 5, 1, "button", 0),
                    E(1, "\n"),
                    kt(2, X7, 4, 2, "ng-template", null, 1, Zx),
                    E(4, "\n"),
                    R(5, "mat-menu", null, 2),
                    E(7, "\n  "),
                    kt(8, J7, 2, 1, "button", 3),
                    E(9, "\n"),
                    F(),
                    E(10, "\n")),
                  2 & e)
                ) {
                  const r = ln(3);
                  _e("ngIf", i.icon)("ngIfElse", r),
                    de(8),
                    _e("ngForOf", i.languages);
                }
              },
              dependencies: [aD, So, Y_, Yk, H6, lh, z6],
            })),
            t
          );
        })(),
        tZ = (() => {
          class t {
            constructor(e, i, r) {
              (this.router = e), (this.titleService = i), (this.breakpoint = r);
            }
            ngOnInit() {}
            get isMobile() {
              return (
                this.breakpoint.isMatched(
                  "(min-width: 600px) and (max-width: 959.98px)"
                ) || this.breakpoint.isMatched("(max-width: 599.98px)")
              );
            }
            get title() {
              return this.titleService.getTitle();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(h(Pt), h(bd), h(SA));
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["app-shell"]],
              decls: 53,
              vars: 5,
              consts: [
                ["fxFlex", ""],
                ["fxFill", ""],
                [
                  "ngClass.gt-sm",
                  "has-border",
                  3,
                  "mode",
                  "opened",
                  "disableClose",
                ],
                ["sidenav", ""],
                ["color", "primary"],
                ["translate", ""],
                [3, "icon"],
                [
                  "mat-list-item",
                  "",
                  "routerLink",
                  "/home",
                  "routerLinkActive",
                  "active",
                  3,
                  "click",
                ],
                ["color", "primary", 1, "mat-elevation-z6"],
                [
                  "mat-icon-button",
                  "",
                  "fxHide.gt-sm",
                  "",
                  1,
                  "menu-button",
                  3,
                  "click",
                ],
              ],
              template: function (e, i) {
                if (1 & e) {
                  const r = vo();
                  R(0, "div", 0),
                    E(1, "\n  "),
                    R(2, "mat-sidenav-container", 1),
                    E(3, "\n    "),
                    R(4, "mat-sidenav", 2, 3),
                    E(6, "\n      "),
                    R(7, "mat-toolbar", 4),
                    E(8, "\n        "),
                    R(9, "span", 5),
                    E(10, "APP_NAME"),
                    F(),
                    E(11, "\n        "),
                    Me(12, "div", 0),
                    E(13, "\n        "),
                    Me(14, "div"),
                    E(15, "\n        "),
                    Me(16, "app-language-selector", 6),
                    E(17, "\n      "),
                    F(),
                    E(18, "\n      "),
                    R(19, "nav"),
                    E(20, "\n        "),
                    R(21, "mat-list"),
                    E(22, "\n          "),
                    Me(23, "mat-divider"),
                    E(24, "\n          "),
                    R(25, "a", 7),
                    he("click", function () {
                      hi(r);
                      const o = ln(5);
                      return fi(i.isMobile && o.close());
                    }),
                    E(26, "\n            "),
                    R(27, "span", 5),
                    E(28, "Home"),
                    F(),
                    E(29, "\n          "),
                    F(),
                    E(30, "\n        "),
                    F(),
                    E(31, "\n      "),
                    F(),
                    E(32, "\n    "),
                    F(),
                    E(33, "\n    "),
                    R(34, "mat-sidenav-content"),
                    E(35, "\n      "),
                    R(36, "mat-toolbar", 8),
                    E(37, "\n        "),
                    R(38, "button", 9),
                    he("click", function () {
                      return hi(r), fi(ln(5).toggle());
                    }),
                    E(39, "\n          "),
                    R(40, "mat-icon"),
                    E(41, "menu"),
                    F(),
                    E(42, "\n        "),
                    F(),
                    E(43, "\n        "),
                    R(44, "span"),
                    E(45),
                    F(),
                    E(46, "\n      "),
                    F(),
                    E(47, "\n      "),
                    Me(48, "router-outlet"),
                    E(49, "\n    "),
                    F(),
                    E(50, "\n  "),
                    F(),
                    E(51, "\n"),
                    F(),
                    E(52, "\n");
                }
                2 & e &&
                  (de(4),
                  _e("mode", i.isMobile ? "over" : "side")(
                    "opened",
                    !i.isMobile
                  )("disableClose", !i.isMobile),
                  de(12),
                  _e("icon", !0),
                  de(29),
                  Ba(i.title));
              },
              dependencies: [
                SE,
                DI,
                wI,
                fI,
                hI,
                Y_,
                n6,
                Yk,
                S6,
                E6,
                vT,
                yT,
                av,
                oQ,
                eZ,
                qd,
                iu,
                qS,
              ],
              styles: [
                "[_nghost-%COMP%]{display:flex;flex:1}.mat-sidenav[_ngcontent-%COMP%]{min-width:270px;max-width:28%}.has-border[_ngcontent-%COMP%]{border-right:1px solid rgba(0,0,0,.12)}.mat-list[_ngcontent-%COMP%]{padding-top:0}.mat-list-item[_ngcontent-%COMP%]{text-decoration:none}.mat-list-item[_ngcontent-%COMP%]:hover{background:rgba(0,0,0,.05)}.menu-button[_ngcontent-%COMP%]{margin-right:1rem}",
              ],
            })),
            t
          );
        })(),
        iZ = (() => {
          class t {
            constructor() {}
            ngOnInit() {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = te({
              type: t,
              selectors: [["app-yes"]],
              standalone: !0,
              features: [Ix],
              decls: 38,
              vars: 0,
              consts: [
                [1, "flex"],
                [1, "example-card"],
                ["mat-card-avatar", "", 1, "example-header-image"],
                [
                  "mat-card-image",
                  "",
                  "src",
                  "https://i.giphy.com/2P8f8AgaeCyOObgjM0.webp",
                ],
                ["mat-card-image", "", "src", "assets/pizza.png"],
              ],
              template: function (e, i) {
                1 & e &&
                  (R(0, "div", 0),
                  E(1, "\n  "),
                  R(2, "mat-card", 1),
                  E(3, "\n    "),
                  R(4, "mat-card-header"),
                  E(5, "\n      "),
                  Me(6, "div", 2),
                  E(7, "\n      "),
                  R(8, "mat-card-title"),
                  E(9, "SIIIIIIII MENOMALE"),
                  F(),
                  E(10, "\n      "),
                  R(11, "mat-card-subtitle"),
                  E(12, "Ti amo"),
                  F(),
                  E(13, "\n    "),
                  F(),
                  E(14, "\n    "),
                  Me(15, "img", 3),
                  E(16, "\n    "),
                  R(17, "mat-card-content"),
                  E(18, "\n      "),
                  R(19, "p"),
                  E(20, "LA SIAAAAAAAAAAAAAAAAAADDDD"),
                  F(),
                  E(21, "\n    "),
                  F(),
                  E(22, "\n  "),
                  F(),
                  E(23, "\n\n  "),
                  R(24, "mat-card", 1),
                  E(25, "\n    "),
                  R(26, "mat-card-header"),
                  E(27, "\n      "),
                  Me(28, "div", 2),
                  E(29, "\n      "),
                  R(30, "mat-card-title"),
                  E(
                    31,
                    "Domani, 14 febbraio, sei invitata alle 20:15 per gustare un'ottima pizza! "
                  ),
                  F(),
                  E(32, "\n    "),
                  F(),
                  E(33, "\n    "),
                  Me(34, "img", 4),
                  E(35, "\n  "),
                  F(),
                  E(36, "\n"),
                  F(),
                  E(37, "\n"));
              },
              dependencies: [Q_, _k, W4, pk, mk, gk, z4, $4, Es],
              styles: [
                ".flex[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;align-content:center;flex-wrap:nowrap;flex-direction:column}.example-card[_ngcontent-%COMP%]{width:90%;margin-top:30px}",
              ],
            })),
            t
          );
        })();
      const rZ = [
        class nZ {
          static childRoutes(n) {
            return { path: "", component: tZ, children: n };
          }
        }.childRoutes([
          { path: "", redirectTo: "/home", pathMatch: "full" },
          { path: "home", component: zI, data: { title: "Home" } },
          { path: "yes", component: iZ, data: { title: "Yesssss" } },
        ]),
      ];
      let sZ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Fo.forChild(rZ), Fo] })),
            t
          );
        })(),
        oZ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, vl, FI, Mh, Hl, sZ] })),
            t
          );
        })(),
        aZ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, vl, Mh, Hl] })),
            t
          );
        })(),
        lZ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [nt, vl, Mh, Hl, aZ, Fo] })),
            t
          );
        })();
      const cZ = new Fi("App");
      let Rs = class {
        constructor(n, e, i, r, s) {
          (this.router = n),
            (this.activatedRoute = e),
            (this.titleService = i),
            (this.translateService = r),
            (this.i18nService = s);
        }
        ngOnInit() {
          Fi.enableProductionMode(),
            cZ.debug("init"),
            this.i18nService.init("it-IT", Ts_supportedLanguages);
          const n = this.router.events.pipe(ve((e) => e instanceof Or));
          yt(this.translateService.onLangChange, n)
            .pipe(
              q(() => {
                let e = this.activatedRoute;
                for (; e.firstChild; ) e = e.firstChild;
                return e;
              }),
              ve((e) => "primary" === e.outlet),
              ht((e) => e.data),
              (function W7(t, n) {
                return (e) => {
                  const i = LI(n);
                  return (
                    "string" == typeof n
                      ? (function $7(t, n, e) {
                          const i = t[n];
                          NI(t, e),
                            (t[n] = function () {
                              i.apply(this, arguments), BI(this, e), (t[n] = i);
                            });
                        })(t, n, i)
                      : NI(t, i),
                    e.pipe(ye(t[i]))
                  );
                };
              })(this)
            )
            .subscribe((e) => {
              const i = e.title;
              i && this.titleService.setTitle(this.translateService.instant(i));
            });
        }
        ngOnDestroy() {
          this.i18nService.destroy();
        }
      };
      (Rs.ɵfac = function (n) {
        return new (n || Rs)(h(Pt), h(_s), h(bd), h(_l), h(WI));
      }),
        (Rs.ɵcmp = te({
          type: Rs,
          selectors: [["app-root"]],
          decls: 2,
          vars: 0,
          template: function (n, e) {
            1 & n && (Me(0, "router-outlet"), E(1, "\n"));
          },
          dependencies: [qd],
          styles: ["[_nghost-%COMP%]{display:flex;flex:1}"],
        })),
        (Rs = (function Gv(t, n, e, i) {
          var o,
            r = arguments.length,
            s =
              r < 3
                ? n
                : null === i
                ? (i = Object.getOwnPropertyDescriptor(n, e))
                : i;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            s = Reflect.decorate(t, n, e, i);
          else
            for (var a = t.length - 1; a >= 0; a--)
              (o = t[a]) &&
                (s = (r < 3 ? o(s) : r > 3 ? o(n, e, s) : o(n, e)) || s);
          return r > 3 && s && Object.defineProperty(n, e, s), s;
        })(
          [
            (function j7(t = {}) {
              return (n) => {
                !(function P7(t) {
                  return !!t[F7];
                })(n)
                  ? (function V7(t, n) {
                      t.prototype.ngOnDestroy = HI(t.prototype.ngOnDestroy, n);
                    })(n, t)
                  : (function H7(t, n) {
                      const e = t.ɵpipe;
                      e.onDestroy = HI(e.onDestroy, n);
                    })(n, t),
                  (function N7(t) {
                    t.prototype[PI] = !0;
                  })(n);
              };
            })(),
          ],
          Rs
        ));
      const dZ = [
        { path: "", redirectTo: "/home", pathMatch: "full" },
        { path: "home", component: zI },
      ];
      let uZ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t })),
            (t.ɵinj = O({ imports: [Fo.forRoot(dZ), Fo] })),
            t
          );
        })(),
        hZ = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = P({ type: t, bootstrap: [Rs] })),
            (t.ɵinj = O({
              providers: [
                { provide: ou, useClass: T7, multi: !0 },
                { provide: ou, useClass: R7, multi: !0 },
                { provide: Ig, useClass: O7 },
              ],
              imports: [
                ID,
                T3.register("./ngsw-worker.js", { enabled: true }),
                EG,
                d3,
                Fo,
                vl.forRoot(),
                R5,
                Hl,
                FI,
                lZ,
                oZ,
                uZ,
              ],
            })),
            t
          );
        })();
      (function JV() {
        Ow = !1;
      })(),
        uj()
          .bootstrapModule(hZ)
          .catch((t) => console.error(t));
    },
  },
  (we) => {
    we((we.s = 572));
  },
]);
